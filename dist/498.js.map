{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","./src/app/addproduct/addproduct.component.ts","./src/app/addproduct/addproduct.component.html","./src/app/detailsproduct.service.ts","./src/app/detailsproduit/detailsproduit.component.html","./src/app/detailsproduit/detailsproduit.component.ts","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/listdetailsproduct/listdetailsproduct.component.ts","./src/app/listdetailsproduct/listdetailsproduct.component.html","./src/app/listproduct/listproduct.component.ts","./src/app/listproduct/listproduct.component.html","./src/app/modals/detailproduit.ts","./src/app/modals/product.ts","./src/app/product.service.ts","./src/app/user-profile/user-profile.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;AACA;;AAEA,SAAS,8BAAT,CAAwC,EAAxC,EAA4C,GAA5C,EAA+C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC3D,+DAAoB,CAApB;AACH;AAAE;;AACH,IAAM,GAAG,GAAG,CAAC,GAAD,CAAZ;;;MACM,a;AACF,2BAAY,WAAZ,EAAuB;AAAA;;AACnB,WAAK,WAAL,GAAmB,WAAnB;AACH;AACD;;;;;aACA,iBAAK;AACD,aAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B;AACH;;;;;;AAEL,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,qDAAzB,CAAzB,CAAP;AAA+E,GAAxI;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAlC;AAA+D,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT;AAA1E,GAAzB,CAAnC;;;;;MAqBM,Y,GACF;AAAY;AAAqB,UAAjC,EAAyC;AAAA;;AACrC,SAAK,QAAL,GAAgB,QAAhB;AACH,G;;AAEL,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,EAAwB,gEAAyB,sDAAzB,CAAxB,CAAP;AAA+E,GAAtI;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD;AAAjC,GAAzB,CAAlC;;;AAWA;;;;;;AAMG;;AACH;;;AACA,IAAI,MAAM,GAAG,CAAb;AACA;;IACM,qB;;;AAEN;;;AACA,IAAM,UAAU,GAAG;AACf,QAAM,EAAE,QADO;AAEf,MAAI,EAAE,MAFS;AAGf,MAAI,EAAE,MAHS;AAIf,OAAK,EAAE;AAJQ,CAAnB;AAMA;;AACA,IAAM,sBAAsB,gBAAG,IAAI,yDAAJ,CAAmB,wBAAnB,CAA/B;;;MACM,O;AACF,qBAAY,QAAZ,EAAsB,cAAtB,EAAoC;AAAA;;AAChC,WAAK,QAAL,GAAgB,QAAhB;AACA;;AACA,WAAK,UAAL,GAAkB,KAAlB;AACA;;AACA,WAAK,gBAAL,GAAwB,IAAI,uDAAJ,EAAxB;AACA,WAAK,SAAL,GAAiB,IAAjB;AACA,WAAK,SAAL,GAAiB,KAAjB;AACA,WAAK,kBAAL,GAA0B,IAA1B;AACA,WAAK,YAAL,GAAoB,IAApB;AACA,WAAK,eAAL,GAAuB,cAAc,GAAG,cAAH,GAAoB,EAAzD;AACA,WAAK,4BAAL,GAAoC,KAAK,eAAL,CAAqB,2BAArB,KAAqD,KAAzF;AACH;AACD;;;;;WACA,eAAY;AACR,eAAO,KAAK,SAAZ;AACH,O;WACD,aAAa,KAAb,EAAkB;AACd,aAAK,SAAL,GAAiB,4EAAqB,CAAC,KAAD,CAAtC;AACH;AACD;;;;WACA,eAAY;AACR,eAAO,KAAK,SAAZ;AACH,O;WACD,aAAa,KAAb,EAAkB;AACd,aAAK,SAAL,GAAiB,4EAAqB,CAAC,KAAD,CAAtC;AACH;AACD;;;;WACA,eAAa;AACT,eAAO,KAAK,kBAAL,IAA2B,IAA3B,GAAkC,KAAK,oBAAL,EAAlC,GAAgE,KAAK,kBAA5E;AACH,O;WACD,aAAc,KAAd,EAAmB;AACf,aAAK,kBAAL,GAA0B,4EAAqB,CAAC,KAAD,CAA/C;AACH;;;aACD,gCAAoB;AAChB,eAAO,KAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,KAAjB,IAA0B,KAAK,UAAlD,GAA+D,KAAK,UAA3E;AACH;AACD;;;;WACA,eAAY;AACR,eAAO,KAAK,YAAL,IAAqB,IAArB,GAA4B,KAAK,gBAAL,EAA5B,GAAsD,KAAK,YAAlE;AACH,O;WACD,aAAa,KAAb,EAAkB;AACd,aAAK,YAAL,GAAoB,4EAAqB,CAAC,KAAD,CAAzC;AACH;;;aACD,4BAAgB;AACZ,eAAO,KAAK,WAAL,IAAoB,KAAK,WAAL,CAAiB,OAArC,IAAgD,KAAK,UAA5D;AACH;AACD;;;;aACA,kBAAM;AACF,aAAK,QAAL,CAAc,QAAd,GAAyB,IAAzB;AACH;AACD;;;;aACA,iBAAK;AACD,aAAK,UAAL,GAAkB,KAAlB;;AACA,YAAI,KAAK,kBAAL,IAA2B,IAA/B,EAAqC;AACjC,eAAK,kBAAL,GAA0B,KAA1B;AACH;;AACD,YAAI,KAAK,YAAL,IAAqB,IAAzB,EAA+B;AAC3B,eAAK,YAAL,GAAoB,KAApB;AACH;;AACD,YAAI,KAAK,WAAT,EAAsB;AAClB,eAAK,WAAL,CAAiB,KAAjB;AACH;AACJ;;;aACD,uBAAW;AACP;AACA;AACA,aAAK,QAAL,CAAc,aAAd;AACH;;;aACD,6BAAiB;AACb,YAAI,CAAC,KAAK,UAAV,EAAsB;AAClB,eAAK,UAAL,GAAkB,IAAlB;AACA,eAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B;AACH;AACJ;AACD;;;;aACA,sBAAU;AACN,YAAI,EAAJ,CADM,CAEN;AACA;;;AACA,eAAO,CAAC,EAAE,GAAG,KAAK,eAAL,CAAqB,SAA3B,MAA0C,IAA1C,IAAkD,EAAE,KAAK,KAAK,CAA9D,GAAkE,EAAlE,GAAuE,KAAK,YAAL,IAAqB,IAAnG;AACH;;;;;;AAEL,SAAO,CAAC,IAAR,GAAe,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,WAAO,KAAK,CAAC,IAAI,OAAV,EAAmB,gEAAyB,yDAAU,CAAC;AAAA,aAAM,UAAN;AAAA,KAAD,CAAnC,CAAnB,EAA2E,gEAAyB,sBAAzB,EAAiD,CAAjD,CAA3E,CAAP;AAAyI,GAAtL;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C,kBAAc,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAyC,QAAzC,EAAiD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3K,qEAAsB,QAAtB,EAAgC,YAAhC,EAA8C,CAA9C;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,SAAJ,GAAgB,EAAE,CAAC,KAAxE;AACH;AAAE,KAL+C;AAK7C,aAAS,EAAE,SAAS,aAAT,CAAuB,EAAvB,EAA2B,GAA3B,EAA8B;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC1D,kEAAmB,sDAAnB,EAAgC,CAAhC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,OAAJ,GAAc,EAAE,CAAC,KAAtE;AACH;AAAE,KAV+C;AAU7C,UAAM,EAAE;AAAE,cAAQ,EAAE,UAAZ;AAAwB,cAAQ,EAAE,UAAlC;AAA8C,eAAS,EAAE,WAAzD;AAAsE,cAAQ,EAAE,UAAhF;AAA4F,iBAAW,EAAE,aAAzG;AAAwH,WAAK,EAAE,OAA/H;AAAwI,kBAAY,EAAE,cAAtJ;AAAsK,eAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAjL;AAA8M,oBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAA9N;AAAqQ,WAAK,EAAE;AAA5Q,KAVqC;AAUkP,WAAO,EAAE;AAAE,sBAAgB,EAAE;AAApB,KAV3P;AAU+R,YAAQ,EAAE,CAAC,SAAD,CAVzS;AAUsT,YAAQ,EAAE,CAAC,kEAAD,CAVhU;AAU+V,sBAAkB,EAAE,GAVnX;AAUwX,SAAK,EAAE,CAV/X;AAUkY,QAAI,EAAE,CAVxY;AAU2Y,YAAQ,EAAE,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,GAA9B,EAAiC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACpf;AACA,iEAAkB,CAAlB,EAAqB,8BAArB,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,aAA3D;AACH;AAAE,KAb+C;AAa7C,iBAAa,EAAE,CAb8B;AAa3B,mBAAe,EAAE;AAbU,GAAzB,CAA7B;;;;;MAkFM,U;AACF,wBAAY,IAAZ,EAAkB,kBAAlB,EAAsC,WAAtC;AACA;;;AAGG;AACH,aALA,EAKS;AAAA;;AACL,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,kBAAL,GAA0B,kBAA1B;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA;;AACA,WAAK,UAAL,GAAkB,IAAI,yCAAJ,EAAlB;AACA;;AACA,WAAK,KAAL,GAAa,IAAI,oDAAJ,EAAb;AACA,WAAK,OAAL,GAAe,KAAf;AACA,WAAK,cAAL,GAAsB,CAAtB;AACA;;AACA,WAAK,eAAL,GAAuB,IAAI,uDAAJ,EAAvB;AACA;;;AAGG;;AACH,WAAK,YAAL,GAAoB,YAApB;AACA,WAAK,QAAL,GAAgB,MAAM,EAAtB;AACH;AACD;;;;;WACA,eAAU;AACN,eAAO,KAAK,OAAZ;AACH,O;WACD,aAAW,KAAX,EAAgB;AACZ,aAAK,OAAL,GAAe,4EAAqB,CAAC,KAAD,CAApC;AACH;AACD;;;;WACA,eAAiB;AACb,eAAO,KAAK,cAAZ;AACH,O;WACD,aAAkB,KAAlB,EAAuB;AACnB,YAAI,EAAJ;;AACA,YAAM,QAAQ,GAAG,2EAAoB,CAAC,KAAD,CAArC;;AACA,YAAI,KAAK,KAAL,IAAc,KAAK,MAAvB,EAA+B;AAC3B;AACA,cAAI,CAAC,KAAK,aAAL,CAAmB,KAAnB,CAAD,KAA+B,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAnE,CAAJ,EAAmF;AAC/E,kBAAM,KAAK,CAAC,mEAAD,CAAX;AACH;;AACD,WAAC,EAAE,GAAG,KAAK,QAAX,MAAyB,IAAzB,IAAiC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0D,EAAE,CAAC,iBAAH,EAA1D;;AACA,cAAI,KAAK,cAAL,KAAwB,QAAxB,IAAoC,CAAC,KAAK,4BAAL,CAAkC,QAAlC,CAArC,KACC,QAAQ,IAAI,KAAK,cAAjB,IAAmC,KAAK,KAAL,CAAW,OAAX,GAAqB,QAArB,EAA+B,QADnE,CAAJ,EACkF;AAC9E,iBAAK,wBAAL,CAA8B,KAA9B;AACH;AACJ,SAVD,MAWK;AACD,eAAK,cAAL,GAAsB,QAAtB;AACH;AACJ;AACD;;;;WACA,eAAY;AACR,eAAO,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,OAAX,GAAqB,KAAK,aAA1B,CAAb,GAAwD,SAA/D;AACH,O;WACD,aAAa,IAAb,EAAiB;AACb,aAAK,aAAL,GAAsB,IAAI,IAAI,KAAK,KAAd,GAAuB,KAAK,KAAL,CAAW,OAAX,GAAqB,OAArB,CAA6B,IAA7B,CAAvB,GAA4D,CAAC,CAAlF;AACH;AACD;;;;WACA,eAAe;AAAK,eAAO,KAAK,YAAZ;AAA2B,O;WAC/C,aAAgB,KAAhB,EAAqB;AACjB;AACA,aAAK,YAAL,GAAoB,KAApB;;AACA,YAAI,KAAK,WAAT,EAAsB;AAClB,eAAK,WAAL,CAAiB,uBAAjB,CAAyC,KAAK,KAAK,UAAnD;AACH;AACJ;;;aACD,8BAAkB;AAAA;;AACd,aAAK,MAAL,CAAY,OAAZ,CACK,IADL,CACU,yDAAS,CAAC,KAAK,MAAN,CADnB,EACkC,yDAAS,CAAC,KAAK,UAAN,CAD3C,EAEK,SAFL,CAEe,UAAC,KAAD,EAAU;AACrB,eAAI,CAAC,KAAL,CAAW,KAAX,CAAiB,KAAK,CAAC,MAAN,CAAa,cAAI;AAAA,mBAAI,IAAI,CAAC,QAAL,KAAkB,KAAtB;AAAA,WAAjB,CAAjB;;AACA,eAAI,CAAC,KAAL,CAAW,eAAX;AACH,SALD;AAMH;;;aACD,2BAAe;AAAA;;AACX;AACA;AACA;AACA,aAAK,WAAL,GAAmB,IAAI,8DAAJ,CAAoB,KAAK,WAAzB,EACd,QADc,GAEd,cAFc,GAGd,uBAHc,CAGU,KAAK,YAAL,KAAsB,UAHhC,CAAnB;AAIA,SAAC,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAtB,GAA+B,wCAAE,EAAlC,EACK,IADL,CACU,yDAAS,CAAC,KAAK,gBAAL,EAAD,CADnB,EAC8C,yDAAS,CAAC,KAAK,UAAN,CADvD,EAEK,SAFL,CAEe,mBAAS;AAAA,iBAAI,MAAI,CAAC,WAAL,CAAiB,yBAAjB,CAA2C,SAA3C,CAAJ;AAAA,SAFxB;;AAGA,aAAK,WAAL,CAAiB,gBAAjB,CAAkC,KAAK,cAAvC,EAXW,CAYX;;;AACA,aAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,CAA6B,YAAK;AAC9B,cAAI,CAAC,MAAI,CAAC,QAAV,EAAoB;AAChB,kBAAI,CAAC,cAAL,GAAsB,IAAI,CAAC,GAAL,CAAS,MAAI,CAAC,cAAL,GAAsB,CAA/B,EAAkC,CAAlC,CAAtB;AACH;AACJ,SAJD,EAbW,CAkBX;AACA;AACA;;AACA,YAAI,CAAC,KAAK,aAAL,CAAmB,KAAK,cAAxB,CAAL,EAA8C;AAC1C,eAAK,cAAL,GAAsB,CAAtB;AACH;AACJ;;;aACD,uBAAW;AACP,aAAK,KAAL,CAAW,OAAX;;AACA,aAAK,UAAL,CAAgB,IAAhB;;AACA,aAAK,UAAL,CAAgB,QAAhB;AACH;AACD;;;;aACA,gBAAI;AACA,aAAK,aAAL,GAAqB,IAAI,CAAC,GAAL,CAAS,KAAK,cAAL,GAAsB,CAA/B,EAAkC,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAtD,CAArB;AACH;AACD;;;;aACA,oBAAQ;AACJ,aAAK,aAAL,GAAqB,IAAI,CAAC,GAAL,CAAS,KAAK,cAAL,GAAsB,CAA/B,EAAkC,CAAlC,CAArB;AACH;AACD;;;;aACA,iBAAK;AACD,aAAK,wBAAL,CAA8B,CAA9B;;AACA,aAAK,KAAL,CAAW,OAAX,CAAmB,cAAI;AAAA,iBAAI,IAAI,CAAC,KAAL,EAAJ;AAAA,SAAvB;;AACA,aAAK,aAAL;AACH;AACD;;;;aACA,yBAAgB,CAAhB,EAAiB;AACb,wCAAyB,KAAK,QAA9B,cAA0C,CAA1C;AACH;AACD;;;;aACA,2BAAkB,CAAlB,EAAmB;AACf,0CAA2B,KAAK,QAAhC,cAA4C,CAA5C;AACH;AACD;;;;aACA,yBAAa;AACT,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;;aACA,gCAAuB,KAAvB,EAA4B;AACxB,YAAM,QAAQ,GAAG,KAAK,GAAG,KAAK,cAA9B;;AACA,YAAI,QAAQ,GAAG,CAAf,EAAkB;AACd,iBAAO,KAAK,gBAAL,OAA4B,KAA5B,GAAoC,MAApC,GAA6C,UAApD;AACH,SAFD,MAGK,IAAI,QAAQ,GAAG,CAAf,EAAkB;AACnB,iBAAO,KAAK,gBAAL,OAA4B,KAA5B,GAAoC,UAApC,GAAiD,MAAxD;AACH;;AACD,eAAO,SAAP;AACH;AACD;;;;aACA,2BAAkB,KAAlB,EAAkD;AAAA,YAAzB,KAAyB,uEAAjB,UAAU,CAAC,MAAM;AAC9C,YAAM,IAAI,GAAG,KAAK,KAAL,CAAW,OAAX,GAAqB,KAArB,CAAb;;AACA,YAAM,aAAa,GAAG,KAAK,cAAL,CAAoB,KAApB,CAAtB;;AACA,eAAO,IAAI,CAAC,4BAAL,GAAoC,KAAK,yBAAL,CAA+B,IAA/B,EAAqC,aAArC,CAApC,GACH,KAAK,kBAAL,CAAwB,IAAxB,EAA8B,aAA9B,EAA6C,KAA7C,CADJ;AAEH;;;aACD,mCAA0B,IAA1B,EAAgC,aAAhC,EAA6C;AACzC,YAAI,IAAI,CAAC,UAAL,MAAqB,IAAI,CAAC,QAA1B,IAAsC,CAAC,aAA3C,EAA0D;AACtD,iBAAO,UAAU,CAAC,KAAlB;AACH,SAFD,MAGK,IAAI,CAAC,IAAI,CAAC,SAAN,IAAmB,aAAvB,EAAsC;AACvC,iBAAO,UAAU,CAAC,MAAlB;AACH,SAFI,MAGA;AACD,iBAAO,IAAI,CAAC,QAAL,GAAgB,UAAU,CAAC,IAA3B,GAAkC,UAAU,CAAC,IAApD;AACH;AACJ;;;aACD,4BAAmB,IAAnB,EAAyB,aAAzB,EAAiE;AAAA,YAAzB,KAAyB,uEAAjB,UAAU,CAAC,MAAM;;AAC7D,YAAI,IAAI,CAAC,UAAL,MAAqB,IAAI,CAAC,QAA1B,IAAsC,CAAC,aAA3C,EAA0D;AACtD,iBAAO,UAAU,CAAC,KAAlB;AACH,SAFD,MAGK,IAAI,IAAI,CAAC,SAAL,IAAkB,CAAC,aAAvB,EAAsC;AACvC,iBAAO,UAAU,CAAC,IAAlB;AACH,SAFI,MAGA,IAAI,IAAI,CAAC,SAAL,IAAkB,aAAtB,EAAqC;AACtC,iBAAO,KAAP;AACH,SAFI,MAGA,IAAI,IAAI,CAAC,QAAL,IAAiB,aAArB,EAAoC;AACrC,iBAAO,UAAU,CAAC,IAAlB;AACH,SAFI,MAGA;AACD,iBAAO,KAAP;AACH;AACJ;;;aACD,wBAAe,KAAf,EAAoB;AAChB,eAAO,KAAK,cAAL,KAAwB,KAA/B;AACH;AACD;;;;aACA,0BAAc;AACV,eAAO,KAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,eAApC,GAAsD,KAAK,cAAlE;AACH;;;aACD,kCAAyB,QAAzB,EAAiC;AAC7B,YAAM,UAAU,GAAG,KAAK,KAAL,CAAW,OAAX,EAAnB;AACA,aAAK,eAAL,CAAqB,IAArB,CAA0B;AACtB,uBAAa,EAAE,QADO;AAEtB,iCAAuB,EAAE,KAAK,cAFR;AAGtB,sBAAY,EAAE,UAAU,CAAC,QAAD,CAHF;AAItB,gCAAsB,EAAE,UAAU,CAAC,KAAK,cAAN;AAJZ,SAA1B,EAF6B,CAQ7B;AACA;AACA;AACA;;AACA,aAAK,cAAL,KAAwB,KAAK,WAAL,CAAiB,aAAjB,CAA+B,QAA/B,CAAxB,GACI,KAAK,WAAL,CAAiB,gBAAjB,CAAkC,QAAlC,CADJ;AAEA,aAAK,cAAL,GAAsB,QAAtB;;AACA,aAAK,aAAL;AACH;;;aACD,oBAAW,KAAX,EAAgB;AACZ,YAAM,WAAW,GAAG,qEAAc,CAAC,KAAD,CAAlC;AACA,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,OAAO,GAAG,KAAK,WAArB;;AACA,YAAI,OAAO,CAAC,eAAR,IAA2B,IAA3B,IAAmC,CAAC,WAApC,KACC,OAAO,KAAK,wDAAZ,IAAqB,OAAO,KAAK,wDADlC,CAAJ,EAC8C;AAC1C,eAAK,aAAL,GAAqB,OAAO,CAAC,eAA7B;AACA,eAAK,CAAC,cAAN;AACH,SAJD,MAKK;AACD,iBAAO,CAAC,SAAR,CAAkB,KAAlB;AACH;AACJ;;;aACD,sCAA6B,KAA7B,EAAkC;AAC9B,YAAI,KAAK,OAAL,IAAgB,KAAK,IAAI,CAA7B,EAAgC;AAC5B,iBAAO,KAAK,KAAL,CAAW,OAAX,GAAqB,KAArB,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,IAArC,CAA0C,cAAI,EAAG;AACpD,gBAAM,OAAO,GAAG,IAAI,CAAC,WAArB;AACA,gBAAM,YAAY,GAAG,OAAO,GAAI,OAAO,CAAC,OAAR,IAAmB,OAAO,CAAC,OAA3B,IAAsC,CAAC,IAAI,CAAC,UAAhD,GAA8D,CAAC,IAAI,CAAC,SAAhG;AACA,mBAAO,YAAY,IAAI,CAAC,IAAI,CAAC,QAAtB,IAAkC,CAAC,IAAI,CAAC,kBAA/C;AACH,WAJM,CAAP;AAKH;;AACD,eAAO,KAAP;AACH;;;aACD,4BAAgB;AACZ,eAAO,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACH;AACD;;;;aACA,0BAAc;AACV,YAAM,cAAc,GAAG,KAAK,WAAL,CAAiB,aAAxC;;AACA,YAAM,cAAc,GAAG,yFAAiC,EAAxD;;AACA,eAAO,cAAc,KAAK,cAAnB,IAAqC,cAAc,CAAC,QAAf,CAAwB,cAAxB,CAA5C;AACH;AACD;;;;aACA,uBAAc,KAAd,EAAmB;AACf,eAAO,KAAK,GAAG,CAAC,CAAT,KAAe,CAAC,KAAK,KAAN,IAAe,KAAK,GAAG,KAAK,KAAL,CAAW,MAAjD,CAAP;AACH;;;;;;AAEL,YAAU,CAAC,IAAX,GAAkB,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,WAAO,KAAK,CAAC,IAAI,UAAV,EAAsB,gEAAyB,8DAAzB,EAAgD,CAAhD,CAAtB,EAA0E,gEAAyB,4DAAzB,CAA1E,EAA8H,gEAAyB,qDAAzB,CAA9H,EAA2K,gEAAyB,sDAAzB,CAA3K,CAAP;AAAwN,GAA3Q;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyD,kBAAc,EAAE,SAAS,yBAAT,CAAmC,EAAnC,EAAuC,GAAvC,EAA4C,QAA5C,EAAoD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC9L,qEAAsB,QAAtB,EAAgC,OAAhC,EAAyC,CAAzC;AACA,qEAAsB,QAAtB,EAAgC,aAAhC,EAA+C,CAA/C;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,MAAJ,GAAa,EAAlE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,WAAJ,GAAkB,EAAvE;AACH;AAAE,KAPkD;AAOhD,UAAM,EAAE;AAAE,YAAM,EAAE,QAAV;AAAoB,mBAAa,EAAE,eAAnC;AAAoD,cAAQ,EAAE,UAA9D;AAA0E,iBAAW,EAAE;AAAvF,KAPwC;AAOgE,WAAO,EAAE;AAAE,qBAAe,EAAE;AAAnB,KAPzE;AAOiH,YAAQ,EAAE,CAAC,YAAD;AAP3H,GAAzB,CAAhC;;;;;MA4DM,c;AACF,4BAAY,QAAZ,EAAoB;AAAA;;AAChB,WAAK,QAAL,GAAgB,QAAhB;AACA;;AACA,WAAK,IAAL,GAAY,QAAZ;AACH,K,CACD;AACA;AACA;AACA;AACA;;;;;aACA,wBAAY;AACR,aAAK,QAAL,CAAc,IAAd;AACH;;;;;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,UAAzB,CAA1B,CAAP;AAAyE,GAApI;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,QAAD,EAAW,gBAAX,EAA6B,EAA7B,CAAD,CAAnC;AAAuE,YAAQ,EAAE,CAAjF;AAAoF,gBAAY,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACnN,iEAAkB,OAAlB,EAA2B,SAAS,uCAAT,GAAgD;AAAK,iBAAO,GAAG,CAAC,YAAJ,EAAP;AAA4B,SAA5G;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,qEAAsB,MAAtB,EAA8B,GAAG,CAAC,IAAlC;AACH;AAAE,KAJsD;AAIpD,UAAM,EAAE;AAAE,UAAI,EAAE;AAAR;AAJ4C,GAAzB,CAApC;;;;;MAiCM,kB;AACF,gCAAY,QAAZ,EAAoB;AAAA;;AAChB,WAAK,QAAL,GAAgB,QAAhB;AACA;;AACA,WAAK,IAAL,GAAY,QAAZ;AACH,K,CACD;AACA;AACA;AACA;AACA;;;;;aACA,wBAAY;AACR,aAAK,QAAL,CAAc,QAAd;AACH;;;;;;AAEL,oBAAkB,CAAC,IAAnB,GAA0B,SAAS,0BAAT,CAAoC,CAApC,EAAqC;AAAI,WAAO,KAAK,CAAC,IAAI,kBAAV,EAA8B,gEAAyB,UAAzB,CAA9B,CAAP;AAA6E,GAAhJ;;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,kBAAR;AAA4B,aAAS,EAAE,CAAC,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAD,CAAvC;AAA+E,YAAQ,EAAE,CAAzF;AAA4F,gBAAY,EAAE,SAAS,+BAAT,CAAyC,EAAzC,EAA6C,GAA7C,EAAgD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACnO,iEAAkB,OAAlB,EAA2B,SAAS,2CAAT,GAAoD;AAAK,iBAAO,GAAG,CAAC,YAAJ,EAAP;AAA4B,SAAhH;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,qEAAsB,MAAtB,EAA8B,GAAG,CAAC,IAAlC;AACH;AAAE,KAJ0D;AAIxD,UAAM,EAAE;AAAE,UAAI,EAAE;AAAR;AAJgD,GAAzB,CAAxC;;;;;MAwCM,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAtC;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAAC,0DAAD,CAAD;AAAX,GAAxB,CAAtC;;;AAuBA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,gBAA1B,EAA4C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,OAAD,EAAU,UAAV,EAAsB,aAAtB,EAAqC,YAArC,EAAmD,cAAnD,EAAmE,kBAAnE,CAAP;AAAgG,KAA9H;AAAgI,WAAO,EAAE;AAAc,aAAO,CAAC,0DAAD,CAAP;AAAsB,KAA7K;AAA+K,WAAO,EAAE;AAAc,aAAO,CAAC,OAAD,EAAU,UAAV,EAAsB,aAAtB,EAAqC,YAArC,EAAmD,cAAnD,EAAmE,kBAAnE,CAAP;AAAgG;AAAtS,GAA5C,CAAnD;AAA2Y,CAA1Z;AAEA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClsBH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAD,CAAD,CAAD,EAAgB,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,KAAD,CAAf,CAAhB,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,SAAD,EAAY,eAAZ,CAAZ;;AACA,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACxD,iEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,OAAxC;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,MAAM,CAAC,UAAtC,EAAkD,GAAlD;AACH;AAAE;;AACH,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACxD,iEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,OAAO,GAAG,GAAG,CAAC,SAApB;AACA,QAAM,MAAM,GAAG,6DAAf;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,OAAxC;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,MAAM,CAAC,YAAP,CAAoB,OAApB,EAA6B,MAAM,CAAC,IAApC,CAA/B,EAA0E,GAA1E;AACH;AAAE;;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;;;AAKG;;AACH,SAAS,mBAAT,CAA6B,IAA7B,EAAiC;AAC7B;AAAA;;AAAA;;AACI,sBAAmB;AAAA;;AAAA;;AAAA,wCAAJ,IAAI;AAAJ,YAAI;AAAA;;AACf,sDAAS,IAAT;AACA,YAAK,OAAL,GAAe,KAAf;AACA;;AACA,YAAK,iBAAL,GAAyB,KAAzB;AAJe;AAKlB;AACD;;;AAPJ;AAAA;AAAA,WAQI,eAAU;AAAK,eAAO,KAAK,OAAZ;AAAsB,OARzC;AAAA,WASI,aAAW,CAAX,EAAY;AACR,YAAM,SAAS,GAAG,KAAK,OAAvB;AACA,aAAK,OAAL,GAAe,6EAAqB,CAAC,CAAD,CAApC;AACA,aAAK,iBAAL,GAAyB,SAAS,KAAK,KAAK,OAA5C;AACH;AACD;;AAdJ;AAAA;AAAA,aAeI,4BAAgB;AACZ,YAAM,gBAAgB,GAAG,KAAK,iBAA9B;AACA,aAAK,iBAAL,GAAyB,KAAzB;AACA,eAAO,gBAAP;AACH;AACD;;AApBJ;AAAA;AAAA,aAqBI,8BAAkB;AACd,aAAK,iBAAL,GAAyB,KAAzB;AACH;AAvBL;;AAAA;AAAA,IAAqB,IAArB;AAyBH;AAED;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,SAAS,gBAAG,IAAI,yDAAJ,CAAmB,WAAnB,CAAlB;AACA;;AACA,IAAM,mBAAmB,gBAAG,IAAI,yDAAJ,CAAmB,qBAAnB,CAA5B;;;MAaM,U,GACF;AAAY;AAAqB,UAAjC,EAAyC;AAAA;;AACrC,SAAK,QAAL,GAAgB,QAAhB;AACH,G;;AAEL,YAAU,CAAC,IAAX,GAAkB,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,WAAO,KAAK,CAAC,IAAI,UAAV,EAAsB,gEAAyB,sDAAzB,CAAtB,CAAP;AAA6E,GAAhI;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD;AAA/B,GAAzB,CAAhC;;;;;MAYM,gB,GACF;AAAY;AAAqB,UAAjC,EAAyC;AAAA;;AACrC,SAAK,QAAL,GAAgB,QAAhB;AACH,G;;AAEL,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,EAA4B,gEAAyB,sDAAzB,CAA5B,CAAP;AAAmF,GAAlJ;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD;AAArC,GAAzB,CAAtC;;;;;MAYM,gB,GACF;AAAY;AAAqB,UAAjC,EAAyC;AAAA;;AACrC,SAAK,QAAL,GAAgB,QAAhB;AACH,G;;AAEL,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,EAA4B,gEAAyB,sDAAzB,CAA5B,CAAP;AAAmF,GAAlJ;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD;AAArC,GAAzB,CAAtC;;KAQA;;AACA;;;IACM,gB;;;;AAEN,IAAM,iBAAiB,gBAAG,mBAAmB,CAAC,gBAAD,CAA7C;;;MAKM,Y;;;;;AACF,0BAAY,MAAZ,EAAkB;AAAA;;AAAA;;AACd;AACA,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,UAAL,GAAkB,KAAlB;AAHc;AAIjB;AACD;;;;;WACA,eAAQ;AAAK,eAAO,KAAK,KAAZ;AAAoB,O;WACjC,aAAS,IAAT,EAAa;AAAI,aAAK,aAAL,CAAmB,IAAnB;AAA2B;AAC5C;;;;AAIG;;;;WACH,eAAa;AACT,eAAO,KAAK,UAAZ;AACH,O;WACD,aAAc,CAAd,EAAe;AACX,YAAM,SAAS,GAAG,KAAK,UAAvB;AACA,aAAK,UAAL,GAAkB,6EAAqB,CAAC,CAAD,CAAvC;AACA,aAAK,iBAAL,GAAyB,SAAS,KAAK,KAAK,UAA5C;AACH;AACD;;;;;;AAMG;;;;aACH,qCAAyB;AACrB,aAAK,mBAAL,GAA2B,sBAAe,KAAK,oBAApB,EAA3B;AACH;AACD;;;;;AAKG;;;;aACH,uBAAc,KAAd,EAAmB;AACf;AACA;AACA,YAAI,KAAJ,EAAW;AACP,eAAK,KAAL,GAAa,KAAb;AACA,eAAK,oBAAL,GAA4B,KAAK,CAAC,OAAN,CAAc,eAAd,EAA+B,GAA/B,CAA5B;;AACA,eAAK,yBAAL;AACH;AACJ;;;;IA9CsB,iB;;AAgD3B,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,EAAwB,gEAAyB,SAAzB,EAAoC,CAApC,CAAxB,CAAP;AAAyE,GAAhI;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6D,kBAAc,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA8C,QAA9C,EAAsD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACtM,qEAAsB,QAAtB,EAAgC,UAAhC,EAA4C,CAA5C;AACA,qEAAsB,QAAtB,EAAgC,gBAAhC,EAAkD,CAAlD;AACA,qEAAsB,QAAtB,EAAgC,gBAAhC,EAAkD,CAAlD;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,IAAJ,GAAW,EAAE,CAAC,KAAnE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,UAAJ,GAAiB,EAAE,CAAC,KAAzE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,UAAJ,GAAiB,EAAE,CAAC,KAAzE;AACH;AAAE,KAToD;AASlD,UAAM,EAAE;AAAE,YAAM,EAAE,QAAV;AAAoB,UAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,CAA1B;AAAoD,eAAS,EAAE;AAA/D,KAT0C;AASoC,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,4BAAX;AAAyC,iBAAW,EAAE;AAAtD,KAAD,CAA1B,CAAD,EAAoG,wEAApG;AAT9C,GAAzB,CAAlC;;;AAgDA;;;IACM,W,GACF,qBAAY,SAAZ,EAAuB,UAAvB,EAAiC;AAAA;;AAC7B;AACA;AACA,MAAM,SAAS,GAAG,UAAU,CAAC,aAAX,CAAyB,SAA3C;;AAH6B,4NAIL,SAAS,CAAC,mBAJL;AAAA;;AAAA;AAI7B,wDAAuD;AAAA,UAA5C,SAA4C;AACnD,eAAS,CAAC,GAAV,CAAc,SAAd;AACH;AAN4B;AAAA;AAAA;AAAA;AAAA;AAOhC,C;;;MAGC,a;;;;;AACF,2BAAY,SAAZ,EAAuB,UAAvB,EAAiC;AAAA;;AAAA,gCACvB,SADuB,EACZ,UADY;AAEhC;;;IAHuB,W;;AAK5B,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,YAAzB,CAAzB,EAAiE,gEAAyB,qDAAzB,CAAjE,CAAP;AAAuH,GAAhL;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwF,aAAS,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,iBAA5B,CAAnG;AAAmJ,YAAQ,EAAE,CAAC,wEAAD;AAA7J,GAAzB,CAAnC;;;;;MAgBM,a;;;;;AACF,2BAAY,SAAZ,EAAuB,UAAvB,EAAiC;AAAA;;AAAA;;AAC7B,UAAI,EAAJ;;AACA,kCAAM,SAAN,EAAiB,UAAjB;;AACA,UAAI,CAAC,CAAC,EAAE,GAAG,SAAS,CAAC,MAAhB,MAA4B,IAA5B,IAAoC,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6D,EAAE,CAAC,WAAH,CAAe,aAAf,CAA6B,QAA3F,MAAyG,CAA7G,EAAgH;AAC5G,YAAM,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB,WAAjB,CAA6B,aAA7B,CACb,YADa,CACA,MADA,CAAlB;;AAEA,YAAM,IAAI,GAAI,SAAS,KAAK,MAAd,IAAwB,SAAS,KAAK,UAAvC,GAAqD,UAArD,GAAkE,MAA/E;AACA,kBAAU,CAAC,aAAX,CAAyB,YAAzB,CAAsC,MAAtC,EAA8C,IAA9C;AACH;;AAR4B;AAShC;;;IAVuB,W;;AAY5B,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,YAAzB,CAAzB,EAAiE,gEAAyB,qDAAzB,CAAjE,CAAP;AAAuH,GAAhL;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwF,aAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAAnG;AAA2H,YAAQ,EAAE,CAAC,wEAAD;AAArI,GAAzB,CAAnC;;;;;MAeM,O;;;;;AACF,qBAAY,SAAZ,EAAuB,UAAvB,EAAiC;AAAA;;AAAA;;AAC7B,UAAI,EAAJ;;AACA,kCAAM,SAAN,EAAiB,UAAjB;;AACA,UAAI,CAAC,CAAC,EAAE,GAAG,SAAS,CAAC,MAAhB,MAA4B,IAA5B,IAAoC,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6D,EAAE,CAAC,WAAH,CAAe,aAAf,CAA6B,QAA3F,MAAyG,CAA7G,EAAgH;AAC5G,YAAM,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB,WAAjB,CAA6B,aAA7B,CACb,YADa,CACA,MADA,CAAlB;;AAEA,YAAM,IAAI,GAAI,SAAS,KAAK,MAAd,IAAwB,SAAS,KAAK,UAAvC,GAAqD,UAArD,GAAkE,MAA/E;AACA,kBAAU,CAAC,aAAX,CAAyB,YAAzB,CAAsC,MAAtC,EAA8C,IAA9C;AACH;;AAR4B;AAShC;;;IAViB,W;;AAYtB,SAAO,CAAC,IAAR,GAAe,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,WAAO,KAAK,CAAC,IAAI,OAAV,EAAmB,gEAAyB,YAAzB,CAAnB,EAA2D,gEAAyB,qDAAzB,CAA3D,CAAP;AAAiH,GAA9J;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf,CAA5B;AAAoE,aAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAA/E;AAAgG,YAAQ,EAAE,CAAC,wEAAD;AAA1G,GAAzB,CAA7B;;;AAeA;;;;;;AAMG;;AACH;;AAEG;;;IACG,S,GACF;AAAA;;AACI,OAAK,KAAL,GAAa,EAAb;AACA,OAAK,QAAL,GAAgB,EAAhB;AACH,C;AAEL;;;AACA,IAAM,0BAA0B,gBAAG,IAAI,yDAAJ,CAAmB,4BAAnB,CAAnC;;;MAQM,wB;AACF,sCAAY,OAAZ,EAAmB;AAAA;;AACf,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,gBAAL,GAAwB,IAAxB;AACA,WAAK,UAAL,GAAkB,IAAI,0CAAJ,EAAlB;AACH;AACD;;AAEG;;;;;aACH,kBAAS,IAAT,EAAa;AACT,aAAK,uBAAL;;AACA,aAAK,gBAAL,CAAsB,KAAtB,CAA4B,IAA5B,CAAiC,IAAjC;AACH;AACD;;;AAGG;;;;aACH,qBAAY,IAAZ,EAAgB;AACZ,aAAK,uBAAL;;AACA,aAAK,gBAAL,CAAsB,QAAtB,CAA+B,IAA/B,CAAoC,IAApC;AACH;AACD;;;;aACA,uBAAW;AACP,aAAK,UAAL,CAAgB,IAAhB;;AACA,aAAK,UAAL,CAAgB,QAAhB;AACH;;;aACD,mCAAuB;AAAA;;AACnB,YAAI,KAAK,gBAAT,EAA2B;AACvB;AACH;;AACD,aAAK,gBAAL,GAAwB,IAAI,SAAJ,EAAxB;;AACA,aAAK,sBAAL,GAA8B,IAA9B,CAAmC,0DAAS,CAAC,KAAK,UAAN,CAA5C,EAA+D,SAA/D,CAAyE,YAAK;AAC1E,iBAAO,MAAI,CAAC,gBAAL,CAAsB,KAAtB,CAA4B,MAA5B,IAAsC,MAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,MAA5E,EAAoF;AAChF,gBAAM,QAAQ,GAAG,MAAI,CAAC,gBAAtB,CADgF,CAEhF;;AACA,kBAAI,CAAC,gBAAL,GAAwB,IAAI,SAAJ,EAAxB;;AAHgF,uOAI7D,QAAQ,CAAC,KAJoD;AAAA;;AAAA;AAIhF,qEAAmC;AAAA,oBAAxB,IAAwB;AAC/B,oBAAI;AACP;AAN+E;AAAA;AAAA;AAAA;AAAA;;AAAA,uOAO7D,QAAQ,CAAC,QAPoD;AAAA;;AAAA;AAOhF,qEAAsC;AAAA,oBAA3B,KAA2B;;AAClC,qBAAI;AACP;AAT+E;AAAA;AAAA;AAAA;AAAA;AAUnF;;AACD,gBAAI,CAAC,gBAAL,GAAwB,IAAxB;AACH,SAbD;AAcH;;;aACD,kCAAsB;AAClB;AACA;AACA,eAAO,KAAK,OAAL,CAAa,QAAb,GACH,2CAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,SAAhB,CAAD,CADD,GAEH,KAAK,OAAL,CAAa,QAAb,CAAsB,IAAtB,CAA2B,qDAAI,CAAC,CAAD,CAA/B,CAFJ;AAGH;;;;;;AAEL,0BAAwB,CAAC,IAAzB,GAAgC,SAAS,gCAAT,CAA0C,CAA1C,EAA2C;AAAI,WAAO,KAAK,CAAC,IAAI,wBAAV,EAAoC,uDAAgB,iDAAhB,CAApC,CAAP;AAA6E,GAA5J;;AACA,0BAAwB,CAAC,KAAzB;AAAiC;;AAAa;AAAC,mEAA0B;AAAE,SAAK,EAAE,wBAAT;AAAmC,WAAO,EAAE,wBAAwB,CAAC;AAArE,GAA1B,CAA/C;;;AAQA;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,gBAAgB,gDAAtB;;;MAKM,U;AACF;AACA;AAAqB,YADrB,EAC+B,QAD/B,EACuC;AAAA;;AACnC,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,QAAL,GAAgB,QAAhB;AACH;;;;aACD,qBAAY,OAAZ,EAAmB;AACf;AACA;AACA,YAAI,CAAC,KAAK,cAAV,EAA0B;AACtB,cAAM,OAAO,GAAI,OAAO,CAAC,SAAD,CAAP,IAAsB,OAAO,CAAC,SAAD,CAAP,CAAmB,YAA1C,IAA2D,EAA3E;AACA,eAAK,cAAL,GAAsB,KAAK,QAAL,CAAc,IAAd,CAAmB,OAAnB,EAA4B,MAA5B,EAAtB;;AACA,eAAK,cAAL,CAAoB,IAApB,CAAyB,OAAzB;AACH;AACJ;AACD;;;AAGG;;;;aACH,0BAAc;AACV,eAAO,KAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,OAA9B,CAAP;AACH;AACD;;;;aACA,6BAAoB,MAApB,EAA0B;AACtB,YAAI,gBAAgB,eAApB,EAAqC;AACjC,iBAAO,MAAM,CAAC,UAAP,CAAkB,QAAzB;AACH;;AACD,YAAI,gBAAgB,eAApB,EAAqC;AACjC,iBAAO,MAAM,CAAC,UAAP,CAAkB,QAAzB;AACH,SAFD,MAGK;AACD,iBAAO,MAAM,CAAC,IAAP,CAAY,QAAnB;AACH;AACJ;;;;;;AAEL,YAAU,CAAC,IAAX,GAAkB,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,WAAO,KAAK,CAAC,IAAI,UAAV,EAAsB,gEAAyB,sDAAzB,CAAtB,EAAoE,gEAAyB,0DAAzB,CAApE,CAAP;AAA+H,GAAlL;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,YAAQ,EAAE,CAAC,kEAAD;AAA9B,GAAzB,CAAhC;;KAQA;;AACA;;;IACM,mB;;;;;;;;;;;;EAA4B,U;;AAElC,IAAM,oBAAoB,gBAAG,mBAAmB,CAAC,mBAAD,CAAhD;;;MAKM,e;;;;;AACF,6BAAY,QAAZ,EAAsB,QAAtB,EAAgC,MAAhC,EAAsC;AAAA;;AAAA;;AAClC,kCAAM,QAAN,EAAgB,QAAhB;AACA,aAAK,MAAL,GAAc,MAAd;AAFkC;AAGrC,K,CACD;AACA;;;;;aACA,qBAAY,OAAZ,EAAmB;AACf,ubAAkB,OAAlB;AACH;;;;IATyB,oB;;AAW9B,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,gEAAyB,sDAAzB,CAA3B,EAAyE,gEAAyB,0DAAzB,CAAzE,EAA2H,gEAAyB,SAAzB,EAAoC,CAApC,CAA3H,CAAP;AAA4K,GAAzO;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmE,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C,YAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,KAA3E;AAAqK,YAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA/K,GAAzB,CAArC;;KAkBA;;AACA;;;IACM,mB;;;;;;;;;;;;EAA4B,U;;AAElC,IAAM,oBAAoB,gBAAG,mBAAmB,CAAC,mBAAD,CAAhD;;;MAKM,e;;;;;AACF,6BAAY,QAAZ,EAAsB,QAAtB,EAAgC,MAAhC,EAAsC;AAAA;;AAAA;;AAClC,kCAAM,QAAN,EAAgB,QAAhB;AACA,aAAK,MAAL,GAAc,MAAd;AAFkC;AAGrC,K,CACD;AACA;;;;;aACA,qBAAY,OAAZ,EAAmB;AACf,ubAAkB,OAAlB;AACH;;;;IATyB,oB;;AAW9B,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,gEAAyB,sDAAzB,CAA3B,EAAyE,gEAAyB,0DAAzB,CAAzE,EAA2H,gEAAyB,SAAzB,EAAoC,CAApC,CAA3H,CAAP;AAA4K,GAAzO;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmE,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C,YAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,KAA3E;AAAqK,YAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA/K,GAAzB,CAArC;;;;;MAuBM,S;;;;;AACF;AACA;AACA,uBAAY,QAAZ,EAAsB,QAAtB,EAAgC,MAAhC,EAAsC;AAAA;;AAAA;;AAClC,mCAAM,QAAN,EAAgB,QAAhB;AACA,aAAK,MAAL,GAAc,MAAd;AAFkC;AAGrC;;;IANmB,U;;AAQxB,WAAS,CAAC,IAAV,GAAiB,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,WAAO,KAAK,CAAC,IAAI,SAAV,EAAqB,gEAAyB,sDAAzB,CAArB,EAAmE,gEAAyB,0DAAzB,CAAnE,EAAqH,gEAAyB,SAAzB,EAAoC,CAApC,CAArH,CAAP;AAAsK,GAAvN;;AACA,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,SAAR;AAAmB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuD,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAAX;AAA4C,UAAI,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAAlD,KAA/D;AAA8I,YAAQ,EAAE,CAAC,wEAAD;AAAxJ,GAAzB,CAA/B;;;;;MAsBM,a;AACF,2BAAY,cAAZ,EAA0B;AAAA;;AACtB,WAAK,cAAL,GAAsB,cAAtB;AACA,mBAAa,CAAC,oBAAd,GAAqC,IAArC;AACH;;;;aACD,uBAAW;AACP;AACA;AACA,YAAI,aAAa,CAAC,oBAAd,KAAuC,IAA3C,EAAiD;AAC7C,uBAAa,CAAC,oBAAd,GAAqC,IAArC;AACH;AACJ;;;;;;AAEL,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,2DAAzB,CAAzB,CAAP;AAAqF,GAA9I;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD;AAAlC,GAAzB,CAAnC;AACA;;;;;;AAMG;;AACH,eAAa,CAAC,oBAAd,GAAqC,IAArC;;;;;MASM,Y;;;;AAEN,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,GAAP;AAAmC,GAA1F;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqF,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsI,SAAK,EAAE,CAA7I;AAAgJ,QAAI,EAAE,CAAtJ;AAAyJ,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAjK;AAA0L,YAAQ,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC7S,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAFoD;AAElD,cAAU,EAAE,CAAC,aAAD,CAFsC;AAErB,iBAAa,EAAE;AAFM,GAAzB,CAAlC;;;;;MAmBM,Y;;;;AAEN,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,GAAP;AAAmC,GAA1F;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqF,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsI,SAAK,EAAE,CAA7I;AAAgJ,QAAI,EAAE,CAAtJ;AAAyJ,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAjK;AAA0L,YAAQ,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC7S,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAFoD;AAElD,cAAU,EAAE,CAAC,aAAD,CAFsC;AAErB,iBAAa,EAAE;AAFM,GAAzB,CAAlC;;;;;MAmBM,M;;;;AAEN,QAAM,CAAC,IAAP,GAAc,SAAS,cAAT,CAAwB,CAAxB,EAAyB;AAAI,WAAO,KAAK,CAAC,IAAI,MAAV,GAAP;AAA6B,GAAxE;;AACA,QAAM,CAAC,IAAP;AAAc;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,MAAR;AAAgB,aAAS,EAAE,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,IAAD,EAAO,SAAP,EAAkB,EAAlB,CAAd,CAA3B;AAAiE,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,SAAnB,CAA5E;AAA2G,SAAK,EAAE,CAAlH;AAAqH,QAAI,EAAE,CAA3H;AAA8H,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAtI;AAA+J,YAAQ,EAAE,SAAS,eAAT,CAAyB,EAAzB,EAA6B,GAA7B,EAAgC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACtQ,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAF8C;AAE5C,cAAU,EAAE,CAAC,aAAD,CAFgC;AAEf,iBAAa,EAAE;AAFA,GAAzB,CAA5B;;;;;MAmBM,Y,GACF,sBAAY,WAAZ,EAAuB;AAAA;;AACnB,SAAK,WAAL,GAAmB,WAAnB;AACH,G;;AAEL,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,EAAwB,gEAAyB,sDAAzB,CAAxB,CAAP;AAA+E,GAAtI;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,cAAhB,EAAgC,EAAhC,CAAD;AAAjC,GAAzB,CAAlC;;;AAWA;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,iBAAiB,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAA1B;AACA;;;AAGG;;IACG,Y;AACF;;;;;;;;;;;;;AAaG;AACH,wBAAY,kBAAZ,EAAgC,aAAhC,EAA+C,SAA/C,EAA0D,wBAA1D,EAA8J;AAAA,QAA1E,UAA0E,uEAA7D,IAA6D;;AAAA,QAAvD,6BAAuD,uEAAvB,IAAuB;;AAAA,QAAjB,iBAAiB;;AAAA;;AAC1J,SAAK,kBAAL,GAA0B,kBAA1B;AACA,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,wBAAL,GAAgC,wBAAhC;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,6BAAL,GAAqC,6BAArC;AACA,SAAK,iBAAL,GAAyB,iBAAzB;AACA,SAAK,iBAAL,GAAyB,EAAzB;AACA,SAAK,cAAL,GAAsB;AAClB,uBAAU,aAAV,qBADkB;AAElB,0BAAa,aAAb,wBAFkB;AAGlB,wBAAW,aAAX,sBAHkB;AAIlB,yBAAY,aAAZ;AAJkB,KAAtB;AAMH;AACD;;;;;AAKG;;;;;WACH,gCAAuB,IAAvB,EAA6B,gBAA7B,EAA6C;AAAA;;AACzC,UAAM,eAAe,GAAG,EAAxB;;AADyC,iOAEvB,IAFuB;AAAA;;AAAA;AAEzC,+DAAwB;AAAA,cAAb,GAAa;;AACpB;AACA;AACA,cAAI,GAAG,CAAC,QAAJ,KAAiB,GAAG,CAAC,YAAzB,EAAuC;AACnC;AACH;;AACD,yBAAe,CAAC,IAAhB,CAAqB,GAArB;;AACA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,QAAJ,CAAa,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC1C,2BAAe,CAAC,IAAhB,CAAqB,GAAG,CAAC,QAAJ,CAAa,CAAb,CAArB;AACH;AACJ,SAZwC,CAazC;;AAbyC;AAAA;AAAA;AAAA;AAAA;;AAczC,WAAK,wBAAL,CAA8B,QAA9B,CAAuC,YAAK;AAAA,mOAClB,eADkB;AAAA;;AAAA;AACxC,iEAAuC;AAAA,gBAA5B,OAA4B;;AACnC,kBAAI,CAAC,kBAAL,CAAwB,OAAxB,EAAiC,gBAAjC;AACH;AAHuC;AAAA;AAAA;AAAA;AAAA;AAI3C,OAJD;AAKH;AACD;;;;;;;;;;AAUG;;;;WACH,6BAAoB,IAApB,EAA0B,iBAA1B,EAA6C,eAA7C,EAA0F;AAAA;;AAAA,UAA5B,qBAA4B,uEAAJ,IAAI;;AACtF,UAAI,CAAC,IAAI,CAAC,MAAN,IAAgB,CAAC,KAAK,UAAtB,IAAoC,EAAE,iBAAiB,CAAC,IAAlB,CAAuB,eAAK;AAAA,eAAI,KAAJ;AAAA,OAA5B,KACtC,eAAe,CAAC,IAAhB,CAAqB,eAAK;AAAA,eAAI,KAAJ;AAAA,OAA1B,CADoC,CAAxC,EAC2C;AACvC,YAAI,KAAK,iBAAT,EAA4B;AACxB,eAAK,iBAAL,CAAuB,oBAAvB,CAA4C;AAAE,iBAAK,EAAE;AAAT,WAA5C;;AACA,eAAK,iBAAL,CAAuB,uBAAvB,CAA+C;AAAE,iBAAK,EAAE;AAAT,WAA/C;AACH;;AACD;AACH;;AACD,UAAM,QAAQ,GAAG,IAAI,CAAC,CAAD,CAArB;AACA,UAAM,QAAQ,GAAG,QAAQ,CAAC,QAAT,CAAkB,MAAnC;;AACA,UAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,QAApB,EAA8B,qBAA9B,CAAnB;;AACA,UAAM,cAAc,GAAG,KAAK,8BAAL,CAAoC,UAApC,EAAgD,iBAAhD,CAAvB;;AACA,UAAM,YAAY,GAAG,KAAK,4BAAL,CAAkC,UAAlC,EAA8C,eAA9C,CAArB;;AACA,UAAM,eAAe,GAAG,iBAAiB,CAAC,WAAlB,CAA8B,IAA9B,CAAxB;AACA,UAAM,cAAc,GAAG,eAAe,CAAC,OAAhB,CAAwB,IAAxB,CAAvB,CAfsF,CAgBtF;;AACA,WAAK,wBAAL,CAA8B,QAA9B,CAAuC,YAAK;AACxC,YAAM,KAAK,GAAG,OAAI,CAAC,SAAL,KAAmB,KAAjC;AACA,YAAM,KAAK,GAAG,KAAK,GAAG,OAAH,GAAa,MAAhC;AACA,YAAM,GAAG,GAAG,KAAK,GAAG,MAAH,GAAY,OAA7B;;AAHwC,mOAItB,IAJsB;AAAA;;AAAA;AAIxC,iEAAwB;AAAA,gBAAb,GAAa;;AACpB,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAApB,EAA8B,CAAC,EAA/B,EAAmC;AAC/B,kBAAM,IAAI,GAAG,GAAG,CAAC,QAAJ,CAAa,CAAb,CAAb;;AACA,kBAAI,iBAAiB,CAAC,CAAD,CAArB,EAA0B;AACtB,uBAAI,CAAC,eAAL,CAAqB,IAArB,EAA2B,KAA3B,EAAkC,cAAc,CAAC,CAAD,CAAhD,EAAqD,CAAC,KAAK,eAA3D;AACH;;AACD,kBAAI,eAAe,CAAC,CAAD,CAAnB,EAAwB;AACpB,uBAAI,CAAC,eAAL,CAAqB,IAArB,EAA2B,GAA3B,EAAgC,YAAY,CAAC,CAAD,CAA5C,EAAiD,CAAC,KAAK,cAAvD;AACH;AACJ;AACJ;AAduC;AAAA;AAAA;AAAA;AAAA;;AAexC,YAAI,OAAI,CAAC,iBAAT,EAA4B;AACxB,iBAAI,CAAC,iBAAL,CAAuB,oBAAvB,CAA4C;AACxC,iBAAK,EAAE,eAAe,KAAK,CAAC,CAArB,GACH,EADG,GAEH,UAAU,CACL,KADL,CACW,CADX,EACc,eAAe,GAAG,CADhC,EAEK,GAFL,CAES,UAAC,KAAD,EAAQ,KAAR;AAAA,qBAAkB,iBAAiB,CAAC,KAAD,CAAjB,GAA2B,KAA3B,GAAmC,IAArD;AAAA,aAFT;AAHoC,WAA5C;;AAOA,iBAAI,CAAC,iBAAL,CAAuB,uBAAvB,CAA+C;AAC3C,iBAAK,EAAE,cAAc,KAAK,CAAC,CAApB,GACH,EADG,GAEH,UAAU,CACL,KADL,CACW,cADX,EAEK,GAFL,CAES,UAAC,KAAD,EAAQ,KAAR;AAAA,qBAAkB,eAAe,CAAC,KAAK,GAAG,cAAT,CAAf,GAA0C,KAA1C,GAAkD,IAApE;AAAA,aAFT,EAGK,OAHL;AAHuC,WAA/C;AAQH;AACJ,OAhCD;AAiCH;AACD;;;;;;;;;;AAUG;;;;WACH,mBAAU,WAAV,EAAuB,YAAvB,EAAqC,QAArC,EAA6C;AAAA;;AACzC;AACA,UAAI,CAAC,KAAK,UAAV,EAAsB;AAClB;AACH,OAJwC,CAKzC;AACA;AACA;;;AACA,UAAM,IAAI,GAAG,QAAQ,KAAK,QAAb,GAAwB,WAAW,CAAC,KAAZ,GAAoB,OAApB,EAAxB,GAAwD,WAArE;AACA,UAAM,MAAM,GAAG,QAAQ,KAAK,QAAb,GAAwB,YAAY,CAAC,KAAb,GAAqB,OAArB,EAAxB,GAAyD,YAAxE,CATyC,CAUzC;;AACA,UAAM,aAAa,GAAG,EAAtB;AACA,UAAM,iBAAiB,GAAG,EAA1B;AACA,UAAM,eAAe,GAAG,EAAxB;;AACA,WAAK,IAAI,QAAQ,GAAG,CAAf,EAAkB,YAAY,GAAG,CAAtC,EAAyC,QAAQ,GAAG,IAAI,CAAC,MAAzD,EAAiE,QAAQ,EAAzE,EAA6E;AACzE,YAAI,CAAC,MAAM,CAAC,QAAD,CAAX,EAAuB;AACnB;AACH;;AACD,qBAAa,CAAC,QAAD,CAAb,GAA0B,YAA1B;AACA,YAAM,GAAG,GAAG,IAAI,CAAC,QAAD,CAAhB;AACA,uBAAe,CAAC,QAAD,CAAf,GAA4B,KAAK,kBAAL,GACxB,KAAK,CAAC,IAAN,CAAW,GAAG,CAAC,QAAf,CADwB,GACG,CAAC,GAAD,CAD/B;AAEA,YAAM,MAAM,GAAG,GAAG,CAAC,qBAAJ,GAA4B,MAA3C;AACA,oBAAY,IAAI,MAAhB;AACA,yBAAiB,CAAC,QAAD,CAAjB,GAA8B,MAA9B;AACH;;AACD,UAAM,gBAAgB,GAAG,MAAM,CAAC,WAAP,CAAmB,IAAnB,CAAzB,CA1ByC,CA2BzC;AACA;;AACA,WAAK,wBAAL,CAA8B,QAA9B,CAAuC,YAAK;AACxC,YAAI,EAAJ,EAAQ,EAAR;;AACA,aAAK,IAAI,SAAQ,GAAG,CAApB,EAAuB,SAAQ,GAAG,IAAI,CAAC,MAAvC,EAA+C,SAAQ,EAAvD,EAA2D;AACvD,cAAI,CAAC,MAAM,CAAC,SAAD,CAAX,EAAuB;AACnB;AACH;;AACD,cAAM,MAAM,GAAG,aAAa,CAAC,SAAD,CAA5B;AACA,cAAM,kBAAkB,GAAG,SAAQ,KAAK,gBAAxC;;AALuD,qOAMjC,eAAe,CAAC,SAAD,CANkB;AAAA;;AAAA;AAMvD,mEAAiD;AAAA,kBAAtC,OAAsC;;AAC7C,qBAAI,CAAC,eAAL,CAAqB,OAArB,EAA8B,QAA9B,EAAwC,MAAxC,EAAgD,kBAAhD;AACH;AARsD;AAAA;AAAA;AAAA;AAAA;AAS1D;;AACD,YAAI,QAAQ,KAAK,KAAjB,EAAwB;AACpB,WAAC,EAAE,GAAG,OAAI,CAAC,iBAAX,MAAkC,IAAlC,IAA0C,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmE,EAAE,CAAC,uBAAH,CAA2B;AAAE,iBAAK,EAAE,iBAAT;AAA4B,mBAAO,EAAE,aAArC;AAAoD,oBAAQ,EAAE;AAA9D,WAA3B,CAAnE;AACH,SAFD,MAGK;AACD,WAAC,EAAE,GAAG,OAAI,CAAC,iBAAX,MAAkC,IAAlC,IAA0C,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmE,EAAE,CAAC,uBAAH,CAA2B;AAAE,iBAAK,EAAE,iBAAT;AAA4B,mBAAO,EAAE,aAArC;AAAoD,oBAAQ,EAAE;AAA9D,WAA3B,CAAnE;AACH;AACJ,OAlBD;AAmBH;AACD;;;;;AAKG;;;;WACH,qCAA4B,YAA5B,EAA0C,YAA1C,EAAsD;AAAA;;AAClD,UAAI,CAAC,KAAK,kBAAV,EAA8B;AAC1B;AACH;;AACD,UAAM,KAAK,GAAG,YAAY,CAAC,aAAb,CAA2B,OAA3B,CAAd,CAJkD,CAKlD;;AACA,WAAK,wBAAL,CAA8B,QAA9B,CAAuC,YAAK;AACxC,YAAI,YAAY,CAAC,IAAb,CAAkB,eAAK;AAAA,iBAAI,CAAC,KAAL;AAAA,SAAvB,CAAJ,EAAwC;AACpC,iBAAI,CAAC,kBAAL,CAAwB,KAAxB,EAA+B,CAAC,QAAD,CAA/B;AACH,SAFD,MAGK;AACD,iBAAI,CAAC,eAAL,CAAqB,KAArB,EAA4B,QAA5B,EAAsC,CAAtC,EAAyC,KAAzC;AACH;AACJ,OAPD;AAQH;AACD;;;;AAIG;;;;WACH,4BAAmB,OAAnB,EAA4B,gBAA5B,EAA4C;AAAA,iOACtB,gBADsB;AAAA;;AAAA;AACxC,+DAAoC;AAAA,cAAzB,GAAyB;AAChC,iBAAO,CAAC,KAAR,CAAc,GAAd,IAAqB,EAArB;AACA,iBAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,KAAK,cAAL,CAAoB,GAApB,CAAzB;AACH,SAJuC,CAKxC;AACA;AACA;AACA;;AARwC;AAAA;AAAA;AAAA;AAAA;;AASxC,UAAM,YAAY,GAAG,iBAAiB,CAAC,IAAlB,CAAuB,aAAG;AAAA,eAAI,gBAAgB,CAAC,OAAjB,CAAyB,GAAzB,MAAkC,CAAC,CAAnC,IAAwC,OAAO,CAAC,KAAR,CAAc,GAAd,CAA5C;AAAA,OAA1B,CAArB;;AACA,UAAI,YAAJ,EAAkB;AACd,eAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,KAAK,oBAAL,CAA0B,OAA1B,CAAvB;AACH,OAFD,MAGK;AACD;AACA,eAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,EAAvB;;AACA,YAAI,KAAK,6BAAT,EAAwC;AACpC,iBAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,EAAzB;AACH;;AACD,eAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,KAAK,aAA9B;AACH;AACJ;AACD;;;;AAIG;;;;WACH,yBAAgB,OAAhB,EAAyB,GAAzB,EAA8B,QAA9B,EAAwC,eAAxC,EAAuD;AACnD,aAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,KAAK,aAA3B;;AACA,UAAI,eAAJ,EAAqB;AACjB,eAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,KAAK,cAAL,CAAoB,GAApB,CAAtB;AACH;;AACD,aAAO,CAAC,KAAR,CAAc,GAAd,cAAwB,QAAxB;AACA,aAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,KAAK,oBAAL,CAA0B,OAA1B,CAAvB;;AACA,UAAI,KAAK,6BAAT,EAAwC;AACpC,eAAO,CAAC,KAAR,CAAc,OAAd,IAAyB,8CAAzB;AACH;AACJ;AACD;;;;;;;;;;AAUG;;;;WACH,8BAAqB,OAArB,EAA4B;AACxB,UAAM,gBAAgB,GAAG;AACrB,WAAG,EAAE,GADgB;AAErB,cAAM,EAAE,EAFa;AAGrB,YAAI,EAAE,CAHe;AAIrB,aAAK,EAAE;AAJc,OAAzB;AAMA,UAAI,MAAM,GAAG,CAAb,CAPwB,CAQxB;AACA;AACA;;AAVwB,iOAWN,iBAXM;AAAA;;AAAA;AAWxB,+DAAqC;AAAA,cAA1B,GAA0B;;AACjC,cAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ,EAAwB;AACpB,kBAAM,IAAI,gBAAgB,CAAC,GAAD,CAA1B;AACH;AACJ;AAfuB;AAAA;AAAA;AAAA;AAAA;;AAgBxB,aAAO,MAAM,aAAM,MAAN,IAAiB,EAA9B;AACH;AACD;;;;WACA,wBAAe,GAAf,EAAgD;AAAA,UAA5B,qBAA4B,uEAAJ,IAAI;;AAC5C,UAAI,CAAC,qBAAD,IAA0B,KAAK,iBAAL,CAAuB,MAArD,EAA6D;AACzD,eAAO,KAAK,iBAAZ;AACH;;AACD,UAAM,UAAU,GAAG,EAAnB;AACA,UAAM,aAAa,GAAG,GAAG,CAAC,QAA1B;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC3C,YAAI,IAAI,GAAG,aAAa,CAAC,CAAD,CAAxB;AACA,kBAAU,CAAC,IAAX,CAAgB,IAAI,CAAC,qBAAL,GAA6B,KAA7C;AACH;;AACD,WAAK,iBAAL,GAAyB,UAAzB;AACA,aAAO,UAAP;AACH;AACD;;;;AAIG;;;;WACH,wCAA+B,MAA/B,EAAuC,YAAvC,EAAmD;AAC/C,UAAM,SAAS,GAAG,EAAlB;AACA,UAAI,YAAY,GAAG,CAAnB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACpC,YAAI,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACjB,mBAAS,CAAC,CAAD,CAAT,GAAe,YAAf;AACA,sBAAY,IAAI,MAAM,CAAC,CAAD,CAAtB;AACH;AACJ;;AACD,aAAO,SAAP;AACH;AACD;;;;AAIG;;;;WACH,sCAA6B,MAA7B,EAAqC,YAArC,EAAiD;AAC7C,UAAM,SAAS,GAAG,EAAlB;AACA,UAAI,YAAY,GAAG,CAAnB;;AACA,WAAK,IAAI,CAAC,GAAG,MAAM,CAAC,MAApB,EAA4B,CAAC,GAAG,CAAhC,EAAmC,CAAC,EAApC,EAAwC;AACpC,YAAI,YAAY,CAAC,CAAD,CAAhB,EAAqB;AACjB,mBAAS,CAAC,CAAD,CAAT,GAAe,YAAf;AACA,sBAAY,IAAI,MAAM,CAAC,CAAD,CAAtB;AACH;AACJ;;AACD,aAAO,SAAP;AACH;;;;;AAGL;;;;;;AAMG;;AACH;;;;AAIG;;;AACH,SAAS,0BAAT,CAAoC,EAApC,EAAsC;AAClC,SAAO,KAAK,2CAAmC,EAAnC,SAAZ;AACH;AACD;;;AAGG;;;AACH,SAAS,gCAAT,CAA0C,IAA1C,EAA8C;AAC1C,SAAO,KAAK,wDAAgD,IAAhD,SAAZ;AACH;AACD;;;AAGG;;;AACH,SAAS,mCAAT,GAA4C;AACxC,SAAO,KAAK,wEAAZ;AACH;AACD;;;AAGG;;;AACH,SAAS,kCAAT,CAA4C,IAA5C,EAAgD;AAC5C,SAAO,KAAK,CAAC,kFACa,IAAI,CAAC,SAAL,CAAe,IAAf,CADb,CAAD,CAAZ;AAEH;AACD;;;AAGG;;;AACH,SAAS,2BAAT,GAAoC;AAChC,SAAO,KAAK,CAAC,sDACT,oDADQ,CAAZ;AAEH;AACD;;;AAGG;;;AACH,SAAS,8BAAT,GAAuC;AACnC,SAAO,KAAK,0EAAZ;AACH;AACD;;;AAGG;;;AACH,SAAS,yCAAT,GAAkD;AAC9C,SAAO,KAAK,+DAAZ;AACH;AACD;;;AAGG;;;AACH,SAAS,kCAAT,GAA2C;AACvC,SAAO,KAAK,uCAAZ;AACH;AAED;;;;;;AAMG;;AACH;;;AACA,IAAM,2BAA2B,gBAAG,IAAI,yDAAJ,CAAmB,SAAnB,CAApC;;;MAaM,c;;;;AAEN,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,WAAD,EAAc,aAAd,EAA6B,EAA7B,CAAD,EAAmC,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,EAA1C,CAAnC,CAAnC;AAAsH,YAAQ,EAAE,cAAC,iEAA0B,CAC5M;AAAE,aAAO,EAAE,6EAAX;AAAoC,cAAQ,EAAE,kFAA4B;AAA1E,KAD4M,CAA1B,CAAD;AAAhI,GAAzB,CAApC;;;;;MAgBM,a,GACF,uBAAY,aAAZ,EAA2B,UAA3B,EAAqC;AAAA;;AACjC,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH,G;;AAEL,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,2DAAzB,CAAzB,EAA4E,gEAAyB,qDAAzB,CAA5E,CAAP;AAAkI,GAA3L;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAAlC,GAAzB,CAAnC;;;;;MAaM,e,GACF,yBAAY,aAAZ,EAA2B,UAA3B,EAAqC;AAAA;;AACjC,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH,G;;AAEL,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,gEAAyB,2DAAzB,CAA3B,EAA8E,gEAAyB,qDAAzB,CAA9E,CAAP;AAAoI,GAAjM;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD;AAApC,GAAzB,CAArC;;;;;MAaM,e,GACF,yBAAY,aAAZ,EAA2B,UAA3B,EAAqC;AAAA;;AACjC,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH,G;;AAEL,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,gEAAyB,2DAAzB,CAA3B,EAA8E,gEAAyB,qDAAzB,CAA9E,CAAP;AAAoI,GAAjM;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD;AAApC,GAAzB,CAArC;;;;;MAcM,e,GACF,yBAAY,aAAZ,EAA2B,UAA3B,EAAqC;AAAA;;AACjC,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACH,G;;AAEL,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,gEAAyB,2DAAzB,CAA3B,EAA8E,gEAAyB,qDAAzB,CAA9E,CAAP;AAAoI,GAAjM;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD;AAApC,GAAzB,CAArC;;;AASA;;;;AAIG;;;AACH,IAAM,kBAAkB,GACxB;AACA;AAFwB,wSAAxB;AAWA;;;AAGG;;IACG,U;;;;;;;;;;;;EAAmB,0D;;;MAQnB,Q;AACF,sBAAY,QAAZ,EAAsB,kBAAtB,EAA0C,WAA1C,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,aAAzF,EAAwG,wBAAxG,EAAkI,cAAlI;AACA;;;AAGG;AACH,8BALA,EAK0B;AAAA;;AACtB,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,kBAAL,GAA0B,kBAA1B;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,aAAL,GAAqB,aAArB;AACA,WAAK,wBAAL,GAAgC,wBAAhC;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,WAAK,0BAAL,GAAkC,0BAAlC;AACA;;AACA,WAAK,UAAL,GAAkB,IAAI,0CAAJ,EAAlB;AACA;;;;AAIG;;AACH,WAAK,iBAAL,GAAyB,IAAI,GAAJ,EAAzB;AACA;;;;AAIG;;AACH,WAAK,iBAAL,GAAyB,IAAI,GAAJ,EAAzB;AACA;;;;AAIG;;AACH,WAAK,cAAL,GAAsB,IAAI,GAAJ,EAAtB;AACA;;;;AAIG;;AACH,WAAK,oBAAL,GAA4B,IAAI,GAAJ,EAA5B;AACA;;;;AAIG;;AACH,WAAK,oBAAL,GAA4B,IAAI,GAAJ,EAA5B;AACA;;;AAGG;;AACH,WAAK,oBAAL,GAA4B,IAA5B;AACA;;;AAGG;;AACH,WAAK,oBAAL,GAA4B,IAA5B;AACA;;;AAGG;;AACH,WAAK,4BAAL,GAAoC,IAApC;AACA;;;;AAIG;;AACH,WAAK,2BAAL,GAAmC,IAAnC;AACA;;;;;;;;;;;;AAYG;;AACH,WAAK,oBAAL,GAA4B,IAAI,GAAJ,EAA5B;AACA;;;AAGG;;AACH,WAAK,cAAL,GAAsB,kBAAtB;AACA;;;;AAIG;;AACH,WAAK,4BAAL,GAAoC,IAApC;AACA;;AACA,WAAK,mBAAL,GAA2B,KAA3B;AACA,WAAK,sBAAL,GAA8B,KAA9B;AACA,WAAK,YAAL,GAAoB,KAApB,CA3FsB,CA4FtB;AACA;;AACA;;;;;AAKG;;AACH,WAAK,UAAL,GAAkB,IAAI,kDAAJ,CAAoB;AAAE,aAAK,EAAE,CAAT;AAAY,WAAG,EAAE,MAAM,CAAC;AAAxB,OAApB,CAAlB;;AACA,UAAI,CAAC,IAAL,EAAW;AACP,aAAK,WAAL,CAAiB,aAAjB,CAA+B,YAA/B,CAA4C,MAA5C,EAAoD,OAApD;AACH;;AACD,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,kBAAL,GAA0B,KAAK,WAAL,CAAiB,aAAjB,CAA+B,QAA/B,KAA4C,OAAtE;AACH;AACD;;;;;AAKG;;;;;WACH,eAAW;AACP,eAAO,KAAK,UAAZ;AACH,O;WACD,aAAY,EAAZ,EAAc;AACV,YAAI,CAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,EAAE,IAAI,IAAzD,IAAiE,OAAO,EAAP,KAAc,UAAnF,EAA+F;AAC3F,iBAAO,CAAC,IAAR,oDAAyD,IAAI,CAAC,SAAL,CAAe,EAAf,CAAzD;AACH;;AACD,aAAK,UAAL,GAAkB,EAAlB;AACH;AACD;;;;;;;;;;;;;;;;;;;AAmBG;;;;WACH,eAAc;AACV,eAAO,KAAK,WAAZ;AACH,O;WACD,aAAe,UAAf,EAAyB;AACrB,YAAI,KAAK,WAAL,KAAqB,UAAzB,EAAqC;AACjC,eAAK,iBAAL,CAAuB,UAAvB;AACH;AACJ;AACD;;;;;AAKG;;;;WACH,eAAyB;AACrB,eAAO,KAAK,sBAAZ;AACH,O;WACD,aAA0B,CAA1B,EAA2B;AACvB,aAAK,sBAAL,GAA8B,6EAAqB,CAAC,CAAD,CAAnD,CADuB,CAEvB;AACA;;AACA,YAAI,KAAK,UAAL,IAAmB,KAAK,UAAL,CAAgB,aAAhB,CAA8B,MAArD,EAA6D;AACzD,eAAK,oBAAL;;AACA,eAAK,wBAAL;AACH;AACJ;AACD;;;AAGG;;;;WACH,eAAe;AACX,eAAO,KAAK,YAAZ;AACH,O;WACD,aAAgB,CAAhB,EAAiB;AACb,aAAK,YAAL,GAAoB,6EAAqB,CAAC,CAAD,CAAzC,CADa,CAEb;;AACA,aAAK,2BAAL,GAAmC,IAAnC;AACA,aAAK,4BAAL,GAAoC,IAApC;AACH;;;aACD,oBAAQ;AAAA;;AACJ,aAAK,kBAAL;;AACA,YAAI,KAAK,kBAAT,EAA6B;AACzB,eAAK,yBAAL;AACH,SAJG,CAKJ;AACA;AACA;;;AACA,aAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,IAAd,CAAmB,EAAnB,EAAuB,MAAvB,CAA8B,UAAC,EAAD,EAAK,OAAL,EAAgB;AAC7D,iBAAO,OAAI,CAAC,OAAL,GAAe,OAAI,CAAC,OAAL,CAAa,OAAO,CAAC,SAArB,EAAgC,OAAO,CAAC,IAAxC,CAAf,GAA+D,OAAtE;AACH,SAFkB,CAAnB;;AAGA,aAAK,cAAL,CAAoB,MAApB,GAA6B,IAA7B,CAAkC,0DAAS,CAAC,KAAK,UAAN,CAA3C,EAA8D,SAA9D,CAAwE,YAAK;AACzE,iBAAI,CAAC,2BAAL,GAAmC,IAAnC;AACH,SAFD;AAGH;;;aACD,iCAAqB;AACjB;AACA,aAAK,aAAL;;AACA,aAAK,gBAAL,GAHiB,CAIjB;;;AACA,YAAI,CAAC,KAAK,cAAL,CAAoB,MAArB,IAA+B,CAAC,KAAK,cAAL,CAAoB,MAApD,IAA8D,CAAC,KAAK,QAAL,CAAc,MAA7E,KACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,gBAAM,2BAA2B,EAAjC;AACH,SARgB,CASjB;;;AACA,YAAM,cAAc,GAAG,KAAK,qBAAL,EAAvB;;AACA,YAAM,cAAc,GAAG,cAAc,IAAI,KAAK,oBAAvB,IAA+C,KAAK,oBAA3E,CAXiB,CAYjB;;AACA,aAAK,4BAAL,GAAoC,KAAK,4BAAL,IAAqC,cAAzE;AACA,aAAK,2BAAL,GAAmC,cAAnC,CAdiB,CAejB;;AACA,YAAI,KAAK,oBAAT,EAA+B;AAC3B,eAAK,sBAAL;;AACA,eAAK,oBAAL,GAA4B,KAA5B;AACH,SAnBgB,CAoBjB;;;AACA,YAAI,KAAK,oBAAT,EAA+B;AAC3B,eAAK,sBAAL;;AACA,eAAK,oBAAL,GAA4B,KAA5B;AACH,SAxBgB,CAyBjB;AACA;;;AACA,YAAI,KAAK,UAAL,IAAmB,KAAK,QAAL,CAAc,MAAd,GAAuB,CAA1C,IAA+C,CAAC,KAAK,yBAAzD,EAAoF;AAChF,eAAK,qBAAL;AACH,SAFD,MAGK,IAAI,KAAK,4BAAT,EAAuC;AACxC;AACA;AACA,eAAK,wBAAL;AACH;;AACD,aAAK,kBAAL;AACH;;;aACD,uBAAW;AACP,aAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;;AACA,aAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC;;AACA,aAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC;;AACA,aAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC;;AACA,aAAK,oBAAL,CAA0B,KAA1B;;AACA,aAAK,UAAL,CAAgB,IAAhB;;AACA,aAAK,UAAL,CAAgB,QAAhB;;AACA,YAAI,sEAAY,CAAC,KAAK,UAAN,CAAhB,EAAmC;AAC/B,eAAK,UAAL,CAAgB,UAAhB,CAA2B,IAA3B;AACH;AACJ;AACD;;;;;;;;;AASG;;;;aACH,sBAAU;AAAA;;AACN,aAAK,WAAL,GAAmB,KAAK,iBAAL,EAAnB;;AACA,YAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,WAA3B,CAAhB;;AACA,YAAI,CAAC,OAAL,EAAc;AACV,eAAK,gBAAL;;AACA;AACH;;AACD,YAAM,aAAa,GAAG,KAAK,UAAL,CAAgB,aAAtC;;AACA,aAAK,aAAL,CAAmB,YAAnB,CAAgC,OAAhC,EAAyC,aAAzC,EAAwD,UAAC,MAAD,EAAS,sBAAT,EAAiC,YAAjC;AAAA,iBAAkD,OAAI,CAAC,oBAAL,CAA0B,MAAM,CAAC,IAAjC,EAAuC,YAAvC,CAAlD;AAAA,SAAxD,EAAgK,UAAC,MAAD;AAAA,iBAAY,MAAM,CAAC,IAAP,CAAY,IAAxB;AAAA,SAAhK,EAA8L,UAAC,MAAD,EAAW;AACrM,cAAI,MAAM,CAAC,SAAP,KAAqB;AAAE;AAAvB,aAAyC,MAAM,CAAC,OAApD,EAA6D;AACzD,mBAAI,CAAC,0BAAL,CAAgC,MAAM,CAAC,MAAP,CAAc,IAAd,CAAmB,MAAnD,EAA2D,MAAM,CAAC,OAAlE;AACH;AACJ,SAJD,EARM,CAaN;;;AACA,aAAK,sBAAL,GAdM,CAeN;AACA;;;AACA,eAAO,CAAC,qBAAR,CAA8B,UAAC,MAAD,EAAW;AACrC,cAAM,OAAO,GAAG,aAAa,CAAC,GAAd,CAAkB,MAAM,CAAC,YAAzB,CAAhB;AACA,iBAAO,CAAC,OAAR,CAAgB,SAAhB,GAA4B,MAAM,CAAC,IAAP,CAAY,IAAxC;AACH,SAHD;;AAIA,aAAK,gBAAL;;AACA,aAAK,wBAAL;AACH;AACD;;;;aACA,sBAAa,SAAb,EAAsB;AAClB,aAAK,iBAAL,CAAuB,GAAvB,CAA2B,SAA3B;AACH;AACD;;;;aACA,yBAAgB,SAAhB,EAAyB;AACrB,aAAK,iBAAL,CAAuB,MAAvB,CAA8B,SAA9B;AACH;AACD;;;;aACA,mBAAU,MAAV,EAAgB;AACZ,aAAK,cAAL,CAAoB,GAApB,CAAwB,MAAxB;AACH;AACD;;;;aACA,sBAAa,MAAb,EAAmB;AACf,aAAK,cAAL,CAAoB,MAApB,CAA2B,MAA3B;AACH;AACD;;;;aACA,yBAAgB,YAAhB,EAA4B;AACxB,aAAK,oBAAL,CAA0B,GAA1B,CAA8B,YAA9B;;AACA,aAAK,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;aACA,4BAAmB,YAAnB,EAA+B;AAC3B,aAAK,oBAAL,CAA0B,MAA1B,CAAiC,YAAjC;;AACA,aAAK,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;aACA,yBAAgB,YAAhB,EAA4B;AACxB,aAAK,oBAAL,CAA0B,GAA1B,CAA8B,YAA9B;;AACA,aAAK,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;aACA,4BAAmB,YAAnB,EAA+B;AAC3B,aAAK,oBAAL,CAA0B,MAA1B,CAAiC,YAAjC;;AACA,aAAK,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;aACA,sBAAa,SAAb,EAAsB;AAClB,aAAK,gBAAL,GAAwB,SAAxB;AACH;AACD;;;;;;AAMG;;;;aACH,uCAA2B;AACvB,YAAM,UAAU,GAAG,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,CAAnB;;AACA,YAAM,YAAY,GAAG,KAAK,WAAL,CAAiB,aAAtC,CAFuB,CAGvB;AACA;AACA;;AACA,YAAM,KAAK,GAAG,YAAY,CAAC,aAAb,CAA2B,OAA3B,CAAd;;AACA,YAAI,KAAJ,EAAW;AACP,eAAK,CAAC,KAAN,CAAY,OAAZ,GAAsB,UAAU,CAAC,MAAX,GAAoB,EAApB,GAAyB,MAA/C;AACH;;AACD,YAAM,YAAY,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAwB,aAAG;AAAA,iBAAI,GAAG,CAAC,MAAR;AAAA,SAA3B,CAArB;;AACA,aAAK,aAAL,CAAmB,sBAAnB,CAA0C,UAA1C,EAAsD,CAAC,KAAD,CAAtD;;AACA,aAAK,aAAL,CAAmB,SAAnB,CAA6B,UAA7B,EAAyC,YAAzC,EAAuD,KAAvD,EAZuB,CAavB;;;AACA,aAAK,cAAL,CAAoB,OAApB,CAA4B,aAAG;AAAA,iBAAI,GAAG,CAAC,kBAAJ,EAAJ;AAAA,SAA/B;AACH;AACD;;;;;;AAMG;;;;aACH,uCAA2B;AACvB,YAAM,UAAU,GAAG,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,CAAnB;;AACA,YAAM,YAAY,GAAG,KAAK,WAAL,CAAiB,aAAtC,CAFuB,CAGvB;AACA;AACA;;AACA,YAAM,KAAK,GAAG,YAAY,CAAC,aAAb,CAA2B,OAA3B,CAAd;;AACA,YAAI,KAAJ,EAAW;AACP,eAAK,CAAC,KAAN,CAAY,OAAZ,GAAsB,UAAU,CAAC,MAAX,GAAoB,EAApB,GAAyB,MAA/C;AACH;;AACD,YAAM,YAAY,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAwB,aAAG;AAAA,iBAAI,GAAG,CAAC,MAAR;AAAA,SAA3B,CAArB;;AACA,aAAK,aAAL,CAAmB,sBAAnB,CAA0C,UAA1C,EAAsD,CAAC,QAAD,CAAtD;;AACA,aAAK,aAAL,CAAmB,SAAnB,CAA6B,UAA7B,EAAyC,YAAzC,EAAuD,QAAvD;;AACA,aAAK,aAAL,CAAmB,2BAAnB,CAA+C,KAAK,WAAL,CAAiB,aAAhE,EAA+E,YAA/E,EAbuB,CAcvB;;;AACA,aAAK,cAAL,CAAoB,OAApB,CAA4B,aAAG;AAAA,iBAAI,GAAG,CAAC,kBAAJ,EAAJ;AAAA,SAA/B;AACH;AACD;;;;;;AAMG;;;;aACH,oCAAwB;AAAA;;AACpB,YAAM,UAAU,GAAG,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,CAAnB;;AACA,YAAM,QAAQ,GAAG,KAAK,gBAAL,CAAsB,KAAK,UAA3B,CAAjB;;AACA,YAAM,UAAU,GAAG,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,CAAnB,CAHoB,CAIpB;AACA;AACA;AACA;;;AACA,YAAK,KAAK,kBAAL,IAA2B,CAAC,KAAK,YAAlC,IACG,KAAK,4BADZ,EAC0C;AACtC;AACA;AACA,eAAK,aAAL,CAAmB,sBAAnB,6MAA8C,UAA9C,qMAA6D,QAA7D,qMAA0E,UAA1E,IAAuF,CAAC,MAAD,EAAS,OAAT,CAAvF;;AACA,eAAK,4BAAL,GAAoC,KAApC;AACH,SAdmB,CAepB;;;AACA,kBAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAY,CAAZ,EAAiB;AAChC,iBAAI,CAAC,sBAAL,CAA4B,CAAC,SAAD,CAA5B,EAAyC,OAAI,CAAC,cAAL,CAAoB,CAApB,CAAzC;AACH,SAFD,EAhBoB,CAmBpB;;AACA,aAAK,QAAL,CAAc,OAAd,CAAsB,gBAAM,EAAG;AAC3B;AACA,cAAM,IAAI,GAAG,EAAb;;AACA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACtC,gBAAI,OAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,MAApB,KAA+B,MAAnC,EAA2C;AACvC,kBAAI,CAAC,IAAL,CAAU,QAAQ,CAAC,CAAD,CAAlB;AACH;AACJ;;AACD,iBAAI,CAAC,sBAAL,CAA4B,IAA5B,EAAkC,MAAlC;AACH,SATD,EApBoB,CA8BpB;;;AACA,kBAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAY,CAAZ,EAAiB;AAChC,iBAAI,CAAC,sBAAL,CAA4B,CAAC,SAAD,CAA5B,EAAyC,OAAI,CAAC,cAAL,CAAoB,CAApB,CAAzC;AACH,SAFD,EA/BoB,CAkCpB;;AACA,aAAK,CAAC,IAAN,CAAW,KAAK,iBAAL,CAAuB,MAAvB,EAAX,EAA4C,OAA5C,CAAoD,aAAG;AAAA,iBAAI,GAAG,CAAC,kBAAJ,EAAJ;AAAA,SAAvD;AACH;AACD;;;;AAIG;;;;aACH,6BAAiB;AACb,YAAM,UAAU,GAAG,EAAnB,CADa,CAEb;AACA;;AACA,YAAM,oBAAoB,GAAG,KAAK,oBAAlC;AACA,aAAK,oBAAL,GAA4B,IAAI,GAAJ,EAA5B,CALa,CAMb;AACA;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,KAAL,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,cAAI,IAAI,GAAG,KAAK,KAAL,CAAW,CAAX,CAAX;;AACA,cAAM,iBAAiB,GAAG,KAAK,qBAAL,CAA2B,IAA3B,EAAiC,CAAjC,EAAoC,oBAAoB,CAAC,GAArB,CAAyB,IAAzB,CAApC,CAA1B;;AACA,cAAI,CAAC,KAAK,oBAAL,CAA0B,GAA1B,CAA8B,IAA9B,CAAL,EAA0C;AACtC,iBAAK,oBAAL,CAA0B,GAA1B,CAA8B,IAA9B,EAAoC,IAAI,OAAJ,EAApC;AACH;;AACD,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,iBAAiB,CAAC,MAAtC,EAA8C,CAAC,EAA/C,EAAmD;AAC/C,gBAAI,SAAS,GAAG,iBAAiB,CAAC,CAAD,CAAjC;;AACA,gBAAM,KAAK,GAAG,KAAK,oBAAL,CAA0B,GAA1B,CAA8B,SAAS,CAAC,IAAxC,CAAd;;AACA,gBAAI,KAAK,CAAC,GAAN,CAAU,SAAS,CAAC,MAApB,CAAJ,EAAiC;AAC7B,mBAAK,CAAC,GAAN,CAAU,SAAS,CAAC,MAApB,EAA4B,IAA5B,CAAiC,SAAjC;AACH,aAFD,MAGK;AACD,mBAAK,CAAC,GAAN,CAAU,SAAS,CAAC,MAApB,EAA4B,CAAC,SAAD,CAA5B;AACH;;AACD,sBAAU,CAAC,IAAX,CAAgB,SAAhB;AACH;AACJ;;AACD,eAAO,UAAP;AACH;AACD;;;;AAIG;;;;aACH,+BAAsB,IAAtB,EAA4B,SAA5B,EAAuC,KAAvC,EAA4C;AACxC,YAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,IAAjB,EAAuB,SAAvB,CAAhB;;AACA,eAAO,OAAO,CAAC,GAAR,CAAY,gBAAM,EAAG;AACxB,cAAM,gBAAgB,GAAI,KAAK,IAAI,KAAK,CAAC,GAAN,CAAU,MAAV,CAAV,GAA+B,KAAK,CAAC,GAAN,CAAU,MAAV,CAA/B,GAAmD,EAA5E;;AACA,cAAI,gBAAgB,CAAC,MAArB,EAA6B;AACzB,gBAAM,OAAO,GAAG,gBAAgB,CAAC,KAAjB,EAAhB;AACA,mBAAO,CAAC,SAAR,GAAoB,SAApB;AACA,mBAAO,OAAP;AACH,WAJD,MAKK;AACD,mBAAO;AAAE,kBAAI,EAAJ,IAAF;AAAQ,oBAAM,EAAN,MAAR;AAAgB,uBAAS,EAAT;AAAhB,aAAP;AACH;AACJ,SAVM,CAAP;AAWH;AACD;;;;aACA,4BAAgB;AAAA;;AACZ,aAAK,iBAAL,CAAuB,KAAvB;;AACA,YAAM,UAAU,GAAG,gBAAgB,CAAC,KAAK,WAAL,CAAiB,KAAK,kBAAtB,CAAD,EAA4C,KAAK,iBAAjD,CAAnC;AACA,kBAAU,CAAC,OAAX,CAAmB,mBAAS,EAAG;AAC3B,cAAI,OAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,SAAS,CAAC,IAArC,MACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,kBAAM,gCAAgC,CAAC,SAAS,CAAC,IAAX,CAAtC;AACH;;AACD,iBAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,SAAS,CAAC,IAArC,EAA2C,SAA3C;AACH,SAND;AAOH;AACD;;;;aACA,yBAAa;AACT,aAAK,cAAL,GAAsB,gBAAgB,CAAC,KAAK,WAAL,CAAiB,KAAK,qBAAtB,CAAD,EAA+C,KAAK,oBAApD,CAAtC;AACA,aAAK,cAAL,GAAsB,gBAAgB,CAAC,KAAK,WAAL,CAAiB,KAAK,qBAAtB,CAAD,EAA+C,KAAK,oBAApD,CAAtC;AACA,aAAK,QAAL,GAAgB,gBAAgB,CAAC,KAAK,WAAL,CAAiB,KAAK,eAAtB,CAAD,EAAyC,KAAK,cAA9C,CAAhC,CAHS,CAIT;;AACA,YAAM,cAAc,GAAG,KAAK,QAAL,CAAc,MAAd,CAAqB,aAAG;AAAA,iBAAI,CAAC,GAAG,CAAC,IAAT;AAAA,SAAxB,CAAvB;;AACA,YAAI,CAAC,KAAK,qBAAN,IAA+B,cAAc,CAAC,MAAf,GAAwB,CAAvD,KACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,gBAAM,mCAAmC,EAAzC;AACH;;AACD,aAAK,cAAL,GAAsB,cAAc,CAAC,CAAD,CAApC;AACH;AACD;;;;AAIG;;;;aACH,iCAAqB;AACjB,YAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,GAAD,EAAM,GAAN;AAAA,iBAAc,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,cAAJ,EAAvB;AAAA,SAA3B,CADiB,CAEjB;;;AACA,YAAM,kBAAkB,GAAG,KAAK,QAAL,CAAc,MAAd,CAAqB,kBAArB,EAAyC,KAAzC,CAA3B;;AACA,YAAI,kBAAJ,EAAwB;AACpB,eAAK,oBAAL;AACH,SANgB,CAOjB;;;AACA,YAAM,oBAAoB,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,kBAA3B,EAA+C,KAA/C,CAA7B;;AACA,YAAI,oBAAJ,EAA0B;AACtB,eAAK,sBAAL;AACH;;AACD,YAAM,oBAAoB,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,kBAA3B,EAA+C,KAA/C,CAA7B;;AACA,YAAI,oBAAJ,EAA0B;AACtB,eAAK,sBAAL;AACH;;AACD,eAAO,kBAAkB,IAAI,oBAAtB,IAA8C,oBAArD;AACH;AACD;;;;AAIG;;;;aACH,2BAAkB,UAAlB,EAA4B;AACxB,aAAK,KAAL,GAAa,EAAb;;AACA,YAAI,sEAAY,CAAC,KAAK,UAAN,CAAhB,EAAmC;AAC/B,eAAK,UAAL,CAAgB,UAAhB,CAA2B,IAA3B;AACH,SAJuB,CAKxB;;;AACA,YAAI,KAAK,yBAAT,EAAoC;AAChC,eAAK,yBAAL,CAA+B,WAA/B;;AACA,eAAK,yBAAL,GAAiC,IAAjC;AACH;;AACD,YAAI,CAAC,UAAL,EAAiB;AACb,cAAI,KAAK,WAAT,EAAsB;AAClB,iBAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;AACH;;AACD,eAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;AACH;;AACD,aAAK,WAAL,GAAmB,UAAnB;AACH;AACD;;;;aACA,iCAAqB;AAAA;;AACjB;AACA,YAAI,CAAC,KAAK,UAAV,EAAsB;AAClB;AACH;;AACD,YAAI,UAAJ;;AACA,YAAI,sEAAY,CAAC,KAAK,UAAN,CAAhB,EAAmC;AAC/B,oBAAU,GAAG,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAAb;AACH,SAFD,MAGK,IAAI,mDAAY,CAAC,KAAK,UAAN,CAAhB,EAAmC;AACpC,oBAAU,GAAG,KAAK,UAAlB;AACH,SAFI,MAGA,IAAI,KAAK,CAAC,OAAN,CAAc,KAAK,UAAnB,CAAJ,EAAoC;AACrC,oBAAU,GAAG,yCAAE,CAAC,KAAK,UAAN,CAAf;AACH;;AACD,YAAI,UAAU,KAAK,SAAf,KAA6B,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAjE,CAAJ,EAAiF;AAC7E,gBAAM,8BAA8B,EAApC;AACH;;AACD,aAAK,yBAAL,GAAiC,UAAU,CAAC,IAAX,CAAgB,0DAAS,CAAC,KAAK,UAAN,CAAzB,EAC5B,SAD4B,CAClB,cAAI,EAAG;AAClB,iBAAI,CAAC,KAAL,GAAa,IAAI,IAAI,EAArB;;AACA,iBAAI,CAAC,UAAL;AACH,SAJgC,CAAjC;AAKH;AACD;;;AAGG;;;;aACH,kCAAsB;AAAA;;AAClB;AACA,YAAI,KAAK,gBAAL,CAAsB,aAAtB,CAAoC,MAApC,GAA6C,CAAjD,EAAoD;AAChD,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC;AACH;;AACD,aAAK,cAAL,CAAoB,OAApB,CAA4B,UAAC,GAAD,EAAM,CAAN;AAAA,iBAAY,OAAI,CAAC,UAAL,CAAgB,OAAI,CAAC,gBAArB,EAAuC,GAAvC,EAA4C,CAA5C,CAAZ;AAAA,SAA5B;;AACA,aAAK,2BAAL;AACH;AACD;;;AAGG;;;;aACH,kCAAsB;AAAA;;AAClB;AACA,YAAI,KAAK,gBAAL,CAAsB,aAAtB,CAAoC,MAApC,GAA6C,CAAjD,EAAoD;AAChD,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAApC;AACH;;AACD,aAAK,cAAL,CAAoB,OAApB,CAA4B,UAAC,GAAD,EAAM,CAAN;AAAA,iBAAY,OAAI,CAAC,UAAL,CAAgB,OAAI,CAAC,gBAArB,EAAuC,GAAvC,EAA4C,CAA5C,CAAZ;AAAA,SAA5B;;AACA,aAAK,2BAAL;AACH;AACD;;;;aACA,gCAAuB,IAAvB,EAA6B,MAA7B,EAAmC;AAAA;;AAC/B,YAAM,UAAU,GAAG,KAAK,CAAC,IAAN,CAAW,MAAM,CAAC,OAAP,IAAkB,EAA7B,EAAiC,GAAjC,CAAqC,oBAAU,EAAG;AACjE,cAAM,SAAS,GAAG,OAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,UAA3B,CAAlB;;AACA,cAAI,CAAC,SAAD,KAAe,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAnD,CAAJ,EAAmE;AAC/D,kBAAM,0BAA0B,CAAC,UAAD,CAAhC;AACH;;AACD,iBAAO,SAAP;AACH,SANkB,CAAnB;AAOA,YAAM,iBAAiB,GAAG,UAAU,CAAC,GAAX,CAAe,mBAAS;AAAA,iBAAI,SAAS,CAAC,MAAd;AAAA,SAAxB,CAA1B;AACA,YAAM,eAAe,GAAG,UAAU,CAAC,GAAX,CAAe,mBAAS;AAAA,iBAAI,SAAS,CAAC,SAAd;AAAA,SAAxB,CAAxB;;AACA,aAAK,aAAL,CAAmB,mBAAnB,CAAuC,IAAvC,EAA6C,iBAA7C,EAAgE,eAAhE,EAAiF,CAAC,KAAK,YAAN,IAAsB,KAAK,2BAA5G;AACH;AACD;;;;aACA,0BAAiB,SAAjB,EAA0B;AACtB,YAAM,YAAY,GAAG,EAArB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,aAAV,CAAwB,MAA5C,EAAoD,CAAC,EAArD,EAAyD;AACrD,cAAM,OAAO,GAAG,SAAS,CAAC,aAAV,CAAwB,GAAxB,CAA4B,CAA5B,CAAhB;AACA,sBAAY,CAAC,IAAb,CAAkB,OAAO,CAAC,SAAR,CAAkB,CAAlB,CAAlB;AACH;;AACD,eAAO,YAAP;AACH;AACD;;;;;AAKG;;;;aACH,qBAAY,IAAZ,EAAkB,SAAlB,EAA2B;AACvB,YAAI,KAAK,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA+B;AAC3B,iBAAO,CAAC,KAAK,QAAL,CAAc,CAAd,CAAD,CAAP;AACH;;AACD,YAAI,OAAO,GAAG,EAAd;;AACA,YAAI,KAAK,qBAAT,EAAgC;AAC5B,iBAAO,GAAG,KAAK,QAAL,CAAc,MAAd,CAAqB,aAAG;AAAA,mBAAI,CAAC,GAAG,CAAC,IAAL,IAAa,GAAG,CAAC,IAAJ,CAAS,SAAT,EAAoB,IAApB,CAAjB;AAAA,WAAxB,CAAV;AACH,SAFD,MAGK;AACD,cAAI,MAAM,GAAG,KAAK,QAAL,CAAc,IAAd,CAAmB,aAAG;AAAA,mBAAI,GAAG,CAAC,IAAJ,IAAY,GAAG,CAAC,IAAJ,CAAS,SAAT,EAAoB,IAApB,CAAhB;AAAA,WAAtB,KAAoE,KAAK,cAAtF;;AACA,cAAI,MAAJ,EAAY;AACR,mBAAO,CAAC,IAAR,CAAa,MAAb;AACH;AACJ;;AACD,YAAI,CAAC,OAAO,CAAC,MAAT,KAAoB,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAxD,CAAJ,EAAwE;AACpE,gBAAM,kCAAkC,CAAC,IAAD,CAAxC;AACH;;AACD,eAAO,OAAP;AACH;;;aACD,8BAAqB,SAArB,EAAgC,KAAhC,EAAqC;AACjC,YAAM,MAAM,GAAG,SAAS,CAAC,MAAzB;AACA,YAAM,OAAO,GAAG;AAAE,mBAAS,EAAE,SAAS,CAAC;AAAvB,SAAhB;AACA,eAAO;AACH,qBAAW,EAAE,MAAM,CAAC,QADjB;AAEH,iBAAO,EAAP,OAFG;AAGH,eAAK,EAAL;AAHG,SAAP;AAKH;AACD;;;;AAIG;;;;aACH,oBAAW,MAAX,EAAmB,MAAnB,EAA2B,KAA3B,EAA8C;AAAA,YAAZ,OAAY,uEAAF,EAAE;AAC1C;AACA,YAAM,IAAI,GAAG,MAAM,CAAC,aAAP,CAAqB,kBAArB,CAAwC,MAAM,CAAC,QAA/C,EAAyD,OAAzD,EAAkE,KAAlE,CAAb;;AACA,aAAK,0BAAL,CAAgC,MAAhC,EAAwC,OAAxC;;AACA,eAAO,IAAP;AACH;;;aACD,oCAA2B,MAA3B,EAAmC,OAAnC,EAA0C;AAAA,oOACb,KAAK,iBAAL,CAAuB,MAAvB,CADa;AAAA;;AAAA;AACtC,oEAAyD;AAAA,gBAAhD,YAAgD;;AACrD,gBAAI,aAAa,CAAC,oBAAlB,EAAwC;AACpC,2BAAa,CAAC,oBAAd,CAAmC,cAAnC,CAAkD,kBAAlD,CAAqE,YAArE,EAAmF,OAAnF;AACH;AACJ;AALqC;AAAA;AAAA;AAAA;AAAA;;AAMtC,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;AAGG;;;;aACH,kCAAsB;AAClB,YAAM,aAAa,GAAG,KAAK,UAAL,CAAgB,aAAtC;;AACA,aAAK,IAAI,WAAW,GAAG,CAAlB,EAAqB,KAAK,GAAG,aAAa,CAAC,MAAhD,EAAwD,WAAW,GAAG,KAAtE,EAA6E,WAAW,EAAxF,EAA4F;AACxF,cAAM,OAAO,GAAG,aAAa,CAAC,GAAd,CAAkB,WAAlB,CAAhB;AACA,cAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;AACA,iBAAO,CAAC,KAAR,GAAgB,KAAhB;AACA,iBAAO,CAAC,KAAR,GAAgB,WAAW,KAAK,CAAhC;AACA,iBAAO,CAAC,IAAR,GAAe,WAAW,KAAK,KAAK,GAAG,CAAvC;AACA,iBAAO,CAAC,IAAR,GAAe,WAAW,GAAG,CAAd,KAAoB,CAAnC;AACA,iBAAO,CAAC,GAAR,GAAc,CAAC,OAAO,CAAC,IAAvB;;AACA,cAAI,KAAK,qBAAT,EAAgC;AAC5B,mBAAO,CAAC,SAAR,GAAoB,KAAK,WAAL,CAAiB,WAAjB,EAA8B,SAAlD;AACA,mBAAO,CAAC,WAAR,GAAsB,WAAtB;AACH,WAHD,MAIK;AACD,mBAAO,CAAC,KAAR,GAAgB,KAAK,WAAL,CAAiB,WAAjB,EAA8B,SAA9C;AACH;AACJ;AACJ;AACD;;;;aACA,2BAAkB,MAAlB,EAAwB;AAAA;;AACpB,YAAI,CAAC,MAAD,IAAW,CAAC,MAAM,CAAC,OAAvB,EAAgC;AAC5B,iBAAO,EAAP;AACH;;AACD,eAAO,KAAK,CAAC,IAAN,CAAW,MAAM,CAAC,OAAlB,EAA2B,kBAAQ,EAAG;AACzC,cAAM,MAAM,GAAG,OAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,QAA3B,CAAf;;AACA,cAAI,CAAC,MAAD,KAAY,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAhD,CAAJ,EAAgE;AAC5D,kBAAM,0BAA0B,CAAC,QAAD,CAAhC;AACH;;AACD,iBAAO,MAAM,CAAC,mBAAP,CAA2B,MAA3B,CAAP;AACH,SANM,CAAP;AAOH;AACD;;;;aACA,qCAAyB;AACrB,YAAM,gBAAgB,GAAG,KAAK,SAAL,CAAe,sBAAf,EAAzB;;AACA,YAAM,QAAQ,GAAG,CACb;AAAE,aAAG,EAAE,OAAP;AAAgB,iBAAO,EAAE,CAAC,KAAK,gBAAN;AAAzB,SADa,EAEb;AAAE,aAAG,EAAE,OAAP;AAAgB,iBAAO,EAAE,CAAC,KAAK,UAAN,EAAkB,KAAK,gBAAvB;AAAzB,SAFa,EAGb;AAAE,aAAG,EAAE,OAAP;AAAgB,iBAAO,EAAE,CAAC,KAAK,gBAAN;AAAzB,SAHa,CAAjB;;AAKA,sCAAsB,QAAtB,iCAAgC;AAA3B,cAAM,OAAO,iBAAb;;AACD,cAAM,OAAO,GAAG,KAAK,SAAL,CAAe,aAAf,CAA6B,OAAO,CAAC,GAArC,CAAhB;;AACA,iBAAO,CAAC,YAAR,CAAqB,MAArB,EAA6B,UAA7B;;AAF4B,sOAGP,OAAO,CAAC,OAHD;AAAA;;AAAA;AAG5B,sEAAsC;AAAA,kBAA3B,MAA2B;AAClC,qBAAO,CAAC,WAAR,CAAoB,MAAM,CAAC,UAAP,CAAkB,aAAtC;AACH;AAL2B;AAAA;AAAA;AAAA;AAAA;;AAM5B,0BAAgB,CAAC,WAAjB,CAA6B,OAA7B;AACH,SAdoB,CAerB;;;AACA,aAAK,WAAL,CAAiB,aAAjB,CAA+B,WAA/B,CAA2C,gBAA3C;AACH;AACD;;;;AAIG;;;;aACH,gCAAoB;AAChB,aAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;;AACA,aAAK,UAAL,CAAgB,aAAhB,CAA8B,KAA9B;;AACA,aAAK,UAAL;AACH;AACD;;;;AAIG;;;;aACH,8BAAkB;AACd,YAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,GAAD,EAAM,CAAN,EAAW;AAClC,iBAAO,GAAG,IAAI,CAAC,CAAC,gBAAF,EAAd;AACH,SAFD,CADc,CAId;AACA;AACA;;;AACA,YAAI,KAAK,cAAL,CAAoB,MAApB,CAA2B,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,eAAK,2BAAL;AACH;;AACD,YAAI,KAAK,cAAL,CAAoB,MAApB,CAA2B,kBAA3B,EAA+C,KAA/C,CAAJ,EAA2D;AACvD,eAAK,2BAAL;AACH;;AACD,YAAI,KAAK,CAAC,IAAN,CAAW,KAAK,iBAAL,CAAuB,MAAvB,EAAX,EAA4C,MAA5C,CAAmD,kBAAnD,EAAuE,KAAvE,CAAJ,EAAmF;AAC/E,eAAK,4BAAL,GAAoC,IAApC;AACA,eAAK,wBAAL;AACH;AACJ;AACD;;;;AAIG;;;;aACH,8BAAkB;AAAA;;AACd,YAAM,SAAS,GAAG,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,KAAtB,GAA8B,KAAhD;AACA,aAAK,aAAL,GAAqB,IAAI,YAAJ,CAAiB,KAAK,kBAAtB,EAA0C,KAAK,cAA/C,EAA+D,SAA/D,EAA0E,KAAK,wBAA/E,EAAyG,KAAK,SAAL,CAAe,SAAxH,EAAmI,KAAK,4BAAxI,EAAsK,KAAK,0BAA3K,CAArB;AACA,SAAC,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAtB,GAA+B,yCAAE,EAAlC,EACK,IADL,CACU,0DAAS,CAAC,KAAK,UAAN,CADnB,EAEK,SAFL,CAEe,eAAK,EAAG;AACnB,iBAAI,CAAC,aAAL,CAAmB,SAAnB,GAA+B,KAA/B;;AACA,iBAAI,CAAC,wBAAL;AACH,SALD;AAMH;AACD;;;;aACA,qBAAY,KAAZ,EAAiB;AAAA;;AACb,eAAO,KAAK,CAAC,MAAN,CAAa,cAAI;AAAA,iBAAI,CAAC,IAAI,CAAC,MAAN,IAAgB,IAAI,CAAC,MAAL,KAAgB,OAApC;AAAA,SAAjB,CAAP;AACH;AACD;;;;aACA,4BAAgB;AACZ,YAAM,SAAS,GAAG,KAAK,gBAAL,IAAyB,KAAK,UAAhD;;AACA,YAAI,SAAJ,EAAe;AACX,cAAM,UAAU,GAAG,KAAK,UAAL,CAAgB,aAAhB,CAA8B,MAA9B,KAAyC,CAA5D;;AACA,cAAI,UAAU,KAAK,KAAK,mBAAxB,EAA6C;AACzC,gBAAM,SAAS,GAAG,KAAK,gBAAL,CAAsB,aAAxC;AACA,sBAAU,GAAG,SAAS,CAAC,kBAAV,CAA6B,SAAS,CAAC,WAAvC,CAAH,GAAyD,SAAS,CAAC,KAAV,EAAnE;AACA,iBAAK,mBAAL,GAA2B,UAA3B;AACH;AACJ;AACJ;;;;;;AAEL,UAAQ,CAAC,IAAT,GAAgB,SAAS,gBAAT,CAA0B,CAA1B,EAA2B;AAAI,WAAO,KAAK,CAAC,IAAI,QAAV,EAAoB,gEAAyB,0DAAzB,CAApB,EAAsE,gEAAyB,4DAAzB,CAAtE,EAA0H,gEAAyB,qDAAzB,CAA1H,EAAuK,gEAAyB,MAAzB,CAAvK,EAAyM,gEAAyB,8DAAzB,EAAgD,CAAhD,CAAzM,EAA6P,gEAAyB,sDAAzB,CAA7P,EAAiS,gEAAyB,4DAAzB,CAAjS,EAA4U,gEAAyB,6EAAzB,CAA5U,EAA+X,gEAAyB,0BAAzB,CAA/X,EAAqb,gEAAyB,kEAAzB,CAArb,EAAqe,gEAAyB,2BAAzB,EAAsD,EAAtD,CAAre,CAAP;AAAyiB,GAAxlB;;AACA,UAAQ,CAAC,IAAT;AAAgB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,QAAR;AAAkB,aAAS,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAAhB,CAA7B;AAA0E,kBAAc,EAAE,SAAS,uBAAT,CAAiC,EAAjC,EAAqC,GAArC,EAA0C,QAA1C,EAAkD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3M,qEAAsB,QAAtB,EAAgC,YAAhC,EAA8C,CAA9C;AACA,qEAAsB,QAAtB,EAAgC,YAAhC,EAA8C,CAA9C;AACA,qEAAsB,QAAtB,EAAgC,SAAhC,EAA2C,CAA3C;AACA,qEAAsB,QAAtB,EAAgC,eAAhC,EAAiD,CAAjD;AACA,qEAAsB,QAAtB,EAAgC,eAAhC,EAAiD,CAAjD;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,UAAJ,GAAiB,EAAE,CAAC,KAAzE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,kBAAJ,GAAyB,EAA9E;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,eAAJ,GAAsB,EAA3E;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,qBAAJ,GAA4B,EAAjF;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,qBAAJ,GAA4B,EAAjF;AACH;AAAE,KAbgD;AAa9C,aAAS,EAAE,SAAS,cAAT,CAAwB,EAAxB,EAA4B,GAA5B,EAA+B;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3D,kEAAmB,aAAnB,EAAkC,CAAlC;AACA,kEAAmB,eAAnB,EAAoC,CAApC;AACA,kEAAmB,eAAnB,EAAoC,CAApC;AACA,kEAAmB,eAAnB,EAAoC,CAApC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,UAAJ,GAAiB,EAAE,CAAC,KAAzE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,gBAAJ,GAAuB,EAAE,CAAC,KAA/E;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,gBAAJ,GAAuB,EAAE,CAAC,KAA/E;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,gBAAJ,GAAuB,EAAE,CAAC,KAA/E;AACH;AAAE,KAxBgD;AAwB9C,aAAS,EAAE,CAAC,CAAD,EAAI,WAAJ,CAxBmC;AAwBjB,YAAQ,EAAE,CAxBO;AAwBJ,gBAAY,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC/G,kEAAmB,wBAAnB,EAA6C,GAAG,CAAC,WAAjD;AACH;AAAE,KA1BgD;AA0B9C,UAAM,EAAE;AAAE,aAAO,EAAE,SAAX;AAAsB,gBAAU,EAAE,YAAlC;AAAgD,2BAAqB,EAAE,uBAAvE;AAAgG,iBAAW,EAAE;AAA7G,KA1BsC;AA0BwF,YAAQ,EAAE,CAAC,UAAD,CA1BlG;AA0BgH,YAAQ,EAAE,cAAC,iEAA0B,CAChM;AAAE,aAAO,EAAE,SAAX;AAAsB,iBAAW,EAAE;AAAnC,KADgM,EAEhM;AAAE,aAAO,EAAE,6EAAX;AAAoC,cAAQ,EAAE,kFAA4B;AAA1E,KAFgM,EAGhM;AAAE,aAAO,EAAE,0BAAX;AAAuC,cAAQ,EAAE;AAAjD,KAHgM,EAIhM;AACA;AAAE,aAAO,EAAE,2BAAX;AAAwC,cAAQ,EAAE;AAAlD,KALgM,CAA1B,CAAD,CA1B1H;AAgC1C,sBAAkB,EAAE,GAhCsB;AAgCjB,SAAK,EAAE,CAhCU;AAgCP,QAAI,EAAE,CAhCC;AAgCE,UAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,EAA0B,CAAC,WAAD,EAAc,EAAd,CAA1B,EAA6C,CAAC,iBAAD,EAAoB,EAApB,CAA7C,EAAsE,CAAC,iBAAD,EAAoB,EAApB,CAAtE,CAhCV;AAgC0G,YAAQ,EAAE,SAAS,iBAAT,CAA2B,EAA3B,EAA+B,GAA/B,EAAkC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACrN,sEAAuB,GAAvB;AACA,mEAAoB,CAApB;AACA,mEAAoB,CAApB,EAAuB,CAAvB;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAxCgD;AAwC9C,cAAU,EAAE,CAAC,eAAD,EAAkB,aAAlB,EAAiC,eAAjC,EAAkD,eAAlD,CAxCkC;AAwCkC,UAAM,EAAE,CAAC,+CAAD,CAxC1C;AAwC6F,iBAAa,EAAE;AAxC5G,GAAzB,CAA9B;;;AA+JA;;;AACA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,GAAjC,EAAoC;AAChC,SAAO,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,IAAN,CAAW,GAAX,CAAb,CAAP;AACH;;;MAkBK,a;AACF,4BACA;AACA;AACA;AACA,UAJA,EAIQ,QAJR,EAIgB;AAAA;;AACZ,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,QAAL,GAAgB,QAAhB;AACA;;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,QAAL,GAAgB,QAAQ,IAAI,EAA5B;AACH;AACD;;;;;WACA,eAAQ;AACJ,eAAO,KAAK,KAAZ;AACH,O;WACD,aAAS,IAAT,EAAa;AACT,aAAK,KAAL,GAAa,IAAb,CADS,CAET;AACA;;AACA,aAAK,kBAAL;AACH;;;aACD,oBAAQ;AACJ,aAAK,kBAAL;;AACA,YAAI,KAAK,UAAL,KAAoB,SAAxB,EAAmC;AAC/B,eAAK,UAAL,GAAkB,KAAK,wBAAL,EAAlB;AACH;;AACD,YAAI,CAAC,KAAK,YAAV,EAAwB;AACpB,eAAK,YAAL,GACI,KAAK,QAAL,CAAc,mBAAd,IAAsC,UAAC,IAAD,EAAO,IAAP;AAAA,mBAAgB,IAAI,CAAC,IAAD,CAApB;AAAA,WAD1C;AAEH;;AACD,YAAI,KAAK,MAAT,EAAiB;AACb;AACA;AACA;AACA,eAAK,SAAL,CAAe,IAAf,GAAsB,KAAK,IAA3B;AACA,eAAK,SAAL,CAAe,UAAf,GAA4B,KAAK,UAAjC;;AACA,eAAK,MAAL,CAAY,YAAZ,CAAyB,KAAK,SAA9B;AACH,SAPD,MAQK,IAAI,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAxC,EAAmD;AACpD,gBAAM,yCAAyC,EAA/C;AACH;AACJ;;;aACD,uBAAW;AACP,YAAI,KAAK,MAAT,EAAiB;AACb,eAAK,MAAL,CAAY,eAAZ,CAA4B,KAAK,SAAjC;AACH;AACJ;AACD;;;AAGG;;;;aACH,oCAAwB;AACpB,YAAM,IAAI,GAAG,KAAK,IAAlB;;AACA,YAAI,CAAC,IAAD,KAAU,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAA9C,CAAJ,EAA8D;AAC1D,gBAAM,kCAAkC,EAAxC;AACH;;AACD,YAAI,KAAK,QAAL,IAAiB,KAAK,QAAL,CAAc,0BAAnC,EAA+D;AAC3D,iBAAO,KAAK,QAAL,CAAc,0BAAd,CAAyC,IAAzC,CAAP;AACH;;AACD,eAAO,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,KAAwB,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B;AACH;AACD;;;;aACA,8BAAkB;AACd,YAAI,KAAK,SAAT,EAAoB;AAChB,eAAK,SAAL,CAAe,IAAf,GAAsB,KAAK,IAA3B;AACH;AACJ;;;;;;AAEL,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,QAAzB,EAAmC,CAAnC,CAAzB,EAAgE,gEAAyB,mBAAzB,EAA8C,CAA9C,CAAhE,CAAP;AAA2H,GAApL;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD,aAAS,EAAE,SAAS,mBAAT,CAA6B,EAA7B,EAAiC,GAAjC,EAAoC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC5K,kEAAmB,YAAnB,EAAiC,CAAjC;AACA,kEAAmB,UAAnB,EAA+B,CAA/B;AACA,kEAAmB,gBAAnB,EAAqC,CAArC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,SAAJ,GAAgB,EAAE,CAAC,KAAxE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,IAAJ,GAAW,EAAE,CAAC,KAAnE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,UAAJ,GAAiB,EAAE,CAAC,KAAzE;AACH;AAAE,KATqD;AASnD,UAAM,EAAE;AAAE,aAAO,EAAE,SAAX;AAAsB,UAAI,EAAE,MAA5B;AAAoC,gBAAU,EAAE,YAAhD;AAA8D,kBAAY,EAAE;AAA5E,KAT2C;AASmD,SAAK,EAAE,CAT1D;AAS6D,QAAI,EAAE,CATnE;AASsE,UAAM,EAAE,CAAC,CAAC,cAAD,EAAiB,EAAjB,CAAD,EAAuB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,YAA3B,EAAyC,CAAzC,EAA4C,kBAA5C,CAAvB,EAAwF,CAAC,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,YAApB,EAAkC,CAAlC,EAAqC,YAArC,CAAxF,EAA4I,CAAC,iBAAD,EAAoB,EAApB,CAA5I,EAAqK,CAAC,UAAD,EAAa,EAAb,CAArK,CAT9E;AASsQ,YAAQ,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3X,8EAA+B,CAA/B,EAAkC,CAAlC;AACA,iEAAkB,CAAlB,EAAqB,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;AACA,iEAAkB,CAAlB,EAAqB,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;AACA;AACH;AAAE,KAdqD;AAcnD,cAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,UAAjC,EAA6C,aAA7C,EAA4D,OAA5D,CAduC;AAc+B,iBAAa,EAAE;AAd9C,GAAzB,CAAnC;;;AA6EA;;;;;;AAMG;;;AACH,IAAM,qBAAqB,GAAG,CAC1B,QAD0B,EAE1B,SAF0B,EAG1B,UAH0B,EAI1B,aAJ0B,EAK1B,gBAL0B,EAM1B,gBAN0B,EAO1B,YAP0B,EAQ1B,OAR0B,EAS1B,MAT0B,EAU1B,aAV0B,EAW1B,aAX0B,EAY1B,YAZ0B,EAa1B,eAb0B,EAc1B,YAd0B,EAe1B,eAf0B,EAgB1B,aAhB0B,EAiB1B,eAjB0B,EAkB1B,eAlB0B,EAmB1B,aAnB0B,EAoB1B,YApB0B,EAqB1B,cArB0B,EAsB1B,eAtB0B,CAA9B;;;MAwBM,c;;;;AAEN,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAApC;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAAC,oEAAD,CAAD;AAAX,GAAxB,CAApC;;;AASA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,cAA1B,EAA0C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,EAAkC,aAAlC,EAAiD,gBAAjD,EAAmE,gBAAnE,EAAqF,YAArF,EAAmG,OAAnG,EAA4G,MAA5G,EAAoH,aAApH,EAAmI,aAAnI,EAAkJ,YAAlJ,EAAgK,eAAhK,EAAiL,YAAjL,EAA+L,eAA/L,EAAgN,aAAhN,EAA+N,eAA/N,EAAgP,eAAhP,EAAiQ,aAAjQ,EAAgR,YAAhR,EAA8R,cAA9R,EAA8S,eAA9S,CAAP;AAAwU,KAAtW;AAAwW,WAAO,EAAE;AAAc,aAAO,CAAC,oEAAD,CAAP;AAA2B,KAA1Z;AAA4Z,WAAO,EAAE;AAAc,aAAO,CAAC,QAAD,EAAW,SAAX,EAAsB,UAAtB,EAAkC,aAAlC,EAAiD,gBAAjD,EAAmE,gBAAnE,EAAqF,YAArF,EAAmG,OAAnG,EAA4G,MAA5G,EAAoH,aAApH,EAAmI,aAAnI,EAAkJ,YAAlJ,EAAgK,eAAhK,EAAiL,YAAjL,EAA+L,eAA/L,EAAgN,aAAhN,EAA+N,eAA/N,EAAgP,eAAhP,EAAiQ,aAAjQ,EAAgR,YAAhR,EAA8R,cAA9R,EAA8S,eAA9S,CAAP;AAAwU;AAA3vB,GAA1C,CAAnD;AAA81B,CAA72B;AAEA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC34EH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;AACA;AACA;AACA,IAAM,eAAe,gBAAG,sFAA+B,CAAC;AAAE,SAAO,EAAE;AAAX,CAAD,CAAvD;;;MAMM,e;AACF,6BAAY,SAAZ,EAAuB,OAAvB,EAA8B;AAAA;;AAC1B,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,kBAAL,GAA0B,IAAI,GAAJ,EAA1B;AACH;;;;aACD,iBAAQ,YAAR,EAAoB;AAAA;;AAChB,YAAI,CAAC,KAAK,SAAL,CAAe,SAApB,EAA+B;AAC3B,iBAAO,uCAAP;AACH;;AACD,YAAM,OAAO,GAAG,oEAAa,CAAC,YAAD,CAA7B;;AACA,YAAM,IAAI,GAAG,KAAK,kBAAL,CAAwB,GAAxB,CAA4B,OAA5B,CAAb;;AACA,YAAI,IAAJ,EAAU;AACN,iBAAO,IAAI,CAAC,OAAZ;AACH;;AACD,YAAM,MAAM,GAAG,IAAI,yCAAJ,EAAf;AACA,YAAM,QAAQ,GAAG,2BAAjB;;AACA,YAAM,QAAQ,GAAI,SAAZ,QAAY,CAAC,KAAD,EAAU;AACxB;AACA;AACA;AACA,cAAI,KAAK,CAAC,aAAN,KAAwB,+BAAxB,IACA,CAAC,OAAO,CAAC,SAAR,CAAkB,QAAlB,CAA2B,QAA3B,CADL,EAC2C;AACvC,mBAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,QAAtB;;AACA,iBAAI,CAAC,OAAL,CAAa,GAAb,CAAiB;AAAA,qBAAM,MAAM,CAAC,IAAP,CAAY;AAAE,sBAAM,EAAE,KAAK,CAAC,MAAhB;AAAwB,4BAAY,EAAE;AAAtC,eAAZ,CAAN;AAAA,aAAjB;AACH,WAJD,MAKK,IAAI,KAAK,CAAC,aAAN,KAAwB,6BAAxB,IACL,OAAO,CAAC,SAAR,CAAkB,QAAlB,CAA2B,QAA3B,CADC,EACqC;AACtC,mBAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,QAAzB;;AACA,iBAAI,CAAC,OAAL,CAAa,GAAb,CAAiB;AAAA,qBAAM,MAAM,CAAC,IAAP,CAAY;AAAE,sBAAM,EAAE,KAAK,CAAC,MAAhB;AAAwB,4BAAY,EAAE;AAAtC,eAAZ,CAAN;AAAA,aAAjB;AACH;AACJ,SAdD;;AAeA,aAAK,OAAL,CAAa,iBAAb,CAA+B,YAAK;AAChC,iBAAO,CAAC,gBAAR,CAAyB,gBAAzB,EAA2C,QAA3C,EAAqD,eAArD;AACA,iBAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,mCAAtB;AACH,SAHD;;AAIA,aAAK,kBAAL,CAAwB,GAAxB,CAA4B,OAA5B,EAAqC;AACjC,iBAAO,EAAE,MADwB;AAEjC,kBAAQ,EAAE,oBAAK;AACX,mBAAO,CAAC,mBAAR,CAA4B,gBAA5B,EAA8C,QAA9C,EAAwD,eAAxD;AACH;AAJgC,SAArC;;AAMA,eAAO,MAAP;AACH;;;aACD,wBAAe,YAAf,EAA2B;AACvB,YAAM,OAAO,GAAG,oEAAa,CAAC,YAAD,CAA7B;;AACA,YAAM,IAAI,GAAG,KAAK,kBAAL,CAAwB,GAAxB,CAA4B,OAA5B,CAAb;;AACA,YAAI,IAAJ,EAAU;AACN,cAAI,CAAC,QAAL;AACA,cAAI,CAAC,OAAL,CAAa,QAAb;AACA,iBAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,mCAAzB;AACA,iBAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,2BAAzB;;AACA,eAAK,kBAAL,CAAwB,MAAxB,CAA+B,OAA/B;AACH;AACJ;;;aACD,uBAAW;AAAA;;AACP,aAAK,kBAAL,CAAwB,OAAxB,CAAgC,UAAC,KAAD,EAAQ,OAAR;AAAA,iBAAoB,MAAI,CAAC,cAAL,CAAoB,OAApB,CAApB;AAAA,SAAhC;AACH;;;;;;AAEL,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,uDAAgB,2DAAhB,CAA3B,EAA6D,uDAAgB,iDAAhB,CAA7D,CAAP;AAAsG,GAAnK;;AACA,iBAAe,CAAC,KAAhB,GAAqB,aAAG,iEAAsB;AAAE,WAAO,EAAE,SAAS,uBAAT,GAAgC;AAAK,aAAO,IAAI,eAAJ,CAAoB,uDAAY,2DAAZ,CAApB,EAA8C,uDAAY,iDAAZ,CAA9C,CAAP;AAA+E,KAA/H;AAAiI,SAAK,EAAE,eAAxI;AAAyJ,cAAU,EAAE;AAArK,GAAtB,CAAxB;;;;;MAUM,W;AACF,yBAAY,WAAZ,EAAyB,gBAAzB,EAAyC;AAAA;;AACrC,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,gBAAL,GAAwB,gBAAxB;AACA;;AACA,WAAK,WAAL,GAAmB,IAAI,uDAAJ,EAAnB;AACH;;;;aACD,oBAAQ;AAAA;;AACJ,aAAK,gBAAL,CACK,OADL,CACa,KAAK,WADlB,EAEK,SAFL,CAEe,eAAK;AAAA,iBAAI,MAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,KAAtB,CAAJ;AAAA,SAFpB;AAGH;;;aACD,uBAAW;AACP,aAAK,gBAAL,CAAsB,cAAtB,CAAqC,KAAK,WAA1C;AACH;;;;;;AAEL,aAAW,CAAC,IAAZ,GAAmB,SAAS,mBAAT,CAA6B,CAA7B,EAA8B;AAAI,WAAO,KAAK,CAAC,IAAI,WAAV,EAAuB,gEAAyB,qDAAzB,CAAvB,EAAoE,gEAAyB,eAAzB,CAApE,CAAP;AAAwH,GAA7K;;AACA,aAAW,CAAC,IAAZ;AAAmB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,WAAR;AAAqB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2D,WAAO,EAAE;AAAE,iBAAW,EAAE;AAAf;AAApE,GAAzB,CAAjC;;;;;MAyBM,mB;AACF,iCAAY,WAAZ,EAAyB,SAAzB,EAAoC,OAApC;AACA;AACA,YAFA,EAEQ;AAAA;;AACJ,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,UAAL,GAAkB,IAAI,yCAAJ,EAAlB;AACA,WAAK,QAAL,GAAgB,IAAhB;AACA;;;;AAIG;;AACH,WAAK,gBAAL,GAAwB,CAAC,CAAzB;AACA,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,SAAL,GAAiB,QAAjB;AACA,WAAK,gBAAL,GAAwB,KAAK,WAAL,CAAiB,aAAzC;AACA,WAAK,eAAL,GAAuB,SAAS,CAAC,OAAV,GACnB,yCADmB,GAEnB,iCAFJ;AAGH;AACD;;;;;WACA,eAAW;AAAK,eAAO,KAAK,QAAZ;AAAuB,O;WACvC,aAAY,KAAZ,EAAiB;AACb,aAAK,QAAL,GAAgB,2EAAoB,CAAC,KAAD,CAApC;;AACA,aAAK,aAAL;AACH;AACD;;;;WACA,eAAW;AAAK,eAAO,KAAK,QAAZ;AAAuB,O;WACvC,aAAY,KAAZ,EAAiB;AACb,aAAK,QAAL,GAAgB,2EAAoB,CAAC,KAAD,CAApC;;AACA,aAAK,aAAL;AACH;AACD;;;;WACA,eAAW;AAAK,eAAO,KAAK,QAAZ;AAAuB,O;WACvC,aAAY,KAAZ,EAAiB;AACb,aAAK,GAAG,4EAAqB,CAAC,KAAD,CAA7B,CADa,CAEb;AACA;;AACA,YAAI,KAAK,QAAL,KAAkB,KAAtB,EAA6B;AACzB,WAAC,KAAK,QAAL,GAAgB,KAAjB,IAA0B,KAAK,kBAAL,CAAwB,IAAxB,CAA1B,GAA0D,KAAK,KAAL,EAA1D;AACH;AACJ;;;WACD,eAAe;AAAK,eAAO,KAAK,gBAAL,CAAsB,WAA7B;AAA2C,O;WAC/D,aAAgB,KAAhB,EAAqB;AACjB,aAAK,wBAAL,GAAgC,SAAhC;AACA,aAAK,gBAAL,CAAsB,WAAtB,GAAoC,KAApC;;AACA,aAAK,+BAAL;AACH;AACD;;;;aACA,yBAAa;AACT,YAAM,SAAS,GAAG,KAAK,OAAL,IAAgB,KAAK,iBAArB,aACX,KAAK,OAAL,GAAe,KAAK,iBADT,UACiC,IADnD;;AAEA,YAAI,SAAJ,EAAe;AACX,eAAK,gBAAL,CAAsB,KAAtB,CAA4B,SAA5B,GAAwC,SAAxC;AACH;AACJ;AACD;;;;aACA,yBAAa;AACT,YAAM,SAAS,GAAG,KAAK,OAAL,IAAgB,KAAK,iBAArB,aACX,KAAK,OAAL,GAAe,KAAK,iBADT,UACiC,IADnD;;AAEA,YAAI,SAAJ,EAAe;AACX,eAAK,gBAAL,CAAsB,KAAtB,CAA4B,SAA5B,GAAwC,SAAxC;AACH;AACJ;;;aACD,2BAAe;AAAA;;AACX,YAAI,KAAK,SAAL,CAAe,SAAnB,EAA8B;AAC1B;AACA,eAAK,cAAL,GAAsB,KAAK,gBAAL,CAAsB,KAAtB,CAA4B,MAAlD;AACA,eAAK,kBAAL;;AACA,eAAK,OAAL,CAAa,iBAAb,CAA+B,YAAK;AAChC,gBAAM,MAAM,GAAG,MAAI,CAAC,UAAL,EAAf;;AACA,2DAAS,CAAC,MAAD,EAAS,QAAT,CAAT,CACK,IADL,CACU,yDAAS,CAAC,EAAD,CADnB,EACyB,yDAAS,CAAC,MAAI,CAAC,UAAN,CADlC,EAEK,SAFL,CAEe;AAAA,qBAAM,MAAI,CAAC,kBAAL,CAAwB,IAAxB,CAAN;AAAA,aAFf;AAGH,WALD;;AAMA,eAAK,aAAL,GAAqB,IAArB;AACA,eAAK,kBAAL,CAAwB,IAAxB;AACH;AACJ;;;aACD,uBAAW;AACP,aAAK,UAAL,CAAgB,IAAhB;;AACA,aAAK,UAAL,CAAgB,QAAhB;AACH;AACD;;;;;;AAMG;;;;aACH,oCAAwB;AACpB,YAAI,KAAK,iBAAT,EAA4B;AACxB;AACH,SAHmB,CAIpB;;;AACA,YAAI,aAAa,GAAG,KAAK,gBAAL,CAAsB,SAAtB,CAAgC,KAAhC,CAApB;;AACA,qBAAa,CAAC,IAAd,GAAqB,CAArB,CANoB,CAOpB;AACA;AACA;;AACA,qBAAa,CAAC,KAAd,CAAoB,QAApB,GAA+B,UAA/B;AACA,qBAAa,CAAC,KAAd,CAAoB,UAApB,GAAiC,QAAjC;AACA,qBAAa,CAAC,KAAd,CAAoB,MAApB,GAA6B,MAA7B;AACA,qBAAa,CAAC,KAAd,CAAoB,OAApB,GAA8B,GAA9B;AACA,qBAAa,CAAC,KAAd,CAAoB,MAApB,GAA6B,EAA7B;AACA,qBAAa,CAAC,KAAd,CAAoB,SAApB,GAAgC,EAAhC;AACA,qBAAa,CAAC,KAAd,CAAoB,SAApB,GAAgC,EAAhC,CAhBoB,CAiBpB;AACA;AACA;AACA;AACA;;AACA,qBAAa,CAAC,KAAd,CAAoB,QAApB,GAA+B,QAA/B;;AACA,aAAK,gBAAL,CAAsB,UAAtB,CAAiC,WAAjC,CAA6C,aAA7C;;AACA,aAAK,iBAAL,GAAyB,aAAa,CAAC,YAAvC;;AACA,aAAK,gBAAL,CAAsB,UAAtB,CAAiC,WAAjC,CAA6C,aAA7C,EAzBoB,CA0BpB;;;AACA,aAAK,aAAL;;AACA,aAAK,aAAL;AACH;;;aACD,gCAAoB;AAChB;AACA;AACA,aAAK,gBAAL,CAAsB,SAAtB,CAAgC,GAAhC,CAAoC,KAAK,eAAzC,EAHgB,CAIhB;AACA;;;AACA,YAAM,YAAY,GAAG,KAAK,gBAAL,CAAsB,YAAtB,GAAqC,CAA1D;;AACA,aAAK,gBAAL,CAAsB,SAAtB,CAAgC,MAAhC,CAAuC,KAAK,eAA5C;;AACA,eAAO,YAAP;AACH;;;aACD,2CAA+B;AAC3B,YAAI,CAAC,KAAK,aAAN,IAAuB,KAAK,wBAAL,IAAiC,SAA5D,EAAuE;AACnE;AACH;;AACD,YAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,eAAK,wBAAL,GAAgC,CAAhC;AACA;AACH;;AACD,YAAM,KAAK,GAAG,KAAK,gBAAL,CAAsB,KAApC;AACA,aAAK,gBAAL,CAAsB,KAAtB,GAA8B,KAAK,gBAAL,CAAsB,WAApD;AACA,aAAK,wBAAL,GAAgC,KAAK,oBAAL,EAAhC;AACA,aAAK,gBAAL,CAAsB,KAAtB,GAA8B,KAA9B;AACH;;;aACD,qBAAS;AACL,YAAI,KAAK,SAAL,CAAe,SAAnB,EAA8B;AAC1B,eAAK,kBAAL;AACH;AACJ;AACD;;;;AAIG;;;;aACH,8BAAgC;AAAA;;AAAA,YAAb,KAAa,uEAAL,KAAK;;AAC5B;AACA,YAAI,CAAC,KAAK,QAAV,EAAoB;AAChB;AACH;;AACD,aAAK,wBAAL;;AACA,aAAK,+BAAL,GAN4B,CAO5B;AACA;;;AACA,YAAI,CAAC,KAAK,iBAAV,EAA6B;AACzB;AACH;;AACD,YAAM,QAAQ,GAAG,KAAK,WAAL,CAAiB,aAAlC;AACA,YAAM,KAAK,GAAG,QAAQ,CAAC,KAAvB,CAb4B,CAc5B;;AACA,YAAI,CAAC,KAAD,IAAU,KAAK,QAAL,KAAkB,KAAK,gBAAjC,IAAqD,KAAK,KAAK,KAAK,cAAxE,EAAwF;AACpF;AACH;;AACD,YAAM,YAAY,GAAG,KAAK,oBAAL,EAArB;;AACA,YAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,YAAT,EAAuB,KAAK,wBAAL,IAAiC,CAAxD,CAAf,CAnB4B,CAoB5B;;AACA,gBAAQ,CAAC,KAAT,CAAe,MAAf,aAA2B,MAA3B;;AACA,aAAK,OAAL,CAAa,iBAAb,CAA+B,YAAK;AAChC,cAAI,OAAO,qBAAP,KAAiC,WAArC,EAAkD;AAC9C,iCAAqB,CAAC;AAAA,qBAAM,MAAI,CAAC,sBAAL,CAA4B,QAA5B,CAAN;AAAA,aAAD,CAArB;AACH,WAFD,MAGK;AACD,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAAC,sBAAL,CAA4B,QAA5B,CAAN;AAAA,aAAD,CAAV;AACH;AACJ,SAPD;;AAQA,aAAK,cAAL,GAAsB,KAAtB;AACA,aAAK,gBAAL,GAAwB,KAAK,QAA7B;AACH;AACD;;AAEG;;;;aACH,iBAAK;AACD;AACA;AACA,YAAI,KAAK,cAAL,KAAwB,SAA5B,EAAuC;AACnC,eAAK,gBAAL,CAAsB,KAAtB,CAA4B,MAA5B,GAAqC,KAAK,cAA1C;AACH;AACJ,O,CACD;AACA;AACA;AACA;;;;aACA,6BAAiB,CACb;AACH;AACD;;;;aACA,wBAAY;AACR,eAAO,KAAK,SAAL,IAAkB,QAAzB;AACH;AACD;;;;aACA,sBAAU;AACN,YAAM,GAAG,GAAG,KAAK,YAAL,EAAZ;;AACA,eAAO,GAAG,CAAC,WAAJ,IAAmB,MAA1B;AACH;AACD;;;;AAIG;;;;aACH,gCAAuB,QAAvB,EAA+B;AAC3B,YAAQ,cAAR,GAAyC,QAAzC,CAAQ,cAAR;AAAA,YAAwB,YAAxB,GAAyC,QAAzC,CAAwB,YAAxB;;AACA,YAAM,QAAQ,GAAG,KAAK,YAAL,EAAjB,CAF2B,CAG3B;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAI,CAAC,KAAK,UAAL,CAAgB,SAAjB,IAA8B,QAAQ,CAAC,aAAT,KAA2B,QAA7D,EAAuE;AACnE,kBAAQ,CAAC,iBAAT,CAA2B,cAA3B,EAA2C,YAA3C;AACH;AACJ;;;;;;AAEL,qBAAmB,CAAC,IAApB,GAA2B,SAAS,2BAAT,CAAqC,CAArC,EAAsC;AAAI,WAAO,KAAK,CAAC,IAAI,mBAAV,EAA+B,gEAAyB,qDAAzB,CAA/B,EAA4E,gEAAyB,2DAAzB,CAA5E,EAAuH,gEAAyB,iDAAzB,CAAvH,EAAgK,gEAAyB,sDAAzB,EAAmC,CAAnC,CAAhK,CAAP;AAAgN,GAArR;;AACA,qBAAmB,CAAC,IAApB;AAA2B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,mBAAR;AAA6B,aAAS,EAAE,CAAC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAD,CAAxC;AAAmF,aAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,CAA9F;AAAyI,gBAAY,EAAE,SAAS,gCAAT,CAA0C,EAA1C,EAA8C,GAA9C,EAAiD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAClR,iEAAkB,OAAlB,EAA2B,SAAS,4CAAT,GAAqD;AAAK,iBAAO,GAAG,CAAC,iBAAJ,EAAP;AAAiC,SAAtH;AACH;AAAE,KAF2D;AAEzD,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAX;AAA8C,aAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAvD;AAA0F,aAAO,EAAE,CAAC,qBAAD,EAAwB,SAAxB,CAAnG;AAAuI,iBAAW,EAAE;AAApJ,KAFiD;AAEoH,YAAQ,EAAE,CAAC,qBAAD;AAF9H,GAAzB,CAAzC;;;;;MA6DM,e;;;;AAEN,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,GAAP;AAAsC,GAAnG;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAArC;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAAC,iEAAD,CAAD;AAAX,GAAxB,CAArC;;;AASA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,eAA1B,EAA2C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,WAAD,EAAc,mBAAd,CAAP;AAA4C,KAA1E;AAA4E,WAAO,EAAE;AAAc,aAAO,CAAC,iEAAD,CAAP;AAA0B,KAA7H;AAA+H,WAAO,EAAE;AAAc,aAAO,CAAC,WAAD,EAAc,mBAAd,CAAP;AAA4C;AAAlM,GAA3C,CAAnD;AAAsS,CAArT;AAEA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzcH;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;AACA;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,YAAD,EAAe,EAAf,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,IAAM,GAAG,GAAG,8iNAAZ;AACA,IAAM,0BAA0B,GAAG,QAAnC;AACA;;;AAGG;;AACH,IAAM,sBAAsB,GAAG,CAC3B,YAD2B,EAE3B,iBAF2B,EAG3B,iBAH2B,EAI3B,mBAJ2B,EAK3B,oBAL2B,EAM3B,cAN2B,EAO3B,SAP2B,CAA/B,C,CASA;;AACA,IAAM,cAAc,gBAAG,kEAAU,eAAC,qEAAa,eAAC,0EAAkB;AAC9D,kBAAY,WAAZ,EAAuB;AAAA;;AACnB,SAAK,WAAL,GAAmB,WAAnB;AACH;;AAH6D;AAAA,IAAnB,CAAd,CAAjC;;;MAQM,S;;;;;AACF,uBAAY,UAAZ,EAAwB,aAAxB,EAAuC,cAAvC,EAAqD;AAAA;;AAAA;;AACjD,gCAAM,UAAN;AACA,YAAK,aAAL,GAAqB,aAArB;AACA,YAAK,cAAL,GAAsB,cAAtB;AACA;;AACA,YAAK,aAAL,GAAqB,MAAK,kBAAL,CAAwB,SAAxB,EAAmC,cAAnC,CAArB;AACA;;AACA,YAAK,YAAL,GAAoB,MAAK,kBAAL,CAAwB,iBAAxB,CAApB,CAPiD,CAQjD;AACA;;AATiD,gOAU9B,sBAV8B;AAAA;;AAAA;AAUjD,4DAA2C;AAAA,cAAhC,IAAgC;;AACvC,cAAI,MAAK,kBAAL,CAAwB,IAAxB,CAAJ,EAAmC;AAC/B,kBAAK,eAAL,GAAuB,SAAvB,CAAiC,GAAjC,CAAqC,IAArC;AACH;AACJ,SAdgD,CAejD;AACA;AACA;;AAjBiD;AAAA;AAAA;AAAA;AAAA;;AAkBjD,gBAAU,CAAC,aAAX,CAAyB,SAAzB,CAAmC,GAAnC,CAAuC,iBAAvC;;AACA,UAAI,MAAK,aAAT,EAAwB;AACpB,cAAK,KAAL,GAAa,0BAAb;AACH;;AArBgD;AAsBpD;;;;aACD,2BAAe;AACX,aAAK,aAAL,CAAmB,OAAnB,CAA2B,KAAK,WAAhC,EAA6C,IAA7C;AACH;;;aACD,uBAAW;AACP,aAAK,aAAL,CAAmB,cAAnB,CAAkC,KAAK,WAAvC;AACH;AACD;;;;aACA,eAAM,MAAN,EAAc,OAAd,EAAqB;AACjB,YAAI,MAAJ,EAAY;AACR,eAAK,aAAL,CAAmB,QAAnB,CAA4B,KAAK,eAAL,EAA5B,EAAoD,MAApD,EAA4D,OAA5D;AACH,SAFD,MAGK;AACD,eAAK,eAAL,GAAuB,KAAvB,CAA6B,OAA7B;AACH;AACJ;;;aACD,2BAAe;AACX,eAAO,KAAK,WAAL,CAAiB,aAAxB;AACH;;;aACD,6BAAiB;AACb,eAAO,KAAK,aAAL,IAAsB,KAAK,QAAlC;AACH;AACD;;;;aACA,8BAAgC;AAAA;;AAAA,0CAAV,UAAU;AAAV,oBAAU;AAAA;;AAC5B,eAAO,UAAU,CAAC,IAAX,CAAgB,mBAAS;AAAA,iBAAI,MAAI,CAAC,eAAL,GAAuB,YAAvB,CAAoC,SAApC,CAAJ;AAAA,SAAzB,CAAP;AACH;;;;IAhDmB,c;;AAkDxB,WAAS,CAAC,IAAV,GAAiB,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,WAAO,KAAK,CAAC,IAAI,SAAV,EAAqB,gEAAyB,qDAAzB,CAArB,EAAkE,gEAAyB,2DAAzB,CAAlE,EAAiH,gEAAyB,uFAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,GAA/N;;AACA,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,SAAR;AAAmB,aAAS,EAAE,CAAC,CAAC,QAAD,EAAW,YAAX,EAAyB,EAAzB,CAAD,EAA+B,CAAC,QAAD,EAAW,mBAAX,EAAgC,EAAhC,CAA/B,EAAoE,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAApE,EAAuG,CAAC,QAAD,EAAW,SAAX,EAAsB,EAAtB,CAAvG,EAAkI,CAAC,QAAD,EAAW,cAAX,EAA2B,EAA3B,CAAlI,EAAkK,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAlK,EAAwM,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAAxM,CAA9B;AAA0Q,aAAS,EAAE,SAAS,eAAT,CAAyB,EAAzB,EAA6B,GAA7B,EAAgC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACrX,kEAAmB,6DAAnB,EAA8B,CAA9B;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,MAAJ,GAAa,EAAE,CAAC,KAArE;AACH;AAAE,KALiD;AAK/C,aAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CALoC;AAKR,YAAQ,EAAE,CALF;AAKK,gBAAY,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC1H,kEAAmB,UAAnB,EAA+B,GAAG,CAAC,QAAJ,IAAgB,IAA/C;AACA,kEAAmB,yBAAnB,EAA8C,GAAG,CAAC,cAAJ,KAAuB,gBAArE,EAAuF,qBAAvF,EAA8G,GAAG,CAAC,QAAlH;AACH;AAAE,KARiD;AAQ/C,UAAM,EAAE;AAAE,cAAQ,EAAE,UAAZ;AAAwB,mBAAa,EAAE,eAAvC;AAAwD,WAAK,EAAE;AAA/D,KARuC;AAQmC,YAAQ,EAAE,CAAC,WAAD,CAR7C;AAQ4D,YAAQ,EAAE,CAAC,wEAAD,CARtE;AAQ2G,SAAK,EAAE,GARlH;AAQuH,sBAAkB,EAAE,GAR3I;AAQgJ,SAAK,EAAE,CARvJ;AAQ0J,QAAI,EAAE,CARhK;AAQmK,UAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CAR3K;AAQqV,YAAQ,EAAE,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,GAAhC,EAAmC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAClc;AACA,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;AACA,mEAAoB,CAApB;AACA;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,gEAAiB,CAAjB;AACA,kEAAmB,yBAAnB,EAA8C,GAAG,CAAC,aAAJ,IAAqB,GAAG,CAAC,YAAvE;AACA,iEAAkB,mBAAlB,EAAuC,GAAG,CAAC,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqF,GAAG,CAAC,YAAzF,EAAuG,kBAAvG,EAA2H,GAAG,CAAC,eAAJ,EAA3H;AACH;AAAE,KAnBiD;AAmB/C,cAAU,EAAE,CAAC,6DAAD,CAnBmC;AAmBf,UAAM,EAAE,CAAC,GAAD,CAnBO;AAmBA,iBAAa,EAAE,CAnBf;AAmBkB,mBAAe,EAAE;AAnBnC,GAAzB,CAA/B;;;;;MA8DM,S;;;;;AACF,uBAAY,YAAZ,EAA0B,UAA1B,EAAsC,aAAtC,EAAmD;AAAA;;AAAA,gCACzC,UADyC,EAC7B,YAD6B,EACf,aADe;AAElD;;;;aACD,6BAAoB,KAApB,EAAyB;AACrB;AACA,YAAI,KAAK,QAAT,EAAmB;AACf,eAAK,CAAC,cAAN;AACA,eAAK,CAAC,wBAAN;AACH;AACJ;;;;IAVmB,S;;AAYxB,WAAS,CAAC,IAAV,GAAiB,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,WAAO,KAAK,CAAC,IAAI,SAAV,EAAqB,gEAAyB,2DAAzB,CAArB,EAAoE,gEAAyB,qDAAzB,CAApE,EAAiH,gEAAyB,uFAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,GAA/N;;AACA,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,SAAR;AAAmB,aAAS,EAAE,CAAC,CAAC,GAAD,EAAM,YAAN,EAAoB,EAApB,CAAD,EAA0B,CAAC,GAAD,EAAM,mBAAN,EAA2B,EAA3B,CAA1B,EAA0D,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1D,EAAwF,CAAC,GAAD,EAAM,SAAN,EAAiB,EAAjB,CAAxF,EAA8G,CAAC,GAAD,EAAM,cAAN,EAAsB,EAAtB,CAA9G,EAAyI,CAAC,GAAD,EAAM,oBAAN,EAA4B,EAA5B,CAAzI,EAA0K,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1K,CAA9B;AAAuO,aAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAAlP;AAA8Q,YAAQ,EAAE,CAAxR;AAA2R,gBAAY,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAChZ,iEAAkB,OAAlB,EAA2B,SAAS,kCAAT,CAA4C,MAA5C,EAAkD;AAAI,iBAAO,GAAG,CAAC,mBAAJ,CAAwB,MAAxB,CAAP;AAAyC,SAA1H;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,kEAAmB,UAAnB,EAA+B,GAAG,CAAC,QAAJ,GAAe,CAAC,CAAhB,GAAoB,GAAG,CAAC,QAAJ,IAAgB,CAAnE,EAAsE,UAAtE,EAAkF,GAAG,CAAC,QAAJ,IAAgB,IAAlG,EAAwG,eAAxG,EAAyH,GAAG,CAAC,QAAJ,CAAa,QAAb,EAAzH;AACA,kEAAmB,yBAAnB,EAA8C,GAAG,CAAC,cAAJ,KAAuB,gBAArE,EAAuF,qBAAvF,EAA8G,GAAG,CAAC,QAAlH;AACH;AAAE,KALiD;AAK/C,UAAM,EAAE;AAAE,cAAQ,EAAE,UAAZ;AAAwB,mBAAa,EAAE,eAAvC;AAAwD,WAAK,EAAE,OAA/D;AAAwE,cAAQ,EAAE;AAAlF,KALuC;AAKyD,YAAQ,EAAE,CAAC,WAAD,EAAc,WAAd,CALnE;AAK+F,YAAQ,EAAE,CAAC,wEAAD,CALzG;AAK8I,SAAK,EAAE,GALrJ;AAK0J,sBAAkB,EAAE,GAL9K;AAKmL,SAAK,EAAE,CAL1L;AAK6L,QAAI,EAAE,CALnM;AAKsM,UAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CAL9M;AAKwX,YAAQ,EAAE,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,GAAhC,EAAmC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACre;AACA,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;AACA,mEAAoB,CAApB;AACA;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,gEAAiB,CAAjB;AACA,kEAAmB,yBAAnB,EAA8C,GAAG,CAAC,aAAJ,IAAqB,GAAG,CAAC,YAAvE;AACA,iEAAkB,mBAAlB,EAAuC,GAAG,CAAC,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqF,GAAG,CAAC,YAAzF,EAAuG,kBAAvG,EAA2H,GAAG,CAAC,eAAJ,EAA3H;AACH;AAAE,KAhBiD;AAgB/C,cAAU,EAAE,CAAC,6DAAD,CAhBmC;AAgBf,UAAM,EAAE,CAAC,GAAD,CAhBO;AAgBA,iBAAa,EAAE,CAhBf;AAgBkB,mBAAe,EAAE;AAhBnC,GAAzB,CAA/B;;;;;MAiEM,e;;;;AAEN,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,GAAP;AAAsC,GAAnG;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAArC;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAC7D,mEAD6D,EAE7D,mEAF6D,CAAD,EAG7D,mEAH6D;AAAX,GAAxB,CAArC;;;AAsBA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,eAA1B,EAA2C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,SAAD,EAAY,SAAZ,CAAP;AAAgC,KAA9D;AAAgE,WAAO,EAAE;AAAc,aAAO,CAAC,mEAAD,EACnM,mEADmM,CAAP;AACzK,KADkF;AAChF,WAAO,EAAE;AAAc,aAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,mEAAvB,CAAP;AAAiD;AADQ,GAA3C,CAAnD;AAC4F,CAD3G;AAGA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjRH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;AAEG;;AACH;AACA;AACA;AACA;AACA;;AAEA,SAAS,yCAAT,CAAmD,EAAnD,EAAuD,GAAvD,EAA0D,CAAK;;IACzD,e,GACF;AAAA;;AACI;AACA,OAAK,IAAL,GAAY,QAAZ;AACA;;AACA,OAAK,UAAL,GAAkB,EAAlB;AACA;;AACA,OAAK,WAAL,GAAmB,IAAnB;AACA;;AACA,OAAK,aAAL,GAAqB,EAArB;AACA;;AACA,OAAK,YAAL,GAAoB,KAApB;AACA;;AACA,OAAK,KAAL,GAAa,EAAb;AACA;;AACA,OAAK,MAAL,GAAc,EAAd;AACA;;AACA,OAAK,QAAL,GAAgB,MAAhB;AACA;;AACA,OAAK,IAAL,GAAY,IAAZ;AACA;;AACA,OAAK,eAAL,GAAuB,IAAvB;AACA;;AACA,OAAK,cAAL,GAAsB,IAAtB;AACA;;AACA,OAAK,SAAL,GAAiB,IAAjB;AACA;;AACA,OAAK,SAAL,GAAiB,IAAjB;AACA;;;AAGG;;AACH,OAAK,YAAL,GAAoB,IAApB;AACA;;;;AAIG;;AACH,OAAK,iBAAL,GAAyB,IAAzB,CArCJ,CAsCI;AACH,C;AAGL;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,mBAAmB,GAAG;AACxB;AACA,iBAAe,eAAE,4DAAO,CAAC,iBAAD,EAAoB,CACxC;AACA;AACA;;;AACA,4DAAK,CAAC,YAAD,EAAa,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE,CAAX;AAAc,aAAS,EAAE;AAAzB,GAAD,CAApB,CAJmC,E,aAKxC,0DAAK,CAAC,OAAD,EAAQ,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAf,CALmC,E,aAMxC,+DAAU,CAAC,YAAD,EAAa,aAAE,4DAAO,CAAC,kCAAD,EAAmC,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE,MAAb;AAAqB,WAAO,EAAE;AAA9B,GAAD,CAA1C,CAAtB,CAN8B,E,aAOxC,+DAAU,CAAC,sBAAD,EAAuB,aAAE,4DAAO,CAAC,qCAAD,EAAsC,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE;AAAX,GAAD,CAA7C,CAAhC,CAP8B,CAApB;AAFA,CAA5B;AAaA;;;;;;AAMG;;AACH;;;;AAIG;;AACH,SAAS,yCAAT,GAAkD;AAC9C,QAAM,KAAK,CAAC,uEAAD,CAAX;AACH;;;MAKK,uB;;;;;AACF,qCAAY,WAAZ,EAAyB,iBAAzB,EAA4C,kBAA5C,EAAgE,SAAhE;AACA;AACA,WAFA,EAES,aAFT,EAEsB;AAAA;;AAAA;;AAClB;AACA,YAAK,WAAL,GAAmB,WAAnB;AACA,YAAK,iBAAL,GAAyB,iBAAzB;AACA,YAAK,kBAAL,GAA0B,kBAA1B;AACA,YAAK,OAAL,GAAe,OAAf;AACA,YAAK,aAAL,GAAqB,aAArB;AACA;;AACA,YAAK,sBAAL,GAA8B,IAAI,uDAAJ,EAA9B;AACA;;AACA,YAAK,oCAAL,GAA4C,IAA5C;AACA;;;;AAIG;;AACH,YAAK,qBAAL,GAA6B,IAA7B;AACA;;;;;AAKG;;AACH,YAAK,eAAL,GAAuB,UAAC,MAAD,EAAW;AAC9B,YAAI,MAAK,aAAL,CAAmB,WAAnB,OAAqC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAzE,CAAJ,EAAyF;AACrF,mDAAyC;AAC5C;;AACD,eAAO,MAAK,aAAL,CAAmB,eAAnB,CAAmC,MAAnC,CAAP;AACH,OALD;;AAMA,YAAK,eAAL,GAAuB,OAAO,CAAC,cAAR,IAA0B,IAAjD;AACA,YAAK,SAAL,GAAiB,SAAjB;AA9BkB;AA+BrB;AACD;;;;;aACA,0CAA8B;AAC1B,aAAK,eAAL,GAD0B,CAE1B;AACA;;;AACA,aAAK,gCAAL,GAJ0B,CAK1B;AACA;;;AACA,aAAK,qBAAL;AACH;AACD;;;AAGG;;;;aACH,+BAAsB,MAAtB,EAA4B;AACxB,YAAI,KAAK,aAAL,CAAmB,WAAnB,OAAqC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAzE,CAAJ,EAAyF;AACrF,mDAAyC;AAC5C;;AACD,eAAO,KAAK,aAAL,CAAmB,qBAAnB,CAAyC,MAAzC,CAAP;AACH;AACD;;;AAGG;;;;aACH,8BAAqB,MAArB,EAA2B;AACvB,YAAI,KAAK,aAAL,CAAmB,WAAnB,OAAqC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAzE,CAAJ,EAAyF;AACrF,mDAAyC;AAC5C;;AACD,eAAO,KAAK,aAAL,CAAmB,oBAAnB,CAAwC,MAAxC,CAAP;AACH;AACD;;;;aACA,2BAAe;AACX,YAAI,CAAC,KAAK,cAAL,EAAL,EAA4B;AACxB,cAAM,cAAc,GAAG,CAAC,KAAK,OAAL,CAAa,SAAd,IAA2B,CAAC,KAAK,UAAL,CAAgB,mBAAhB,EAAnD;;AACA,cAAI,cAAJ,EAAoB;AAChB,iBAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B;AACH;AACJ;AACJ;AACD;;;;aACA,sBAAU;AACN;AACA;AACA;AACA,YAAI,KAAK,OAAL,CAAa,SAAjB,EAA4B;AACxB,eAAK,UAAL,CAAgB,4BAAhB;AACH,SAFD,MAGK,IAAI,CAAC,KAAK,cAAL,EAAL,EAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B;AACH;AACJ;AACD;;;;aACA,yBAAa;AACT,YAAM,eAAe,GAAG,KAAK,oCAA7B,CADS,CAET;;AACA,YAAI,KAAK,OAAL,CAAa,YAAb,IAA6B,eAA7B,IACA,OAAO,eAAe,CAAC,KAAvB,KAAiC,UADrC,EACiD;AAC7C,cAAM,aAAa,GAAG,wFAAiC,EAAvD;;AACA,cAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,aAAjC,CAF6C,CAG7C;AACA;AACA;AACA;;AACA,cAAI,CAAC,aAAD,IAAkB,aAAa,KAAK,KAAK,SAAL,CAAe,IAAnD,IAA2D,aAAa,KAAK,OAA7E,IACA,OAAO,CAAC,QAAR,CAAiB,aAAjB,CADJ,EACqC;AACjC,gBAAI,KAAK,aAAT,EAAwB;AACpB,mBAAK,aAAL,CAAmB,QAAnB,CAA4B,eAA5B,EAA6C,KAAK,qBAAlD;;AACA,mBAAK,qBAAL,GAA6B,IAA7B;AACH,aAHD,MAIK;AACD,6BAAe,CAAC,KAAhB;AACH;AACJ;AACJ;;AACD,YAAI,KAAK,UAAT,EAAqB;AACjB,eAAK,UAAL,CAAgB,OAAhB;AACH;AACJ;AACD;;;;aACA,2BAAe;AACX,aAAK,UAAL,GAAkB,KAAK,iBAAL,CAAuB,MAAvB,CAA8B,KAAK,WAAL,CAAiB,aAA/C,CAAlB;AACH;AACD;;;;aACA,4CAAgC;AAC5B,YAAI,KAAK,SAAT,EAAoB;AAChB,eAAK,oCAAL,GAA4C,wFAAiC,EAA7E;AACH;AACJ;AACD;;;;aACA,iCAAqB;AACjB;AACA,YAAI,KAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAnC,EAA0C;AACtC,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B;AACH;AACJ;AACD;;;;aACA,0BAAc;AACV,YAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,aAAjC;;AACA,YAAM,aAAa,GAAG,wFAAiC,EAAvD;;AACA,eAAO,OAAO,KAAK,aAAZ,IAA6B,OAAO,CAAC,QAAR,CAAiB,aAAjB,CAApC;AACH;;;;IA5IiC,iE;;AA8ItC,yBAAuB,CAAC,IAAxB,GAA+B,SAAS,+BAAT,CAAyC,CAAzC,EAA0C;AAAI,WAAO,KAAK,CAAC,IAAI,uBAAV,EAAmC,gEAAyB,qDAAzB,CAAnC,EAAgF,gEAAyB,+DAAzB,CAAhF,EAAmI,gEAAyB,4DAAzB,CAAnI,EAAuL,gEAAyB,qDAAzB,EAAmC,CAAnC,CAAvL,EAA8N,gEAAyB,eAAzB,CAA9N,EAAyQ,gEAAyB,2DAAzB,CAAzQ,CAAP;AAAiU,GAA9Y;;AACA,yBAAuB,CAAC,IAAxB;AAA+B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,uBAAR;AAAiC,aAAS,EAAE,SAAS,6BAAT,CAAuC,EAAvC,EAA2C,GAA3C,EAA8C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACxK,kEAAmB,gEAAnB,EAAoC,CAApC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,aAAJ,GAAoB,EAAE,CAAC,KAA5E;AACH;AAAE,KAL+D;AAK7D,YAAQ,EAAE,CAAC,wEAAD;AALmD,GAAzB,CAA7C;;;;;MAiCM,kB;;;;;AACF;AAAA;;AAAA;;AACI,mCAAS,SAAT;AACA;;AACA,aAAK,MAAL,GAAc,OAAd;AAHJ;AAIC;AACD;;;;;aACA,gCAAuC;AAAA,YAApB,OAAoB,QAApB,OAAoB;AAAA,YAAX,SAAW,QAAX,SAAW;;AACnC,YAAI,OAAO,KAAK,OAAhB,EAAyB;AACrB,eAAK,UAAL;;AACA,eAAK,sBAAL,CAA4B,IAA5B,CAAiC;AAAE,iBAAK,EAAE,QAAT;AAAmB,qBAAS,EAAT;AAAnB,WAAjC;AACH,SAHD,MAIK,IAAI,OAAO,KAAK,MAAhB,EAAwB;AACzB,eAAK,aAAL;;AACA,eAAK,sBAAL,CAA4B,IAA5B,CAAiC;AAAE,iBAAK,EAAE,QAAT;AAAmB,qBAAS,EAAT;AAAnB,WAAjC;AACH;AACJ;AACD;;;;aACA,kCAAwC;AAAA,YAApB,OAAoB,SAApB,OAAoB;AAAA,YAAX,SAAW,SAAX,SAAW;;AACpC,YAAI,OAAO,KAAK,OAAhB,EAAyB;AACrB,eAAK,sBAAL,CAA4B,IAA5B,CAAiC;AAAE,iBAAK,EAAE,SAAT;AAAoB,qBAAS,EAAT;AAApB,WAAjC;AACH,SAFD,MAGK,IAAI,OAAO,KAAK,MAAZ,IAAsB,OAAO,KAAK,MAAtC,EAA8C;AAC/C,eAAK,sBAAL,CAA4B,IAA5B,CAAiC;AAAE,iBAAK,EAAE,SAAT;AAAoB,qBAAS,EAAT;AAApB,WAAjC;AACH;AACJ;AACD;;;;aACA,+BAAmB;AACf,aAAK,MAAL,GAAc,MAAd,CADe,CAEf;AACA;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACH;;;;IAhC4B,uB;;AAkCjC,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC;AAAc,QAAI,+BAAJ;AAAqC,WAAO,SAAS,0BAAT,CAAoC,CAApC,EAAqC;AAAI,aAAO,CAAC,+BAA+B,KAAK,+BAA+B,GAAG,oEAA6B,kBAA7B,CAAvC,CAAhC,EAA0H,CAAC,IAAI,kBAA/H,CAAP;AAA4J,KAA5M;AAA+M,GAAlQ,EAAxC;;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,kBAAR;AAA4B,aAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;AAAmE,aAAS,EAAE,CAAC,UAAD,EAAa,IAAb,EAAmB,YAAnB,EAAiC,MAAjC,EAAyC,CAAzC,EAA4C,sBAA5C,CAA9E;AAAmJ,YAAQ,EAAE,CAA7J;AAAgK,gBAAY,EAAE,SAAS,+BAAT,CAAyC,EAAzC,EAA6C,GAA7C,EAAgD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACvS,8EAA+B,wBAA/B,EAAyD,SAAS,qEAAT,CAA+E,MAA/E,EAAqF;AAAI,iBAAO,GAAG,CAAC,iBAAJ,CAAsB,MAAtB,CAAP;AAAuC,SAAzL,EAA2L,uBAA3L,EAAoN,SAAS,oEAAT,CAA8E,MAA9E,EAAoF;AAAI,iBAAO,GAAG,CAAC,gBAAJ,CAAqB,MAArB,CAAP;AAAsC,SAAlV;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,qEAAsB,IAAtB,EAA4B,GAAG,CAAC,GAAhC;AACA,kEAAmB,MAAnB,EAA2B,GAAG,CAAC,OAAJ,CAAY,IAAvC,EAA6C,iBAA7C,EAAgE,GAAG,CAAC,OAAJ,CAAY,SAAZ,GAAwB,IAAxB,GAA+B,GAAG,CAAC,eAAnG,EAAoH,YAApH,EAAkI,GAAG,CAAC,OAAJ,CAAY,SAA9I,EAAyJ,kBAAzJ,EAA6K,GAAG,CAAC,OAAJ,CAAY,eAAZ,IAA+B,IAA5M;AACA,8EAA+B,kBAA/B,EAAmD,GAAG,CAAC,MAAvD;AACH;AAAE,KAN0D;AAMxD,YAAQ,EAAE,CAAC,wEAAD,CAN8C;AAMT,SAAK,EAAE,CANE;AAMC,QAAI,EAAE,CANP;AAMU,UAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,CANlB;AAM6C,YAAQ,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC5K,iEAAkB,CAAlB,EAAqB,yCAArB,EAAgE,CAAhE,EAAmE,CAAnE,EAAsE,aAAtE,EAAqF,CAArF;AACH;AAAE,KAR0D;AAQxD,cAAU,EAAE,CAAC,gEAAD,CAR4C;AAQlB,UAAM,EAAE,CAAC,28BAAD,CARU;AAQq8B,iBAAa,EAAE,CARp9B;AAQu9B,QAAI,EAAE;AAAE,eAAS,EAAE,CAAC,mBAAmB,CAAC,eAArB;AAAb;AAR79B,GAAzB,CAAxC;;;AAoCA;;;;;;AAMG;AACH;AACA;;;AACA,IAAI,QAAQ,GAAG,CAAf;AACA;;AAEG;;IACG,Y;AACF,wBAAY,WAAZ,EAAyB,kBAAzB,EAE+B;AAAA;;AAAA,QAA/B,EAA+B,4FAAZ,QAAQ,EAAI;;AAAA;;AAC3B,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,kBAAL,GAA0B,kBAA1B;AACA,SAAK,EAAL,GAAU,EAAV;AACA;;AACA,SAAK,YAAL,GAAoB,KAAK,kBAAL,CAAwB,OAAxB,CAAgC,YAApD;AACA;;AACA,SAAK,YAAL,GAAoB,IAAI,0CAAJ,EAApB;AACA;;AACA,SAAK,YAAL,GAAoB,IAAI,0CAAJ,EAApB;AACA;;AACA,SAAK,aAAL,GAAqB,IAAI,0CAAJ,EAArB;AACA;;AACA,SAAK,MAAL,GAAc;AAAE;AAAhB,KAb2B,CAc3B;;AACA,sBAAkB,CAAC,GAAnB,GAAyB,EAAzB,CAf2B,CAgB3B;;AACA,sBAAkB,CAAC,sBAAnB,CAA0C,IAA1C,CAA+C,uDAAM,CAAC,eAAK;AAAA,aAAI,KAAK,CAAC,KAAN,KAAgB,QAApB;AAAA,KAAN,CAArD,EAA0F,qDAAI,CAAC,CAAD,CAA9F,EACK,SADL,CACe,YAAK;AAChB,YAAI,CAAC,YAAL,CAAkB,IAAlB;;AACA,YAAI,CAAC,YAAL,CAAkB,QAAlB;AACH,KAJD,EAjB2B,CAsB3B;;;AACA,sBAAkB,CAAC,sBAAnB,CAA0C,IAA1C,CAA+C,uDAAM,CAAC,eAAK;AAAA,aAAI,KAAK,CAAC,KAAN,KAAgB,QAApB;AAAA,KAAN,CAArD,EAA0F,qDAAI,CAAC,CAAD,CAA9F,EAAmG,SAAnG,CAA6G,YAAK;AAC9G,kBAAY,CAAC,MAAI,CAAC,qBAAN,CAAZ;;AACA,YAAI,CAAC,kBAAL;AACH,KAHD;;AAIA,eAAW,CAAC,WAAZ,GAA0B,SAA1B,CAAoC,YAAK;AACrC,YAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,MAAI,CAAC,OAA7B;;AACA,YAAI,CAAC,aAAL,CAAmB,QAAnB;;AACA,YAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,MAAI,CAAC,OAA5B;;AACA,YAAI,CAAC,YAAL,CAAkB,QAAlB;;AACA,YAAI,CAAC,iBAAL,GAAyB,IAAzB;;AACA,YAAI,CAAC,WAAL,CAAiB,OAAjB;AACH,KAPD;;AAQA,eAAW,CAAC,aAAZ,GACK,IADL,CACU,uDAAM,CAAC,eAAK,EAAG;AACrB,aAAO,KAAK,CAAC,OAAN,KAAkB,0DAAlB,IAA4B,CAAC,MAAI,CAAC,YAAlC,IAAkD,CAAC,sEAAc,CAAC,KAAD,CAAxE;AACH,KAFe,CADhB,EAIK,SAJL,CAIe,eAAK,EAAG;AACnB,WAAK,CAAC,cAAN;;AACA,qBAAe,CAAC,MAAD,EAAO,UAAP,CAAf;AACH,KAPD;;AAQA,eAAW,CAAC,aAAZ,GAA4B,SAA5B,CAAsC,YAAK;AACvC,UAAI,MAAI,CAAC,YAAT,EAAuB;AACnB,cAAI,CAAC,kBAAL,CAAwB,eAAxB;AACH,OAFD,MAGK;AACD,uBAAe,CAAC,MAAD,EAAO,OAAP,CAAf;AACH;AACJ,KAPD;AAQH;AACD;;;AAGG;;;;;WACH,eAAM,YAAN,EAAkB;AAAA;;AACd,WAAK,OAAL,GAAe,YAAf,CADc,CAEd;;AACA,WAAK,kBAAL,CAAwB,sBAAxB,CAA+C,IAA/C,CAAoD,uDAAM,CAAC,eAAK;AAAA,eAAI,KAAK,CAAC,KAAN,KAAgB,SAApB;AAAA,OAAN,CAA1D,EAAgG,qDAAI,CAAC,CAAD,CAApG,EACK,SADL,CACe,eAAK,EAAG;AACnB,cAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,YAAxB;;AACA,cAAI,CAAC,aAAL,CAAmB,QAAnB;;AACA,cAAI,CAAC,WAAL,CAAiB,cAAjB,GAHmB,CAInB;AACA;AACA;AACA;AACA;;;AACA,cAAI,CAAC,qBAAL,GAA6B,UAAU,CAAC;AAAA,iBAAM,MAAI,CAAC,kBAAL,EAAN;AAAA,SAAD,EAAkC,KAAK,CAAC,SAAN,GAAkB,GAApD,CAAvC;AACH,OAXD;;AAYA,WAAK,MAAL,GAAc;AAAE;AAAhB;;AACA,WAAK,kBAAL,CAAwB,mBAAxB;AACH;AACD;;AAEG;;;;WACH,uBAAW;AACP,aAAO,KAAK,YAAZ;AACH;AACD;;AAEG;;;;WACH,uBAAW;AACP,aAAO,KAAK,YAAZ;AACH;AACD;;AAEG;;;;WACH,wBAAY;AACR,aAAO,KAAK,aAAZ;AACH;AACD;;AAEG;;;;WACH,yBAAa;AACT,aAAO,KAAK,WAAL,CAAiB,aAAjB,EAAP;AACH;AACD;;AAEG;;;;WACH,yBAAa;AACT,aAAO,KAAK,WAAL,CAAiB,aAAjB,EAAP;AACH;AACD;;;AAGG;;;;WACH,wBAAe,QAAf,EAAuB;AACnB,UAAI,QAAQ,GAAG,KAAK,oBAAL,EAAf;;AACA,UAAI,QAAQ,KAAK,QAAQ,CAAC,IAAT,IAAiB,QAAQ,CAAC,KAA/B,CAAZ,EAAmD;AAC/C,gBAAQ,CAAC,IAAT,GAAgB,QAAQ,CAAC,IAAT,CAAc,QAAQ,CAAC,IAAvB,CAAhB,GAA+C,QAAQ,CAAC,KAAT,CAAe,QAAQ,CAAC,KAAxB,CAA/C;AACH,OAFD,MAGK;AACD,gBAAQ,CAAC,kBAAT;AACH;;AACD,UAAI,QAAQ,KAAK,QAAQ,CAAC,GAAT,IAAgB,QAAQ,CAAC,MAA9B,CAAZ,EAAmD;AAC/C,gBAAQ,CAAC,GAAT,GAAe,QAAQ,CAAC,GAAT,CAAa,QAAQ,CAAC,GAAtB,CAAf,GAA4C,QAAQ,CAAC,MAAT,CAAgB,QAAQ,CAAC,MAAzB,CAA5C;AACH,OAFD,MAGK;AACD,gBAAQ,CAAC,gBAAT;AACH;;AACD,WAAK,WAAL,CAAiB,cAAjB;;AACA,aAAO,IAAP;AACH;AACD;;;;AAIG;;;;WACH,sBAAkC;AAAA,UAAvB,KAAuB,uEAAf,EAAe;AAAA,UAAX,MAAW,uEAAF,EAAE;;AAC9B,WAAK,WAAL,CAAiB,UAAjB,CAA4B;AAAE,aAAK,EAAL,KAAF;AAAS,cAAM,EAAN;AAAT,OAA5B;;AACA,WAAK,WAAL,CAAiB,cAAjB;;AACA,aAAO,IAAP;AACH;AACD;;;;WACA,uBAAc,OAAd,EAAqB;AACjB,WAAK,WAAL,CAAiB,aAAjB,CAA+B,OAA/B;;AACA,aAAO,IAAP;AACH;AACD;;;;WACA,0BAAiB,OAAjB,EAAwB;AACpB,WAAK,WAAL,CAAiB,gBAAjB,CAAkC,OAAlC;;AACA,aAAO,IAAP;AACH;AACD;;;;WACA,oBAAQ;AACJ,aAAO,KAAK,MAAZ;AACH;AACD;;;AAGG;;;;WACH,8BAAkB;AACd,WAAK,MAAL,GAAc;AAAE;AAAhB;;AACA,WAAK,WAAL,CAAiB,OAAjB;AACH;AACD;;;;WACA,gCAAoB;AAChB,aAAO,KAAK,WAAL,CAAiB,SAAjB,GAA6B,gBAApC;AACH;;;;;AAEL;;;;AAIG;AACH;;;AACA,SAAS,eAAT,CAAyB,GAAzB,EAA8B,eAA9B,EAA+C,MAA/C,EAAqD;AACjD;AACA;AACA,MAAI,GAAG,CAAC,kBAAJ,KAA2B,SAA/B,EAA0C;AACtC,OAAG,CAAC,kBAAJ,CAAuB,qBAAvB,GAA+C,eAA/C;AACH;;AACD,SAAO,GAAG,CAAC,KAAJ,CAAU,MAAV,CAAP;AACH;AAED;;;;;;AAMG;;AACH;;;AACA,IAAM,eAAe,gBAAG,IAAI,yDAAJ,CAAmB,eAAnB,CAAxB;AACA;;AACA,IAAM,0BAA0B,gBAAG,IAAI,yDAAJ,CAAmB,4BAAnB,CAAnC;AACA;;AACA,IAAM,0BAA0B,gBAAG,IAAI,yDAAJ,CAAmB,4BAAnB,CAAnC;AACA;;AACA,SAAS,kCAAT,CAA4C,OAA5C,EAAmD;AAC/C,SAAO;AAAA,WAAM,OAAO,CAAC,gBAAR,CAAyB,KAAzB,EAAN;AAAA,GAAP;AACH;AACD;;;AACA,SAAS,2CAAT,CAAqD,OAArD,EAA4D;AACxD,SAAO;AAAA,WAAM,OAAO,CAAC,gBAAR,CAAyB,KAAzB,EAAN;AAAA,GAAP;AACH;AACD;;;AACA,IAAM,mCAAmC,GAAG;AACxC,SAAO,EAAE,0BAD+B;AAExC,MAAI,EAAE,CAAC,0DAAD,CAFkC;AAGxC,YAAU,EAAE;AAH4B,CAA5C;;;MASM,c;AACF,4BAAY,QAAZ,EAAsB,SAAtB,EAAiC,eAAjC,EAAkD,aAAlD,EAAiE,iBAAjE,EAAoF,cAApF,EAAoG,qBAApG,EAA2H,oBAA3H,EAAiJ,gBAAjJ,EAAiK;AAAA;;AAAA;;AAC7J,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,eAAL,GAAuB,eAAvB;AACA,WAAK,aAAL,GAAqB,aAArB;AACA,WAAK,iBAAL,GAAyB,iBAAzB;AACA,WAAK,qBAAL,GAA6B,qBAA7B;AACA,WAAK,oBAAL,GAA4B,oBAA5B;AACA,WAAK,gBAAL,GAAwB,gBAAxB;AACA,WAAK,uBAAL,GAA+B,EAA/B;AACA,WAAK,0BAAL,GAAkC,IAAI,0CAAJ,EAAlC;AACA,WAAK,uBAAL,GAA+B,IAAI,0CAAJ,EAA/B;AACA,WAAK,mBAAL,GAA2B,IAAI,GAAJ,EAA3B,CAZ6J,CAa7J;;AACA;;;AAGG;;AACH,WAAK,cAAL,GAAsB,4CAAK,CAAC;AAAA,eAAM,MAAI,CAAC,WAAL,CAAiB,MAAjB,GAC9B,MAAI,CAAC,kBAAL,EAD8B,GAE9B,MAAI,CAAC,kBAAL,GAA0B,IAA1B,CAA+B,0DAAS,CAAC,SAAD,CAAxC,CAFwB;AAAA,OAAD,CAA3B;AAGA,WAAK,eAAL,GAAuB,cAAvB;AACH;AACD;;;;;WACA,eAAe;AACX,eAAO,KAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,WAAxC,GAAsD,KAAK,uBAAlE;AACH;AACD;;;;WACA,eAAe;AACX,eAAO,KAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,WAAxC,GAAsD,KAAK,uBAAlE;AACH;;;aACD,8BAAkB;AACd,YAAM,MAAM,GAAG,KAAK,aAApB;AACA,eAAO,MAAM,GAAG,MAAM,CAAC,kBAAP,EAAH,GAAiC,KAAK,0BAAnD;AACH;;;aACD,cAAK,sBAAL,EAA6B,MAA7B,EAAmC;AAAA;;AAC/B,cAAM,GAAG,oBAAoB,CAAC,MAAD,EAAS,KAAK,eAAL,IAAwB,IAAI,eAAJ,EAAjC,CAA7B;;AACA,YAAI,MAAM,CAAC,EAAP,IAAa,KAAK,aAAL,CAAmB,MAAM,CAAC,EAA1B,CAAb,KACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,gBAAM,KAAK,4BAAoB,MAAM,CAAC,EAA3B,sDAAX;AACH;;AACD,YAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,MAApB,CAAnB;;AACA,YAAM,eAAe,GAAG,KAAK,sBAAL,CAA4B,UAA5B,EAAwC,MAAxC,CAAxB;;AACA,YAAM,SAAS,GAAG,KAAK,oBAAL,CAA0B,sBAA1B,EAAkD,eAAlD,EAAmE,UAAnE,EAA+E,MAA/E,CAAlB,CAR+B,CAS/B;;;AACA,YAAI,CAAC,KAAK,WAAL,CAAiB,MAAtB,EAA8B;AAC1B,eAAK,4CAAL;AACH;;AACD,aAAK,WAAL,CAAiB,IAAjB,CAAsB,SAAtB;AACA,iBAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC;AAAA,iBAAM,MAAI,CAAC,iBAAL,CAAuB,SAAvB,CAAN;AAAA,SAAlC;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,SAAtB,EAf+B,CAgB/B;;AACA,uBAAe,CAAC,8BAAhB;;AACA,eAAO,SAAP;AACH;AACD;;AAEG;;;;aACH,oBAAQ;AACJ,aAAK,aAAL,CAAmB,KAAK,WAAxB;AACH;AACD;;;AAGG;;;;aACH,uBAAc,EAAd,EAAgB;AACZ,eAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,gBAAM;AAAA,iBAAI,MAAM,CAAC,EAAP,KAAc,EAAlB;AAAA,SAA5B,CAAP;AACH;;;aACD,uBAAW;AACP;AACA;AACA,aAAK,aAAL,CAAmB,KAAK,uBAAxB;;AACA,aAAK,0BAAL,CAAgC,QAAhC;;AACA,aAAK,uBAAL,CAA6B,QAA7B;AACH;AACD;;;;AAIG;;;;aACH,wBAAe,MAAf,EAAqB;AACjB,YAAM,aAAa,GAAG,KAAK,iBAAL,CAAuB,MAAvB,CAAtB;;AACA,eAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,aAArB,CAAP;AACH;AACD;;;;AAIG;;;;aACH,2BAAkB,YAAlB,EAA8B;AAC1B,YAAM,KAAK,GAAG,IAAI,gEAAJ,CAAkB;AAC5B,0BAAgB,EAAE,KAAK,QAAL,CAAc,QAAd,GAAyB,MAAzB,EADU;AAE5B,wBAAc,EAAE,YAAY,CAAC,cAAb,IAA+B,KAAK,eAAL,EAFnB;AAG5B,oBAAU,EAAE,YAAY,CAAC,UAHG;AAI5B,qBAAW,EAAE,YAAY,CAAC,WAJE;AAK5B,mBAAS,EAAE,YAAY,CAAC,SALI;AAM5B,kBAAQ,EAAE,YAAY,CAAC,QANK;AAO5B,mBAAS,EAAE,YAAY,CAAC,SAPI;AAQ5B,kBAAQ,EAAE,YAAY,CAAC,QARK;AAS5B,mBAAS,EAAE,YAAY,CAAC,SATI;AAU5B,6BAAmB,EAAE,YAAY,CAAC;AAVN,SAAlB,CAAd;;AAYA,YAAI,YAAY,CAAC,aAAjB,EAAgC;AAC5B,eAAK,CAAC,aAAN,GAAsB,YAAY,CAAC,aAAnC;AACH;;AACD,eAAO,KAAP;AACH;AACD;;;;;AAKG;;;;aACH,gCAAuB,OAAvB,EAAgC,MAAhC,EAAsC;AAClC,YAAM,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,gBAAjB,IAAqC,MAAM,CAAC,gBAAP,CAAwB,QAAlF;AACA,YAAM,QAAQ,GAAG,2DAAgB;AAC7B,gBAAM,EAAE,YAAY,IAAI,KAAK,SADA;AAE7B,mBAAS,EAAE,CAAC;AAAE,mBAAO,EAAE,eAAX;AAA4B,oBAAQ,EAAE;AAAtC,WAAD;AAFkB,SAAhB,CAAjB;AAIA,YAAM,eAAe,GAAG,IAAI,gEAAJ,CAAoB,KAAK,oBAAzB,EAA+C,MAAM,CAAC,gBAAtD,EAAwE,QAAxE,EAAkF,MAAM,CAAC,wBAAzF,CAAxB;AACA,YAAM,YAAY,GAAG,OAAO,CAAC,MAAR,CAAe,eAAf,CAArB;AACA,eAAO,YAAY,CAAC,QAApB;AACH;AACD;;;;;;;;AAQG;;;;aACH,8BAAqB,sBAArB,EAA6C,eAA7C,EAA8D,UAA9D,EAA0E,MAA1E,EAAgF;AAC5E;AACA;AACA,YAAM,SAAS,GAAG,IAAI,KAAK,qBAAT,CAA+B,UAA/B,EAA2C,eAA3C,EAA4D,MAAM,CAAC,EAAnE,CAAlB;;AACA,YAAI,sBAAsB,YAAY,sDAAtC,EAAmD;AAC/C,yBAAe,CAAC,oBAAhB,CAAqC,IAAI,+DAAJ,CAAmB,sBAAnB,EAA2C,IAA3C,EAAiD;AAAE,qBAAS,EAAE,MAAM,CAAC,IAApB;AAA0B,qBAAS,EAAT;AAA1B,WAAjD,CAArC;AACH,SAFD,MAGK;AACD,cAAM,QAAQ,GAAG,KAAK,eAAL,CAAqB,MAArB,EAA6B,SAA7B,EAAwC,eAAxC,CAAjB;;AACA,cAAM,UAAU,GAAG,eAAe,CAAC,qBAAhB,CAAsC,IAAI,gEAAJ,CAAoB,sBAApB,EAA4C,MAAM,CAAC,gBAAnD,EAAqE,QAArE,CAAtC,CAAnB;AACA,mBAAS,CAAC,iBAAV,GAA8B,UAAU,CAAC,QAAzC;AACH;;AACD,iBAAS,CACJ,UADL,CACgB,MAAM,CAAC,KADvB,EAC8B,MAAM,CAAC,MADrC,EAEK,cAFL,CAEoB,MAAM,CAAC,QAF3B;AAGA,eAAO,SAAP;AACH;AACD;;;;;;;AAOG;;;;aACH,yBAAgB,MAAhB,EAAwB,SAAxB,EAAmC,eAAnC,EAAkD;AAC9C,YAAM,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,gBAAjB,IAAqC,MAAM,CAAC,gBAAP,CAAwB,QAAlF,CAD8C,CAE9C;AACA;AACA;AACA;;AACA,YAAM,SAAS,GAAG,CACd;AAAE,iBAAO,EAAE,KAAK,oBAAhB;AAAsC,kBAAQ,EAAE;AAAhD,SADc,EAEd;AAAE,iBAAO,EAAE,KAAK,gBAAhB;AAAkC,kBAAQ,EAAE,MAAM,CAAC;AAAnD,SAFc,EAGd;AAAE,iBAAO,EAAE,KAAK,qBAAhB;AAAuC,kBAAQ,EAAE;AAAjD,SAHc,CAAlB;;AAKA,YAAI,MAAM,CAAC,SAAP,KAAqB,CAAC,YAAD,IACrB,CAAC,YAAY,CAAC,GAAb,CAAiB,8DAAjB,EAAiC,IAAjC,EAAuC,+DAAvC,CADD,CAAJ,EACoE;AAChE,mBAAS,CAAC,IAAV,CAAe;AACX,mBAAO,EAAE,8DADE;AAEX,oBAAQ,EAAE;AAAE,mBAAK,EAAE,MAAM,CAAC,SAAhB;AAA2B,oBAAM,EAAE,yCAAE;AAArC;AAFC,WAAf;AAIH;;AACD,eAAO,2DAAgB;AAAE,gBAAM,EAAE,YAAY,IAAI,KAAK,SAA/B;AAA0C,mBAAS,EAAT;AAA1C,SAAhB,CAAP;AACH;AACD;;;AAGG;;;;aACH,2BAAkB,SAAlB,EAA2B;AACvB,YAAM,KAAK,GAAG,KAAK,WAAL,CAAiB,OAAjB,CAAyB,SAAzB,CAAd;;AACA,YAAI,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,eAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,CAA/B,EADY,CAEZ;AACA;;AACA,cAAI,CAAC,KAAK,WAAL,CAAiB,MAAtB,EAA8B;AAC1B,iBAAK,mBAAL,CAAyB,OAAzB,CAAiC,UAAC,aAAD,EAAgB,OAAhB,EAA2B;AACxD,kBAAI,aAAJ,EAAmB;AACf,uBAAO,CAAC,YAAR,CAAqB,aAArB,EAAoC,aAApC;AACH,eAFD,MAGK;AACD,uBAAO,CAAC,eAAR,CAAwB,aAAxB;AACH;AACJ,aAPD;;AAQA,iBAAK,mBAAL,CAAyB,KAAzB;;AACA,iBAAK,kBAAL,GAA0B,IAA1B;AACH;AACJ;AACJ;AACD;;AAEG;;;;aACH,wDAA4C;AACxC,YAAM,gBAAgB,GAAG,KAAK,iBAAL,CAAuB,mBAAvB,EAAzB,CADwC,CAExC;;;AACA,YAAI,gBAAgB,CAAC,aAArB,EAAoC;AAChC,cAAM,QAAQ,GAAG,gBAAgB,CAAC,aAAjB,CAA+B,QAAhD;;AACA,eAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAT,GAAkB,CAA/B,EAAkC,CAAC,GAAG,CAAC,CAAvC,EAA0C,CAAC,EAA3C,EAA+C;AAC3C,gBAAI,OAAO,GAAG,QAAQ,CAAC,CAAD,CAAtB;;AACA,gBAAI,OAAO,KAAK,gBAAZ,IACA,OAAO,CAAC,QAAR,KAAqB,QADrB,IAEA,OAAO,CAAC,QAAR,KAAqB,OAFrB,IAGA,CAAC,OAAO,CAAC,YAAR,CAAqB,WAArB,CAHL,EAGwC;AACpC,mBAAK,mBAAL,CAAyB,GAAzB,CAA6B,OAA7B,EAAsC,OAAO,CAAC,YAAR,CAAqB,aAArB,CAAtC;;AACA,qBAAO,CAAC,YAAR,CAAqB,aAArB,EAAoC,MAApC;AACH;AACJ;AACJ;AACJ;AACD;;;;aACA,uBAAc,OAAd,EAAqB;AACjB,YAAI,CAAC,GAAG,OAAO,CAAC,MAAhB;;AACA,eAAO,CAAC,EAAR,EAAY;AACR;AACA;AACA;AACA;AACA,iBAAO,CAAC,CAAD,CAAP,CAAW,KAAX;AACH;AACJ;;;;;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,0DAAzB,CAA1B,EAAoE,gEAAyB,mDAAzB,CAApE,EAA+G,gEAAyB,SAAzB,CAA/G,EAAoJ,gEAAyB,SAAzB,CAApJ,EAAyL,gEAAyB,mEAAzB,CAAzL,EAA4O,gEAAyB,SAAzB,CAA5O,EAAiR,gEAAyB,+CAAzB,CAAjR,EAAwT,gEAAyB,+CAAzB,CAAxT,EAA+V,gEAAyB,yDAAzB,CAA/V,CAAP;AAAyZ,GAApd;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE;AAAR,GAAzB,CAApC;;;;;MAkBM,S;;;;;AACF,uBAAY,OAAZ,EAAqB,QAArB;AACA;;;AAGG;AACH,YALA,EAKU,cALV,EAK0B,cAL1B,EAK0C,YAL1C,EAKwD,gBALxD,EAKwE;AAAA;;AAAA,gCAC9D,OAD8D,EACrD,QADqD,EAC3C,cAD2C,EAC3B,YAD2B,EACb,gBADa,EACK,cADL,EACqB,YADrB,EACmC,kBADnC,EACuD,eADvD;AAEvE;;;IARmB,c;;AAUxB,WAAS,CAAC,IAAV,GAAiB,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,WAAO,KAAK,CAAC,IAAI,SAAV,EAAqB,uDAAgB,0DAAhB,CAArB,EAAsD,uDAAgB,mDAAhB,CAAtD,EAAwF,uDAAgB,qDAAhB,EAAiC,CAAjC,CAAxF,EAA6H,uDAAgB,0BAAhB,EAA4C,CAA5C,CAA7H,EAA6K,uDAAgB,0BAAhB,CAA7K,EAA0N,uDAAgB,SAAhB,EAA2B,EAA3B,CAA1N,EAA0P,uDAAgB,mEAAhB,CAA1P,CAAP;AAA6S,GAA9V;;AACA,WAAS,CAAC,KAAV;AAAkB;;AAAa;AAAC,mEAA0B;AAAE,SAAK,EAAE,SAAT;AAAoB,WAAO,EAAE,SAAS,CAAC;AAAvC,GAA1B,CAAhC;;;AA2BA;;;;;AAKG;;;AACH,SAAS,oBAAT,CAA8B,MAA9B,EAAsC,cAAtC,EAAoD;AAChD,SAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,cAAlB,CAAd,EAAiD,MAAjD,CAAP;AACH;AAED;;;;;;AAMG;;AACH;;;AACA,IAAI,gBAAgB,GAAG,CAAvB;;;MAIM,c;AACF;AACA;;;;AAIG;AACH;AACA;AACA,aARA,EAQW,WARX,EAQwB,OARxB,EAQ+B;AAAA;;AAC3B,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,OAAL,GAAe,OAAf;AACA;;AACA,WAAK,IAAL,GAAY,QAAZ;AACH;;;;aACD,oBAAQ;AACJ,YAAI,CAAC,KAAK,SAAV,EAAqB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAK,SAAL,GAAiB,gBAAgB,CAAC,KAAK,WAAN,EAAmB,KAAK,OAAL,CAAa,WAAhC,CAAjC;AACH;AACJ;;;aACD,qBAAY,OAAZ,EAAmB;AACf,YAAM,aAAa,GAAG,OAAO,CAAC,iBAAD,CAAP,IAA8B,OAAO,CAAC,uBAAD,CAA3D;;AACA,YAAI,aAAJ,EAAmB;AACf,eAAK,YAAL,GAAoB,aAAa,CAAC,YAAlC;AACH;AACJ;;;aACD,wBAAe,KAAf,EAAoB;AAChB;AACA;AACA;AACA;AACA,uBAAe,CAAC,KAAK,SAAN,EAAiB,KAAK,CAAC,OAAN,KAAkB,CAAlB,IAAuB,KAAK,CAAC,OAAN,KAAkB,CAAzC,GAA6C,UAA7C,GAA0D,OAA3E,EAAoF,KAAK,YAAzF,CAAf;AACH;;;;;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,YAAzB,EAAuC,CAAvC,CAA1B,EAAqE,gEAAyB,qDAAzB,CAArE,EAAkH,gEAAyB,SAAzB,CAAlH,CAAP;AAAgK,GAA3N;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,EAA+B,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA/B,CAAnC;AAA+F,YAAQ,EAAE,CAAzG;AAA4G,gBAAY,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3O,iEAAkB,OAAlB,EAA2B,SAAS,uCAAT,CAAiD,MAAjD,EAAuD;AAAI,iBAAO,GAAG,CAAC,cAAJ,CAAmB,MAAnB,CAAP;AAAoC,SAA1H;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,kEAAmB,YAAnB,EAAiC,GAAG,CAAC,SAAJ,IAAiB,IAAlD,EAAwD,MAAxD,EAAgE,GAAG,CAAC,IAApE;AACH;AAAE,KAJsD;AAIpD,UAAM,EAAE;AAAE,UAAI,EAAE,MAAR;AAAgB,kBAAY,EAAE,CAAC,kBAAD,EAAqB,cAArB,CAA9B;AAAoE,eAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAA/E;AAA4G,qBAAe,EAAE,CAAC,gBAAD,EAAmB,iBAAnB;AAA7H,KAJ4C;AAI0H,YAAQ,EAAE,CAAC,gBAAD,CAJpI;AAIwJ,YAAQ,EAAE,CAAC,kEAAD;AAJlK,GAAzB,CAApC;;;;;MA4CM,c;AACF,6BACA;AACA;AACA,cAHA,EAGY,WAHZ,EAGyB,OAHzB,EAGgC;AAAA;;AAC5B,WAAK,UAAL,GAAkB,UAAlB;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,OAAL,GAAe,OAAf;AACA;;AACA,WAAK,EAAL,8BAA8B,gBAAgB,EAA9C;AACH;;;;aACD,oBAAQ;AAAA;;AACJ,YAAI,CAAC,KAAK,UAAV,EAAsB;AAClB,eAAK,UAAL,GAAkB,gBAAgB,CAAC,KAAK,WAAN,EAAmB,KAAK,OAAL,CAAa,WAAhC,CAAlC;AACH;;AACD,YAAI,KAAK,UAAT,EAAqB;AACjB,iBAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,YAAK;AACxB,gBAAM,SAAS,GAAG,MAAI,CAAC,UAAL,CAAgB,kBAAlC;;AACA,gBAAI,SAAS,IAAI,CAAC,SAAS,CAAC,eAA5B,EAA6C;AACzC,uBAAS,CAAC,eAAV,GAA4B,MAAI,CAAC,EAAjC;AACH;AACJ,WALD;AAMH;AACJ;;;;;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,YAAzB,EAAuC,CAAvC,CAA1B,EAAqE,gEAAyB,qDAAzB,CAArE,EAAkH,gEAAyB,SAAzB,CAAlH,CAAP;AAAgK,GAA3N;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,EAA+B,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA/B,CAAnC;AAA+F,aAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAA1G;AAAmI,YAAQ,EAAE,CAA7I;AAAgJ,gBAAY,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC/Q,qEAAsB,IAAtB,EAA4B,GAAG,CAAC,EAAhC;AACH;AAAE,KAFsD;AAEpD,UAAM,EAAE;AAAE,QAAE,EAAE;AAAN,KAF4C;AAE9B,YAAQ,EAAE,CAAC,gBAAD;AAFoB,GAAzB,CAApC;;;;;MA6BM,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,oBAAD,CAAjC,EAAyD,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAzD,CAArC;AAA6H,aAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ;AAAxI,GAAzB,CAAtC;;;;;MAYM,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,oBAAD,CAAjC,EAAyD,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAzD,CAArC;AAA6H,aAAS,EAAE,CAAC,CAAD,EAAI,oBAAJ;AAAxI,GAAzB,CAAtC;;;AAQA;;;;AAIG;;;AACH,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,WAAnC,EAA8C;AAC1C,MAAI,MAAM,GAAG,OAAO,CAAC,aAAR,CAAsB,aAAnC;;AACA,SAAO,MAAM,IAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,sBAA1B,CAAlB,EAAqE;AACjE,UAAM,GAAG,MAAM,CAAC,aAAhB;AACH;;AACD,SAAO,MAAM,GAAG,WAAW,CAAC,IAAZ,CAAiB,gBAAM;AAAA,WAAI,MAAM,CAAC,EAAP,KAAc,MAAM,CAAC,EAAzB;AAAA,GAAvB,CAAH,GAAyD,IAAtE;AACH;;;MASK,e;;;;AAEN,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,GAAP;AAAsC,GAAnG;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAArC;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAClE,SADkE,EAElE,mCAFkE,CAAb;AAGtD,WAAO,EAAE,CAAC,CACL,gEADK,EAEL,6DAFK,EAGL,oEAHK,CAAD,EAIL,oEAJK;AAH6C,GAAxB,CAArC;;;AAsCA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,eAA1B,EAA2C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,kBAAD,EAAqB,cAArB,EAAqC,cAArC,EAAqD,gBAArD,EAAuE,gBAAvE,CAAP;AAAkG,KAAhI;AAAkI,WAAO,EAAE;AAAc,aAAO,CAAC,gEAAD,EACrQ,6DADqQ,EAErQ,oEAFqQ,CAAP;AAE3O,KAFkF;AAEhF,WAAO,EAAE;AAAc,aAAO,CAAC,kBAAD,EAAqB,cAArB,EAAqC,cAArC,EAAqD,gBAArD,EAAuE,gBAAvE,EAAyF,oEAAzF,CAAP;AAAmH;AAF1D,GAA3C,CAAnD;AAE8J,CAF7K;AAIA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtnCH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;;AAIG;;AACH;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,SAAS,2BAAT,CAAqC,QAArC,EAA6C;AACzC,SAAO,KAAK,+CAAuC,QAAvC,QAAZ;AACH;AACD;;;;AAIG;;;AACH,SAAS,6BAAT,GAAsC;AAClC,SAAO,KAAK,CAAC,6EACT,wEADS,GAET,cAFQ,CAAZ;AAGH;AACD;;;;AAIG;;;AACH,SAAS,kCAAT,CAA4C,GAA5C,EAA+C;AAC3C,SAAO,KAAK,CAAC,qIACyC,GADzC,QAAD,CAAZ;AAEH;AACD;;;;AAIG;;;AACH,SAAS,sCAAT,CAAgD,OAAhD,EAAuD;AACnD,SAAO,KAAK,CAAC,uIACyC,OADzC,QAAD,CAAZ;AAEH;AACD;;;AAGG;;;IACG,a,GACF,uBAAY,GAAZ,EAAiB,OAAjB,EAA0B,OAA1B,EAAiC;AAAA;;AAC7B,OAAK,GAAL,GAAW,GAAX;AACA,OAAK,OAAL,GAAe,OAAf;AACA,OAAK,OAAL,GAAe,OAAf;AACH,C;;;MASC,e;AACF,6BAAY,WAAZ,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,aAA/C,EAA4D;AAAA;;AACxD,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,UAAL,GAAkB,UAAlB;AACA,WAAK,aAAL,GAAqB,aAArB;AACA;;AAEG;;AACH,WAAK,eAAL,GAAuB,IAAI,GAAJ,EAAvB;AACA;;;AAGG;;AACH,WAAK,eAAL,GAAuB,IAAI,GAAJ,EAAvB;AACA;;AACA,WAAK,iBAAL,GAAyB,IAAI,GAAJ,EAAzB;AACA;;AACA,WAAK,qBAAL,GAA6B,IAAI,GAAJ,EAA7B;AACA;;AACA,WAAK,sBAAL,GAA8B,IAAI,GAAJ,EAA9B;AACA;;AACA,WAAK,UAAL,GAAkB,EAAlB;AACA;;;;AAIG;;AACH,WAAK,oBAAL,GAA4B,gBAA5B;AACA,WAAK,SAAL,GAAiB,QAAjB;AACH;AACD;;;;AAIG;;;;;aACH,oBAAW,QAAX,EAAqB,GAArB,EAA0B,OAA1B,EAAiC;AAC7B,eAAO,KAAK,qBAAL,CAA2B,EAA3B,EAA+B,QAA/B,EAAyC,GAAzC,EAA8C,OAA9C,CAAP;AACH;AACD;;;;AAIG;;;;aACH,2BAAkB,QAAlB,EAA4B,OAA5B,EAAqC,OAArC,EAA4C;AACxC,eAAO,KAAK,4BAAL,CAAkC,EAAlC,EAAsC,QAAtC,EAAgD,OAAhD,EAAyD,OAAzD,CAAP;AACH;AACD;;;;;AAKG;;;;aACH,+BAAsB,SAAtB,EAAiC,QAAjC,EAA2C,GAA3C,EAAgD,OAAhD,EAAuD;AACnD,eAAO,KAAK,iBAAL,CAAuB,SAAvB,EAAkC,QAAlC,EAA4C,IAAI,aAAJ,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,OAA7B,CAA5C,CAAP;AACH;AACD;;;;;;;AAOG;;;;aACH,4BAAmB,QAAnB,EAA2B;AACvB,aAAK,UAAL,CAAgB,IAAhB,CAAqB,QAArB;;AACA,eAAO,IAAP;AACH;AACD;;;;;AAKG;;;;aACH,sCAA6B,SAA7B,EAAwC,QAAxC,EAAkD,OAAlD,EAA2D,OAA3D,EAAkE;AAC9D,YAAM,YAAY,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAyB,+DAAzB,EAA+C,OAA/C,CAArB,CAD8D,CAE9D;;;AACA,YAAI,CAAC,YAAL,EAAmB;AACf,gBAAM,sCAAsC,CAAC,OAAD,CAA5C;AACH;;AACD,eAAO,KAAK,iBAAL,CAAuB,SAAvB,EAAkC,QAAlC,EAA4C,IAAI,aAAJ,CAAkB,EAAlB,EAAsB,YAAtB,EAAoC,OAApC,CAA5C,CAAP;AACH;AACD;;;AAGG;;;;aACH,uBAAc,GAAd,EAAmB,OAAnB,EAA0B;AACtB,eAAO,KAAK,wBAAL,CAA8B,EAA9B,EAAkC,GAAlC,EAAuC,OAAvC,CAAP;AACH;AACD;;;AAGG;;;;aACH,8BAAqB,OAArB,EAA8B,OAA9B,EAAqC;AACjC,eAAO,KAAK,+BAAL,CAAqC,EAArC,EAAyC,OAAzC,EAAkD,OAAlD,CAAP;AACH;AACD;;;;AAIG;;;;aACH,kCAAyB,SAAzB,EAAoC,GAApC,EAAyC,OAAzC,EAAgD;AAC5C,eAAO,KAAK,oBAAL,CAA0B,SAA1B,EAAqC,IAAI,aAAJ,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,OAA7B,CAArC,CAAP;AACH;AACD;;;;AAIG;;;;aACH,yCAAgC,SAAhC,EAA2C,OAA3C,EAAoD,OAApD,EAA2D;AACvD,YAAM,YAAY,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAyB,+DAAzB,EAA+C,OAA/C,CAArB;;AACA,YAAI,CAAC,YAAL,EAAmB;AACf,gBAAM,sCAAsC,CAAC,OAAD,CAA5C;AACH;;AACD,eAAO,KAAK,oBAAL,CAA0B,SAA1B,EAAqC,IAAI,aAAJ,CAAkB,EAAlB,EAAsB,YAAtB,EAAoC,OAApC,CAArC,CAAP;AACH;AACD;;;;;;;AAOG;;;;aACH,gCAAuB,KAAvB,EAA+C;AAAA,YAAjB,SAAiB,uEAAL,KAAK;;AAC3C,aAAK,sBAAL,CAA4B,GAA5B,CAAgC,KAAhC,EAAuC,SAAvC;;AACA,eAAO,IAAP;AACH;AACD;;;AAGG;;;;aACH,+BAAsB,KAAtB,EAA2B;AACvB,eAAO,KAAK,sBAAL,CAA4B,GAA5B,CAAgC,KAAhC,KAA0C,KAAjD;AACH;AACD;;;;;AAKG;;;;aACH,gCAAuB,SAAvB,EAAgC;AAC5B,aAAK,oBAAL,GAA4B,SAA5B;AACA,eAAO,IAAP;AACH;AACD;;;AAGG;;;;aACH,kCAAsB;AAClB,eAAO,KAAK,oBAAZ;AACH;AACD;;;;;;;AAOG;;;;aACH,2BAAkB,OAAlB,EAAyB;AAAA;;AACrB,YAAM,GAAG,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAyB,uEAAzB,EAAuD,OAAvD,CAAZ;;AACA,YAAI,CAAC,GAAL,EAAU;AACN,gBAAM,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACD,YAAM,UAAU,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,CAAnB;;AACA,YAAI,UAAJ,EAAgB;AACZ,iBAAO,wCAAE,CAAC,QAAQ,CAAC,UAAD,CAAT,CAAT;AACH;;AACD,eAAO,KAAK,sBAAL,CAA4B,IAAI,aAAJ,CAAkB,OAAlB,EAA2B,IAA3B,CAA5B,EAA8D,IAA9D,CAAmE,mDAAG,CAAC,aAAG;AAAA,iBAAI,KAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,EAAgC,GAAhC,CAAJ;AAAA,SAAJ,CAAtE,EAAqH,mDAAG,CAAC,aAAG;AAAA,iBAAI,QAAQ,CAAC,GAAD,CAAZ;AAAA,SAAJ,CAAxH,CAAP;AACH;AACD;;;;;;;AAOG;;;;aACH,yBAAgB,IAAhB,EAAoC;AAAA,YAAd,SAAc,uEAAF,EAAE;AAChC,YAAM,GAAG,GAAG,OAAO,CAAC,SAAD,EAAY,IAAZ,CAAnB;;AACA,YAAI,MAAM,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,CAAb,CAFgC,CAGhC;;;AACA,YAAI,MAAJ,EAAY;AACR,iBAAO,KAAK,iBAAL,CAAuB,MAAvB,CAAP;AACH,SAN+B,CAOhC;;;AACA,cAAM,GAAG,KAAK,2BAAL,CAAiC,SAAjC,EAA4C,IAA5C,CAAT;;AACA,YAAI,MAAJ,EAAY;AACR,eAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,EAA8B,MAA9B;;AACA,iBAAO,KAAK,iBAAL,CAAuB,MAAvB,CAAP;AACH,SAZ+B,CAahC;;;AACA,YAAM,cAAc,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAvB;;AACA,YAAI,cAAJ,EAAoB;AAChB,iBAAO,KAAK,yBAAL,CAA+B,IAA/B,EAAqC,cAArC,CAAP;AACH;;AACD,eAAO,gDAAU,CAAC,2BAA2B,CAAC,GAAD,CAA5B,CAAjB;AACH;;;aACD,uBAAW;AACP,aAAK,UAAL,GAAkB,EAAlB;;AACA,aAAK,eAAL,CAAqB,KAArB;;AACA,aAAK,eAAL,CAAqB,KAArB;;AACA,aAAK,iBAAL,CAAuB,KAAvB;AACH;AACD;;AAEG;;;;aACH,2BAAkB,MAAlB,EAAwB;AACpB,YAAI,MAAM,CAAC,OAAX,EAAoB;AAChB;AACA,iBAAO,wCAAE,CAAC,QAAQ,CAAC,KAAK,qBAAL,CAA2B,MAA3B,CAAD,CAAT,CAAT;AACH,SAHD,MAIK;AACD;AACA,iBAAO,KAAK,sBAAL,CAA4B,MAA5B,EAAoC,IAApC,CAAyC,mDAAG,CAAC,aAAG;AAAA,mBAAI,QAAQ,CAAC,GAAD,CAAZ;AAAA,WAAJ,CAA5C,CAAP;AACH;AACJ;AACD;;;;;;;AAOG;;;;aACH,mCAA0B,IAA1B,EAAgC,cAAhC,EAA8C;AAAA;;AAC1C;AACA;AACA,YAAM,SAAS,GAAG,KAAK,8BAAL,CAAoC,IAApC,EAA0C,cAA1C,CAAlB;;AACA,YAAI,SAAJ,EAAe;AACX;AACA;AACA;AACA,iBAAO,wCAAE,CAAC,SAAD,CAAT;AACH,SATyC,CAU1C;AACA;;;AACA,YAAM,oBAAoB,GAAG,cAAc,CACtC,MADwB,CACjB,uBAAa;AAAA,iBAAI,CAAC,aAAa,CAAC,OAAnB;AAAA,SADI,EAExB,GAFwB,CAEpB,uBAAa,EAAG;AACrB,iBAAO,MAAI,CAAC,yBAAL,CAA+B,aAA/B,EAA8C,IAA9C,CAAmD,2DAAU,CAAC,UAAC,GAAD,EAAQ;AACzE,gBAAM,GAAG,GAAG,MAAI,CAAC,UAAL,CAAgB,QAAhB,CAAyB,uEAAzB,EAAuD,aAAa,CAAC,GAArE,CAAZ,CADyE,CAEzE;AACA;;;AACA,gBAAM,YAAY,mCAA4B,GAA5B,sBAA2C,GAAG,CAAC,OAA/C,CAAlB;;AACA,kBAAI,CAAC,aAAL,CAAmB,WAAnB,CAA+B,IAAI,KAAJ,CAAU,YAAV,CAA/B;;AACA,mBAAO,wCAAE,CAAC,IAAD,CAAT;AACH,WAPmE,CAA7D,CAAP;AAQH,SAX4B,CAA7B,CAZ0C,CAwB1C;AACA;;AACA,eAAO,+CAAQ,CAAC,oBAAD,CAAR,CAA+B,IAA/B,CAAoC,mDAAG,CAAC,YAAK;AAChD,cAAM,SAAS,GAAG,MAAI,CAAC,8BAAL,CAAoC,IAApC,EAA0C,cAA1C,CAAlB,CADgD,CAEhD;;;AACA,cAAI,CAAC,SAAL,EAAgB;AACZ,kBAAM,2BAA2B,CAAC,IAAD,CAAjC;AACH;;AACD,iBAAO,SAAP;AACH,SAP6C,CAAvC,CAAP;AAQH;AACD;;;;AAIG;;;;aACH,wCAA+B,QAA/B,EAAyC,cAAzC,EAAuD;AACnD;AACA,aAAK,IAAI,CAAC,GAAG,cAAc,CAAC,MAAf,GAAwB,CAArC,EAAwC,CAAC,IAAI,CAA7C,EAAgD,CAAC,EAAjD,EAAqD;AACjD,cAAM,MAAM,GAAG,cAAc,CAAC,CAAD,CAA7B,CADiD,CAEjD;AACA;AACA;AACA;;AACA,cAAI,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,QAAvB,IAAmC,CAAC,CAA1D,EAA6D;AACzD,gBAAM,GAAG,GAAG,KAAK,qBAAL,CAA2B,MAA3B,CAAZ;;AACA,gBAAM,SAAS,GAAG,KAAK,sBAAL,CAA4B,GAA5B,EAAiC,QAAjC,EAA2C,MAAM,CAAC,OAAlD,CAAlB;;AACA,gBAAI,SAAJ,EAAe;AACX,qBAAO,SAAP;AACH;AACJ;AACJ;;AACD,eAAO,IAAP;AACH;AACD;;;AAGG;;;;aACH,gCAAuB,MAAvB,EAA6B;AAAA;;AACzB,eAAO,KAAK,UAAL,CAAgB,MAAhB,EAAwB,IAAxB,CAA6B,mDAAG,CAAC,iBAAO;AAAA,iBAAI,MAAM,CAAC,OAAP,GAAiB,OAArB;AAAA,SAAR,CAAhC,EAAuE,mDAAG,CAAC;AAAA,iBAAM,MAAI,CAAC,qBAAL,CAA2B,MAA3B,CAAN;AAAA,SAAD,CAA1E,CAAP;AACH;AACD;;;AAGG;;;;aACH,mCAA0B,MAA1B,EAAgC;AAC5B,YAAI,MAAM,CAAC,OAAX,EAAoB;AAChB,iBAAO,wCAAE,CAAC,IAAD,CAAT;AACH;;AACD,eAAO,KAAK,UAAL,CAAgB,MAAhB,EAAwB,IAAxB,CAA6B,mDAAG,CAAC,iBAAO;AAAA,iBAAI,MAAM,CAAC,OAAP,GAAiB,OAArB;AAAA,SAAR,CAAhC,CAAP;AACH;AACD;;;;AAIG;;;;aACH,gCAAuB,OAAvB,EAAgC,QAAhC,EAA0C,OAA1C,EAAiD;AAC7C;AACA;AACA,YAAM,UAAU,GAAG,OAAO,CAAC,aAAR,iBAA8B,QAA9B,SAAnB;;AACA,YAAI,CAAC,UAAL,EAAiB;AACb,iBAAO,IAAP;AACH,SAN4C,CAO7C;AACA;;;AACA,YAAM,WAAW,GAAG,UAAU,CAAC,SAAX,CAAqB,IAArB,CAApB;AACA,mBAAW,CAAC,eAAZ,CAA4B,IAA5B,EAV6C,CAW7C;AACA;;AACA,YAAI,WAAW,CAAC,QAAZ,CAAqB,WAArB,OAAuC,KAA3C,EAAkD;AAC9C,iBAAO,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,OAApC,CAAP;AACH,SAf4C,CAgB7C;AACA;AACA;;;AACA,YAAI,WAAW,CAAC,QAAZ,CAAqB,WAArB,OAAuC,QAA3C,EAAqD;AACjD,iBAAO,KAAK,iBAAL,CAAuB,KAAK,aAAL,CAAmB,WAAnB,CAAvB,EAAwD,OAAxD,CAAP;AACH,SArB4C,CAsB7C;AACA;AACA;AACA;AACA;;;AACA,YAAM,GAAG,GAAG,KAAK,qBAAL,CAA2B,aAA3B,CAAZ,CA3B6C,CA4B7C;;;AACA,WAAG,CAAC,WAAJ,CAAgB,WAAhB;AACA,eAAO,KAAK,iBAAL,CAAuB,GAAvB,EAA4B,OAA5B,CAAP;AACH;AACD;;AAEG;;;;aACH,+BAAsB,GAAtB,EAAyB;AACrB,YAAM,GAAG,GAAG,KAAK,SAAL,CAAe,aAAf,CAA6B,KAA7B,CAAZ;;AACA,WAAG,CAAC,SAAJ,GAAgB,GAAhB;AACA,YAAM,GAAG,GAAG,GAAG,CAAC,aAAJ,CAAkB,KAAlB,CAAZ,CAHqB,CAIrB;;AACA,YAAI,CAAC,GAAL,EAAU;AACN,gBAAM,KAAK,CAAC,qBAAD,CAAX;AACH;;AACD,eAAO,GAAP;AACH;AACD;;AAEG;;;;aACH,uBAAc,OAAd,EAAqB;AACjB,YAAM,GAAG,GAAG,KAAK,qBAAL,CAA2B,aAA3B,CAAZ;;AACA,YAAM,UAAU,GAAG,OAAO,CAAC,UAA3B,CAFiB,CAGjB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,8BAAwB,UAAU,CAAC,CAAD,CAAlC;AAAA,cAAQ,IAAR,iBAAQ,IAAR;AAAA,cAAc,KAAd,iBAAc,KAAd;;AACA,cAAI,IAAI,KAAK,IAAb,EAAmB;AACf,eAAG,CAAC,YAAJ,CAAiB,IAAjB,EAAuB,KAAvB;AACH;AACJ;;AACD,aAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,OAAO,CAAC,UAAR,CAAmB,MAAvC,EAA+C,EAAC,EAAhD,EAAoD;AAChD,cAAI,OAAO,CAAC,UAAR,CAAmB,EAAnB,EAAsB,QAAtB,KAAmC,KAAK,SAAL,CAAe,YAAtD,EAAoE;AAChE,eAAG,CAAC,WAAJ,CAAgB,OAAO,CAAC,UAAR,CAAmB,EAAnB,EAAsB,SAAtB,CAAgC,IAAhC,CAAhB;AACH;AACJ;;AACD,eAAO,GAAP;AACH;AACD;;AAEG;;;;aACH,2BAAkB,GAAlB,EAAuB,OAAvB,EAA8B;AAC1B,WAAG,CAAC,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB;AACA,WAAG,CAAC,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;AACA,WAAG,CAAC,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B;AACA,WAAG,CAAC,YAAJ,CAAiB,qBAAjB,EAAwC,eAAxC;AACA,WAAG,CAAC,YAAJ,CAAiB,WAAjB,EAA8B,OAA9B,EAL0B,CAKc;;AACxC,YAAI,OAAO,IAAI,OAAO,CAAC,OAAvB,EAAgC;AAC5B,aAAG,CAAC,YAAJ,CAAiB,SAAjB,EAA4B,OAAO,CAAC,OAApC;AACH;;AACD,eAAO,GAAP;AACH;AACD;;;AAGG;;;;aACH,oBAAW,UAAX,EAAqB;AAAA;;AACjB,YAAI,EAAJ;;AACA,YAAa,OAAb,GAAkC,UAAlC,CAAQ,GAAR;AAAA,YAAsB,OAAtB,GAAkC,UAAlC,CAAsB,OAAtB;AACA,YAAM,eAAe,GAAG,CAAC,EAAE,GAAG,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,OAAO,CAAC,eAAhE,MAAqF,IAArF,IAA6F,EAAE,KAAK,KAAK,CAAzG,GAA6G,EAA7G,GAAkH,KAA1I;;AACA,YAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,gBAAM,6BAA6B,EAAnC;AACH,SANgB,CAOjB;;;AACA,YAAI,OAAO,IAAI,IAAf,EAAqB;AACjB,gBAAM,KAAK,wCAAgC,OAAhC,SAAX;AACH;;AACD,YAAM,GAAG,GAAG,KAAK,UAAL,CAAgB,QAAhB,CAAyB,uEAAzB,EAAuD,OAAvD,CAAZ,CAXiB,CAYjB;;;AACA,YAAI,CAAC,GAAL,EAAU;AACN,gBAAM,kCAAkC,CAAC,OAAD,CAAxC;AACH,SAfgB,CAgBjB;AACA;AACA;;;AACA,YAAM,eAAe,GAAG,KAAK,qBAAL,CAA2B,GAA3B,CAA+B,GAA/B,CAAxB;;AACA,YAAI,eAAJ,EAAqB;AACjB,iBAAO,eAAP;AACH;;AACD,YAAM,GAAG,GAAG,KAAK,WAAL,CAAiB,GAAjB,CAAqB,GAArB,EAA0B;AAAE,sBAAY,EAAE,MAAhB;AAAwB,yBAAe,EAAf;AAAxB,SAA1B,EAAqE,IAArE,CAA0E,yDAAQ,CAAC;AAAA,iBAAM,MAAI,CAAC,qBAAL,CAA2B,MAA3B,CAAkC,GAAlC,CAAN;AAAA,SAAD,CAAlF,EAAkI,sDAAK,EAAvI,CAAZ;;AACA,aAAK,qBAAL,CAA2B,GAA3B,CAA+B,GAA/B,EAAoC,GAApC;;AACA,eAAO,GAAP;AACH;AACD;;;;;AAKG;;;;aACH,2BAAkB,SAAlB,EAA6B,QAA7B,EAAuC,MAAvC,EAA6C;AACzC,aAAK,eAAL,CAAqB,GAArB,CAAyB,OAAO,CAAC,SAAD,EAAY,QAAZ,CAAhC,EAAuD,MAAvD;;AACA,eAAO,IAAP;AACH;AACD;;;;AAIG;;;;aACH,8BAAqB,SAArB,EAAgC,MAAhC,EAAsC;AAClC,YAAM,eAAe,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAxB;;AACA,YAAI,eAAJ,EAAqB;AACjB,yBAAe,CAAC,IAAhB,CAAqB,MAArB;AACH,SAFD,MAGK;AACD,eAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,EAAoC,CAAC,MAAD,CAApC;AACH;;AACD,eAAO,IAAP;AACH;AACD;;;;aACA,+BAAsB,MAAtB,EAA4B;AACxB,YAAI,CAAC,MAAM,CAAC,UAAZ,EAAwB;AACpB,cAAM,GAAG,GAAG,KAAK,qBAAL,CAA2B,MAAM,CAAC,OAAlC,CAAZ;;AACA,eAAK,iBAAL,CAAuB,GAAvB,EAA4B,MAAM,CAAC,OAAnC;;AACA,gBAAM,CAAC,UAAP,GAAoB,GAApB;AACH;;AACD,eAAO,MAAM,CAAC,UAAd;AACH;AACD;;;;aACA,qCAA4B,SAA5B,EAAuC,IAAvC,EAA2C;AACvC,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,UAAL,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,cAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,CAAhB,EAAmB,IAAnB,EAAyB,SAAzB,CAAf;;AACA,cAAI,MAAJ,EAAY;AACR,mBAAO,oBAAoB,CAAC,MAAD,CAApB,GACH,IAAI,aAAJ,CAAkB,MAAM,CAAC,GAAzB,EAA8B,IAA9B,EAAoC,MAAM,CAAC,OAA3C,CADG,GAEH,IAAI,aAAJ,CAAkB,MAAlB,EAA0B,IAA1B,CAFJ;AAGH;AACJ;;AACD,eAAO,SAAP;AACH;;;;;;AAEL,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,EAA2B,uDAAgB,6DAAhB,EAAmC,CAAnC,CAA3B,EAAkE,uDAAgB,oEAAhB,CAAlE,EAAwG,uDAAgB,sDAAhB,EAA0B,CAA1B,CAAxG,EAAsI,uDAAgB,uDAAhB,CAAtI,CAAP;AAAqL,GAAlP;;AACA,iBAAe,CAAC,KAAhB,GAAqB,aAAG,iEAAsB;AAAE,WAAO,EAAE,SAAS,uBAAT,GAAgC;AAAK,aAAO,IAAI,eAAJ,CAAoB,uDAAY,6DAAZ,EAA2B,CAA3B,CAApB,EAAmD,uDAAY,oEAAZ,CAAnD,EAAiF,uDAAY,sDAAZ,EAAyB,CAAzB,CAAjF,EAA8G,uDAAY,uDAAZ,CAA9G,CAAP;AAAqJ,KAArM;AAAuM,SAAK,EAAE,eAA9M;AAA+N,cAAU,EAAE;AAA3O,GAAtB,CAAxB;;;AAkBA;;;AACA,SAAS,8BAAT,CAAwC,cAAxC,EAAwD,UAAxD,EAAoE,SAApE,EAA+E,YAA/E,EAA6F,QAA7F,EAAqG;AACjG,SAAO,cAAc,IAAI,IAAI,eAAJ,CAAoB,UAApB,EAAgC,SAAhC,EAA2C,QAA3C,EAAqD,YAArD,CAAzB;AACH;AACD;;;AACA,IAAM,sBAAsB,GAAG;AAC3B;AACA,SAAO,EAAE,eAFkB;AAG3B,MAAI,EAAE,CACF,cAAC,IAAI,mDAAJ,EAAD,EAAe,aAAE,IAAI,mDAAJ,EAAjB,EAAiC,eAAjC,CADE,EAEF,cAAC,IAAI,mDAAJ,EAAD,EAAiB,6DAAjB,CAFE,EAGF,oEAHE,EAIF,uDAJE,EAKF,cAAC,IAAI,mDAAJ,EAAD,EAAiB,sDAAjB,CALE,CAHqB;AAU3B,YAAU,EAAE;AAVe,CAA/B;AAYA;;AACA,SAAS,QAAT,CAAkB,GAAlB,EAAqB;AACjB,SAAO,GAAG,CAAC,SAAJ,CAAc,IAAd,CAAP;AACH;AACD;;;AACA,SAAS,OAAT,CAAiB,SAAjB,EAA4B,IAA5B,EAAgC;AAC5B,SAAO,SAAS,GAAG,GAAZ,GAAkB,IAAzB;AACH;;AACD,SAAS,oBAAT,CAA8B,KAA9B,EAAmC;AAC/B,SAAO,CAAC,EAAE,KAAK,CAAC,GAAN,IAAa,KAAK,CAAC,OAArB,CAAR;AACH;AAED;;;;;;AAMG;AACH;;AACA;;;AACA,IAAM,YAAY,gBAAG,mEAAU;AAC3B,kBAAY,WAAZ,EAAuB;AAAA;;AACnB,SAAK,WAAL,GAAmB,WAAnB;AACH;;AAH0B;AAAA,IAA/B;AAKA;;;;AAIG;;;AACH,IAAM,iBAAiB,gBAAG,IAAI,yDAAJ,CAAmB,mBAAnB,EAAwC;AAC9D,YAAU,EAAE,MADkD;AAE9D,SAAO,EAAE;AAFqD,CAAxC,CAA1B;AAIA;;AACA,SAAS,yBAAT,GAAkC;AAC9B,MAAM,SAAS,GAAG,qDAAM,CAAC,sDAAD,CAAxB;;AACA,MAAM,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC,QAAb,GAAwB,IAAnD;;AACA,SAAO;AACH;AACA;AACA,eAAW,EAAE;AAAA,aAAM,SAAS,GAAI,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,MAAnC,GAA6C,EAA5D;AAAA;AAHV,GAAP;AAKH;AACD;;;AACA,IAAM,iBAAiB,GAAG,CACtB,WADsB,EAEtB,eAFsB,EAGtB,KAHsB,EAItB,QAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,cARsB,EAStB,YATsB,EAUtB,YAVsB,EAWtB,MAXsB,EAYtB,QAZsB,CAA1B;;AAcA,IAAM,EAAE,GAAG,SAAL,EAAK,KAAI;AAAA,oBAAQ,IAAR;AAAA,CAAf;AACA;;;AACA,IAAM,wBAAwB;AAAA;;AAAG;AAAA,iBAAiB,CAAC,GAAlB,CAAsB,EAAtB,EAA0B,IAA1B,CAA+B,IAA/B,CAAjC;AACA;;AACA,IAAM,cAAc,GAAG,2BAAvB;;;MA4BM,O;;;;;AACF,qBAAY,UAAZ,EAAwB,aAAxB,EAAuC,UAAvC,EAAmD,SAAnD,EAA8D,aAA9D,EAA2E;AAAA;;AAAA;;AACvE,iCAAM,UAAN;AACA,aAAK,aAAL,GAAqB,aAArB;AACA,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,aAAL,GAAqB,aAArB;AACA,aAAK,OAAL,GAAe,KAAf;AACA;;AACA,aAAK,iBAAL,GAAyB,qDAAzB,CAPuE,CAQvE;AACA;;AACA,UAAI,CAAC,UAAL,EAAiB;AACb,kBAAU,CAAC,aAAX,CAAyB,YAAzB,CAAsC,aAAtC,EAAqD,MAArD;AACH;;AAZsE;AAa1E;AACD;;;AAGG;;;;;WACH,eAAU;AACN,eAAO,KAAK,OAAZ;AACH,O;WACD,aAAW,MAAX,EAAiB;AACb,aAAK,OAAL,GAAe,6EAAqB,CAAC,MAAD,CAApC;AACH;AACD;;;;WACA,eAAW;AAAK,eAAO,KAAK,QAAZ;AAAuB,O;WACvC,aAAY,KAAZ,EAAiB;AACb,YAAI,KAAK,KAAK,KAAK,QAAnB,EAA6B;AACzB,cAAI,KAAJ,EAAW;AACP,iBAAK,cAAL,CAAoB,KAApB;AACH,WAFD,MAGK,IAAI,KAAK,QAAT,EAAmB;AACpB,iBAAK,gBAAL;AACH;;AACD,eAAK,QAAL,GAAgB,KAAhB;AACH;AACJ;AACD;;;;WACA,eAAW;AAAK,eAAO,KAAK,QAAZ;AAAuB,O;WACvC,aAAY,KAAZ,EAAiB;AACb,YAAM,QAAQ,GAAG,KAAK,iBAAL,CAAuB,KAAvB,CAAjB;;AACA,YAAI,QAAQ,KAAK,KAAK,QAAtB,EAAgC;AAC5B,eAAK,QAAL,GAAgB,QAAhB;;AACA,eAAK,sBAAL;AACH;AACJ;AACD;;;;WACA,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AACd,YAAM,QAAQ,GAAG,KAAK,iBAAL,CAAuB,KAAvB,CAAjB;;AACA,YAAI,QAAQ,KAAK,KAAK,SAAtB,EAAiC;AAC7B,eAAK,SAAL,GAAiB,QAAjB;;AACA,eAAK,sBAAL;AACH;AACJ;AACD;;;;;;;;;;;;AAYG;;;;aACH,wBAAe,QAAf,EAAuB;AACnB,YAAI,CAAC,QAAL,EAAe;AACX,iBAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACH;;AACD,YAAM,KAAK,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAd;;AACA,gBAAQ,KAAK,CAAC,MAAd;AACI,eAAK,CAAL;AAAQ,mBAAO,CAAC,EAAD,EAAK,KAAK,CAAC,CAAD,CAAV,CAAP;AAAuB;;AAC/B,eAAK,CAAL;AAAQ,mBAAO,KAAP;;AACR;AAAS,kBAAM,KAAK,gCAAwB,QAAxB,QAAX;AAAiD;AAH9D;AAKH;;;aACD,oBAAQ;AACJ;AACA;AACA,aAAK,sBAAL;AACH;;;aACD,8BAAkB;AACd,YAAM,cAAc,GAAG,KAAK,+BAA5B;;AACA,YAAI,cAAc,IAAI,cAAc,CAAC,IAArC,EAA2C;AACvC,cAAM,OAAO,GAAG,KAAK,SAAL,CAAe,WAAf,EAAhB,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAI,OAAO,KAAK,KAAK,aAArB,EAAoC;AAChC,iBAAK,aAAL,GAAqB,OAArB;;AACA,iBAAK,wBAAL,CAA8B,OAA9B;AACH;AACJ;AACJ;;;aACD,uBAAW;AACP,aAAK,iBAAL,CAAuB,WAAvB;;AACA,YAAI,KAAK,+BAAT,EAA0C;AACtC,eAAK,+BAAL,CAAqC,KAArC;AACH;AACJ;;;aACD,0BAAc;AACV,eAAO,CAAC,KAAK,OAAb;AACH;;;aACD,wBAAe,GAAf,EAAkB;AACd,aAAK,gBAAL,GADc,CAEd;AACA;AACA;;;AACA,YAAM,SAAS,GAAG,GAAG,CAAC,gBAAJ,CAAqB,OAArB,CAAlB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACvC,mBAAS,CAAC,CAAD,CAAT,CAAa,WAAb,IAA4B,GAA5B;AACH,SARa,CASd;AACA;;;AACA,YAAM,IAAI,GAAG,KAAK,SAAL,CAAe,WAAf,EAAb;;AACA,aAAK,aAAL,GAAqB,IAArB;;AACA,aAAK,oCAAL,CAA0C,GAA1C;;AACA,aAAK,wBAAL,CAA8B,IAA9B;;AACA,aAAK,WAAL,CAAiB,aAAjB,CAA+B,WAA/B,CAA2C,GAA3C;AACH;;;aACD,4BAAgB;AACZ,YAAM,aAAa,GAAG,KAAK,WAAL,CAAiB,aAAvC;AACA,YAAI,UAAU,GAAG,aAAa,CAAC,UAAd,CAAyB,MAA1C;;AACA,YAAI,KAAK,+BAAT,EAA0C;AACtC,eAAK,+BAAL,CAAqC,KAArC;AACH,SALW,CAMZ;AACA;;;AACA,eAAO,UAAU,EAAjB,EAAqB;AACjB,cAAM,KAAK,GAAG,aAAa,CAAC,UAAd,CAAyB,UAAzB,CAAd,CADiB,CAEjB;AACA;;AACA,cAAI,KAAK,CAAC,QAAN,KAAmB,CAAnB,IAAwB,KAAK,CAAC,QAAN,CAAe,WAAf,OAAiC,KAA7D,EAAoE;AAChE,yBAAa,CAAC,WAAd,CAA0B,KAA1B;AACH;AACJ;AACJ;;;aACD,kCAAsB;AAClB,YAAI,CAAC,KAAK,cAAL,EAAL,EAA4B;AACxB;AACH;;AACD,YAAM,IAAI,GAAG,KAAK,WAAL,CAAiB,aAA9B;AACA,YAAM,YAAY,GAAG,KAAK,OAAL,GACjB,KAAK,aAAL,CAAmB,qBAAnB,CAAyC,KAAK,OAA9C,CADiB,GAEjB,KAAK,aAAL,CAAmB,sBAAnB,EAFJ;;AAGA,YAAI,YAAY,IAAI,KAAK,qBAAzB,EAAgD;AAC5C,cAAI,KAAK,qBAAT,EAAgC;AAC5B,gBAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,KAAK,qBAA3B;AACH;;AACD,cAAI,YAAJ,EAAkB;AACd,gBAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,YAAnB;AACH;;AACD,eAAK,qBAAL,GAA6B,YAA7B;AACH;;AACD,YAAI,KAAK,QAAL,IAAiB,KAAK,sBAA1B,EAAkD;AAC9C,cAAI,KAAK,sBAAT,EAAiC;AAC7B,gBAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,KAAK,sBAA3B;AACH;;AACD,cAAI,KAAK,QAAT,EAAmB;AACf,gBAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,KAAK,QAAxB;AACH;;AACD,eAAK,sBAAL,GAA8B,KAAK,QAAnC;AACH;AACJ;AACD;;;;AAIG;;;;aACH,2BAAkB,KAAlB,EAAuB;AACnB,eAAO,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAAK,CAAC,IAAN,GAAa,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAA5B,GAAyD,KAAhE;AACH;AACD;;;;AAIG;;;;aACH,kCAAyB,IAAzB,EAA6B;AACzB,YAAM,QAAQ,GAAG,KAAK,+BAAtB;;AACA,YAAI,QAAJ,EAAc;AACV,kBAAQ,CAAC,OAAT,CAAiB,UAAC,KAAD,EAAQ,OAAR,EAAmB;AAChC,iBAAK,CAAC,OAAN,CAAc,cAAI,EAAG;AACjB,qBAAO,CAAC,YAAR,CAAqB,IAAI,CAAC,IAA1B,iBAAwC,IAAxC,cAAgD,IAAI,CAAC,KAArD;AACH,aAFD;AAGH,WAJD;AAKH;AACJ;AACD;;;AAGG;;;;aACH,8CAAqC,OAArC,EAA4C;AACxC,YAAM,mBAAmB,GAAG,OAAO,CAAC,gBAAR,CAAyB,wBAAzB,CAA5B;AACA,YAAM,QAAQ,GAAG,KAAK,+BAAL,GACb,KAAK,+BAAL,IAAwC,IAAI,GAAJ,EAD5C;;AAFwC,mCAI/B,CAJ+B;AAKpC,2BAAiB,CAAC,OAAlB,CAA0B,cAAI,EAAG;AAC7B,gBAAM,oBAAoB,GAAG,mBAAmB,CAAC,CAAD,CAAhD;AACA,gBAAM,KAAK,GAAG,oBAAoB,CAAC,YAArB,CAAkC,IAAlC,CAAd;AACA,gBAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,cAAZ,CAAH,GAAiC,IAApD;;AACA,gBAAI,KAAJ,EAAW;AACP,kBAAI,UAAU,GAAG,QAAQ,CAAC,GAAT,CAAa,oBAAb,CAAjB;;AACA,kBAAI,CAAC,UAAL,EAAiB;AACb,0BAAU,GAAG,EAAb;AACA,wBAAQ,CAAC,GAAT,CAAa,oBAAb,EAAmC,UAAnC;AACH;;AACD,wBAAU,CAAC,IAAX,CAAgB;AAAE,oBAAI,EAAE,IAAR;AAAc,qBAAK,EAAE,KAAK,CAAC,CAAD;AAA1B,eAAhB;AACH;AACJ,WAZD;AALoC;;AAIxC,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,mBAAmB,CAAC,MAAxC,EAAgD,CAAC,EAAjD,EAAqD;AAAA,gBAA5C,CAA4C;AAcpD;AACJ;AACD;;;;aACA,wBAAe,OAAf,EAAsB;AAAA;;AAClB,aAAK,aAAL,GAAqB,IAArB;AACA,aAAK,QAAL,GAAgB,IAAhB;;AACA,aAAK,iBAAL,CAAuB,WAAvB;;AACA,YAAI,OAAJ,EAAa;AACT,qCAA8B,KAAK,cAAL,CAAoB,OAApB,CAA9B;AAAA;AAAA,cAAO,SAAP;AAAA,cAAkB,QAAlB;;AACA,cAAI,SAAJ,EAAe;AACX,iBAAK,aAAL,GAAqB,SAArB;AACH;;AACD,cAAI,QAAJ,EAAc;AACV,iBAAK,QAAL,GAAgB,QAAhB;AACH;;AACD,eAAK,iBAAL,GAAyB,KAAK,aAAL,CAAmB,eAAnB,CAAmC,QAAnC,EAA6C,SAA7C,EACpB,IADoB,CACf,qDAAI,CAAC,CAAD,CADW,EAEpB,SAFoB,CAEV,aAAG;AAAA,mBAAI,MAAI,CAAC,cAAL,CAAoB,GAApB,CAAJ;AAAA,WAFO,EAEuB,UAAC,GAAD,EAAQ;AACpD,gBAAM,YAAY,mCAA4B,SAA5B,cAAyC,QAAzC,eAAsD,GAAG,CAAC,OAA1D,CAAlB;;AACA,kBAAI,CAAC,aAAL,CAAmB,WAAnB,CAA+B,IAAI,KAAJ,CAAU,YAAV,CAA/B;AACH,WALwB,CAAzB;AAMH;AACJ;;;;IA9OiB,Y;;AAgPtB,SAAO,CAAC,IAAR,GAAe,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,WAAO,KAAK,CAAC,IAAI,OAAV,EAAmB,gEAAyB,qDAAzB,CAAnB,EAAgE,gEAAyB,eAAzB,CAAhE,EAA2G,gEAAyB,aAAzB,CAA3G,EAAoJ,gEAAyB,iBAAzB,CAApJ,EAAiM,gEAAyB,uDAAzB,CAAjM,CAAP;AAAyP,GAAtS;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,UAAnB,EAA+B,aAA/B,CAAvD;AAAsG,YAAQ,EAAE,CAAhH;AAAmH,gBAAY,EAAE,SAAS,oBAAT,CAA8B,EAA9B,EAAkC,GAAlC,EAAqC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACpO,kEAAmB,oBAAnB,EAAyC,GAAG,CAAC,cAAJ,KAAuB,MAAvB,GAAgC,KAAzE,EAAgF,oBAAhF,EAAsG,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,QAA1H,EAAoI,yBAApI,EAA+J,GAAG,CAAC,aAAJ,IAAqB,GAAG,CAAC,OAAxL;AACA,kEAAmB,iBAAnB,EAAsC,GAAG,CAAC,MAA1C,EAAkD,mBAAlD,EAAuE,GAAG,CAAC,KAAJ,KAAc,SAAd,IAA2B,GAAG,CAAC,KAAJ,KAAc,QAAzC,IAAqD,GAAG,CAAC,KAAJ,KAAc,MAA1I;AACH;AAAE,KAH+C;AAG7C,UAAM,EAAE;AAAE,WAAK,EAAE,OAAT;AAAkB,YAAM,EAAE,QAA1B;AAAoC,aAAO,EAAE,SAA7C;AAAwD,aAAO,EAAE,SAAjE;AAA4E,cAAQ,EAAE;AAAtF,KAHqC;AAG+D,YAAQ,EAAE,CAAC,SAAD,CAHzE;AAGsF,YAAQ,EAAE,CAAC,wEAAD,CAHhG;AAGqI,sBAAkB,EAAE,GAHzJ;AAG8J,SAAK,EAAE,CAHrK;AAGwK,QAAI,EAAE,CAH9K;AAGiL,YAAQ,EAAE,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,GAA9B,EAAiC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC1R;AACA,mEAAoB,CAApB;AACH;AAAE,KAN+C;AAM7C,UAAM,EAAE,CAAC,upBAAD,CANqC;AAMsnB,iBAAa,EAAE,CANroB;AAMwoB,mBAAe,EAAE;AANzpB,GAAzB,CAA7B;;;;;MA+DM,a;;;;AAEN,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,GAAP;AAAoC,GAA7F;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAnC;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAAC,oEAAD,CAAD,EAAoB,oEAApB;AAAX,GAAxB,CAAnC;;;AASA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,aAA1B,EAAyC;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,OAAD,CAAP;AAAmB,KAAjD;AAAmD,WAAO,EAAE;AAAc,aAAO,CAAC,oEAAD,CAAP;AAA2B,KAArG;AAAuG,WAAO,EAAE;AAAc,aAAO,CAAC,OAAD,EAAU,oEAAV,CAAP;AAAoC;AAAlK,GAAzC,CAAnD;AAAoQ,CAAnR;AAEA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACt+BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;;AAIG;;AACH;AACA;AACA;AACA;AACA;AACA;;;MACM,mB;;;;;;;;;;;;;WACF,eAAsB;AAAK,eAAO,KAAK,OAAZ;AAAsB,O;WACjD,aAAuB,KAAvB,EAA4B;AAAI,aAAK,OAAL,GAAe,KAAf;AAAuB;;;WACvD,eAAsB;AAAK,eAAO,KAAK,OAAZ;AAAsB,O;WACjD,aAAuB,KAAvB,EAA4B;AAAI,aAAK,OAAL,GAAe,KAAf;AAAuB;;;WACvD,eAAe;AAAK,eAAO,KAAK,OAAZ;AAAsB,O;WAC1C,aAAgB,KAAhB,EAAqB;AAAI,aAAK,OAAL,GAAe,KAAf;AAAuB;;;WAChD,eAAuB;AAAK,eAAO,KAAK,OAAZ;AAAsB,O;WAClD,aAAwB,KAAxB,EAA6B;AAAI,aAAK,OAAL,GAAe,KAAf;AAAuB;;;;IAR1B,wE;;AAUlC,qBAAmB,CAAC,IAApB;AAA2B;;AAAa;AAAC;AAAc,QAAI,gCAAJ;AAAsC,WAAO,SAAS,2BAAT,CAAqC,CAArC,EAAsC;AAAI,aAAO,CAAC,gCAAgC,KAAK,gCAAgC,GAAG,oEAA6B,mBAA7B,CAAxC,CAAjC,EAA6H,CAAC,IAAI,mBAAlI,CAAP;AAAgK,KAAjN;AAAoN,GAAxQ,EAAzC;;AACA,qBAAmB,CAAC,IAApB;AAA2B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,mBAAR;AAA6B,aAAS,EAAE,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAnC,CAAxC;AAAqH,aAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,EAA0C,cAA1C,CAAhI;AAA2L,UAAM,EAAE;AAAE,wBAAkB,EAAE,oBAAtB;AAA4C,wBAAkB,EAAE,oBAAhE;AAAsF,wBAAkB,EAAE,oBAA1G;AAAgI,wBAAkB,EAAE,oBAApJ;AAA0K,iBAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvL;AAAwN,yBAAmB,EAAE;AAA7O,KAAnM;AAAyc,YAAQ,EAAE,CAAC,qBAAD,CAAnd;AAA4e,YAAQ,EAAE,CAAC,wEAAD;AAAtf,GAAzB,CAAzC;;;AA+BA;;;;;;AAMG;;AACH;;;AACA,SAAS,+BAAT,CAAyC,IAAzC,EAA6C;AACzC,SAAO,KAAK,wBAAgB,IAAhB,qCAAZ;AACH;AAED;;;;;;AAMG;;AACH;;;;;AAKG;;;AACH,IAAM,wBAAwB,gBAAG,IAAI,yDAAJ,CAAmB,0BAAnB,CAAjC;AAEA;;;;;;AAMG;AACH;;AACA,IAAM,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA,IAAI,YAAY,GAAG,CAAnB,C,CACA;;AACA;;AACA,IAAM,aAAa,gBAAG,uEAAe;AACjC,kBAAY,yBAAZ,EAAuC,WAAvC,EAAoD,gBAApD;AACA;AACA,WAFA,EAES;AAAA;;AACL,SAAK,yBAAL,GAAiC,yBAAjC;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACH;;AARgC;AAAA,IAArC;;;MAWM,Q;;;;;AACF,sBAAY,WAAZ,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,WAA/C,EAA4D,gBAA5D,EAA8E,yBAA9E,EAAyG,kBAAzG,EAA6H,gBAA7H,EAA+I,MAA/I,EACA;AACA;AACA,cAHA,EAGU;AAAA;;AAAA;;AACN,iCAAM,yBAAN,EAAiC,WAAjC,EAA8C,gBAA9C,EAAgE,SAAhE;AACA,YAAK,WAAL,GAAmB,WAAnB;AACA,YAAK,SAAL,GAAiB,SAAjB;AACA,YAAK,gBAAL,GAAwB,gBAAxB;AACA,YAAK,UAAL,GAAkB,UAAlB;AACA,YAAK,IAAL,uBAAyB,YAAY,EAArC;AACA;;;AAGG;;AACH,YAAK,OAAL,GAAe,KAAf;AACA;;;AAGG;;AACH,YAAK,YAAL,GAAoB,IAAI,yCAAJ,EAApB;AACA;;;AAGG;;AACH,YAAK,WAAL,GAAmB,WAAnB;AACA;;;AAGG;;AACH,YAAK,UAAL,GAAkB,KAAlB;AACA,YAAK,SAAL,GAAiB,KAAjB;AACA,YAAK,SAAL,GAAiB,KAAjB;AACA,YAAK,KAAL,GAAa,MAAb;AACA,YAAK,SAAL,GAAiB,KAAjB;AACA,YAAK,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3B,MAP2B,CAOpB,WAAC;AAAA,eAAI,6EAAsB,GAAG,GAAzB,CAA6B,CAA7B,CAAJ;AAAA,OAPmB,CAA7B;AAQA,UAAM,OAAO,GAAG,MAAK,WAAL,CAAiB,aAAjC;AACA,UAAM,QAAQ,GAAG,OAAO,CAAC,QAAR,CAAiB,WAAjB,EAAjB,CAxCM,CAyCN;AACA;;AACA,YAAK,mBAAL,GAA2B,kBAAkB,IAAI,OAAjD;AACA,YAAK,oBAAL,GAA4B,MAAK,KAAjC,CA5CM,CA6CN;;AACA,YAAK,EAAL,GAAU,MAAK,EAAf,CA9CM,CA+CN;AACA;AACA;;AACA,UAAI,SAAS,CAAC,GAAd,EAAmB;AACf,cAAM,CAAC,iBAAP,CAAyB,YAAK;AAC1B,qBAAW,CAAC,aAAZ,CAA0B,gBAA1B,CAA2C,OAA3C,EAAoD,UAAC,KAAD,EAAU;AAC1D,gBAAM,EAAE,GAAG,KAAK,CAAC,MAAjB,CAD0D,CAE1D;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAI,CAAC,EAAE,CAAC,KAAJ,IAAa,EAAE,CAAC,cAAH,KAAsB,CAAnC,IAAwC,EAAE,CAAC,YAAH,KAAoB,CAAhE,EAAmE;AAC/D;AACA;AACA;AACA;AACA,gBAAE,CAAC,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACA,gBAAE,CAAC,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,WAhBD;AAiBH,SAlBD;AAmBH;;AACD,YAAK,SAAL,GAAiB,CAAC,MAAK,SAAL,CAAe,SAAjC;AACA,YAAK,eAAL,GAAuB,QAAQ,KAAK,QAApC;AACA,YAAK,WAAL,GAAmB,QAAQ,KAAK,UAAhC;AACA,YAAK,cAAL,GAAsB,CAAC,CAAC,UAAxB;;AACA,UAAI,MAAK,eAAT,EAA0B;AACtB,cAAK,WAAL,GAAmB,OAAO,CAAC,QAAR,GAAmB,4BAAnB,GACf,mBADJ;AAEH;;AA9EK;AA+ET;AACD;;;AAGG;;;;;WACH,eAAY;AACR,YAAI,KAAK,SAAL,IAAkB,KAAK,SAAL,CAAe,QAAf,KAA4B,IAAlD,EAAwD;AACpD,iBAAO,KAAK,SAAL,CAAe,QAAtB;AACH;;AACD,eAAO,KAAK,SAAZ;AACH,O;WACD,aAAa,KAAb,EAAkB;AACd,aAAK,SAAL,GAAiB,4EAAqB,CAAC,KAAD,CAAtC,CADc,CAEd;AACA;;AACA,YAAI,KAAK,OAAT,EAAkB;AACd,eAAK,OAAL,GAAe,KAAf;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;;AAGG;;;;WACH,eAAM;AAAK,eAAO,KAAK,GAAZ;AAAkB,O;WAC7B,aAAO,KAAP,EAAY;AAAI,aAAK,GAAL,GAAW,KAAK,IAAI,KAAK,IAAzB;AAAgC;AAChD;;;AAGG;;;;WACH,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AAAI,aAAK,SAAL,GAAiB,4EAAqB,CAAC,KAAD,CAAtC;AAAgD;AACtE;;;;WACA,eAAQ;AAAK,eAAO,KAAK,KAAZ;AAAoB,O;WACjC,aAAS,KAAT,EAAc;AACV,aAAK,KAAL,GAAa,KAAK,IAAI,MAAtB;;AACA,aAAK,aAAL,GAFU,CAGV;AACA;AACA;;;AACA,YAAI,CAAC,KAAK,WAAN,IAAqB,6EAAsB,GAAG,GAAzB,CAA6B,KAAK,KAAlC,CAAzB,EAAmE;AAC/D,eAAK,WAAL,CAAiB,aAAjB,CAA+B,IAA/B,GAAsC,KAAK,KAA3C;AACH;AACJ;AACD;;;AAGG;;;;WACH,eAAS;AAAK,eAAO,KAAK,mBAAL,CAAyB,KAAhC;AAAwC,O;WACtD,aAAU,KAAV,EAAe;AACX,YAAI,KAAK,KAAK,KAAK,KAAnB,EAA0B;AACtB,eAAK,mBAAL,CAAyB,KAAzB,GAAiC,KAAjC;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;;;WACA,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AAAI,aAAK,SAAL,GAAiB,4EAAqB,CAAC,KAAD,CAAtC;AAAgD;;;aACtE,2BAAe;AAAA;;AACX,YAAI,KAAK,SAAL,CAAe,SAAnB,EAA8B;AAC1B,eAAK,gBAAL,CAAsB,OAAtB,CAA8B,KAAK,WAAL,CAAiB,aAA/C,EAA8D,SAA9D,CAAwE,eAAK,EAAG;AAC5E,kBAAI,CAAC,UAAL,GAAkB,KAAK,CAAC,YAAxB;;AACA,kBAAI,CAAC,YAAL,CAAkB,IAAlB;AACH,WAHD;AAIH;AACJ;;;aACD,uBAAW;AACP,aAAK,YAAL,CAAkB,IAAlB;AACH;;;aACD,uBAAW;AACP,aAAK,YAAL,CAAkB,QAAlB;;AACA,YAAI,KAAK,SAAL,CAAe,SAAnB,EAA8B;AAC1B,eAAK,gBAAL,CAAsB,cAAtB,CAAqC,KAAK,WAAL,CAAiB,aAAtD;AACH;AACJ;;;aACD,qBAAS;AACL,YAAI,KAAK,SAAT,EAAoB;AAChB;AACA;AACA;AACA,eAAK,gBAAL;AACH,SANI,CAOL;AACA;AACA;;;AACA,aAAK,sBAAL,GAVK,CAWL;AACA;;;AACA,aAAK,sBAAL;AACH;AACD;;;;aACA,eAAM,OAAN,EAAa;AACT,aAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B,CAAqC,OAArC;AACH,O,CACD;AACA;AACA;AACA;;AACA;AACA;AACA;;;;aACA,uBAAc,SAAd,EAAuB;AACnB,YAAI,SAAS,KAAK,KAAK,OAAnB,KAA+B,CAAC,KAAK,QAAN,IAAkB,CAAC,SAAlD,CAAJ,EAAkE;AAC9D,eAAK,OAAL,GAAe,SAAf;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ,O,CACD;AACA;AACA;AACA;AACA;;;;aACA,oBAAQ,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD;;;;aACA,kCAAsB;AAClB,YAAI,EAAJ,EAAQ,EAAR,CADkB,CAElB;AACA;AACA;AACA;;;AACA,YAAM,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,UAAX,MAA2B,IAA3B,IAAmC,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4D,EAAE,CAAC,uBAArE,MAAkG,IAAlG,IAA0G,EAAE,KAAK,KAAK,CAAtH,GAA0H,KAAK,CAA/H,GAAmI,EAAE,CAAC,IAAH,CAAQ,EAAR,CAApI,IAAmJ,IAAnJ,GAA0J,KAAK,WAAnL;;AACA,YAAI,WAAW,KAAK,KAAK,oBAAzB,EAA+C;AAC3C,cAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,aAAjC;AACA,eAAK,oBAAL,GAA4B,WAA5B;AACA,qBAAW,GACP,OAAO,CAAC,YAAR,CAAqB,aAArB,EAAoC,WAApC,CADO,GAC4C,OAAO,CAAC,eAAR,CAAwB,aAAxB,CADvD;AAEH;AACJ;AACD;;;;aACA,kCAAsB;AAClB,YAAM,QAAQ,GAAG,KAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAhD;;AACA,YAAI,KAAK,oBAAL,KAA8B,QAAlC,EAA4C;AACxC,eAAK,oBAAL,GAA4B,QAA5B;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;;;aACA,yBAAa;AACT,YAAI,uBAAuB,CAAC,OAAxB,CAAgC,KAAK,KAArC,IAA8C,CAAC,CAA/C,KACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,gBAAM,+BAA+B,CAAC,KAAK,KAAN,CAArC;AACH;AACJ;AACD;;;;aACA,yBAAa;AACT,eAAO,KAAK,qBAAL,CAA2B,OAA3B,CAAmC,KAAK,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;;aACA,uBAAW;AACP;AACA,YAAI,QAAQ,GAAG,KAAK,WAAL,CAAiB,aAAjB,CAA+B,QAA9C;AACA,eAAO,QAAQ,IAAI,QAAQ,CAAC,QAA5B;AACH;AACD;;;AAGG;;;;WACH,eAAS;AACL,eAAO,CAAC,KAAK,aAAL,EAAD,IAAyB,CAAC,KAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAzD,IAAkE,CAAC,KAAK,WAAL,EAAnE,IACH,CAAC,KAAK,UADV;AAEH;AACD;;;AAGG;;;;WACH,eAAoB;AAChB,YAAI,KAAK,eAAT,EAA0B;AACtB;AACA;AACA;AACA,cAAM,aAAa,GAAG,KAAK,WAAL,CAAiB,aAAvC;AACA,cAAM,WAAW,GAAG,aAAa,CAAC,OAAd,CAAsB,CAAtB,CAApB,CALsB,CAMtB;AACA;;AACA,iBAAO,KAAK,OAAL,IAAgB,aAAa,CAAC,QAA9B,IAA0C,CAAC,KAAK,KAAhD,IACH,CAAC,EAAE,aAAa,CAAC,aAAd,GAA8B,CAAC,CAA/B,IAAoC,WAApC,IAAmD,WAAW,CAAC,KAAjE,CADL;AAEH,SAVD,MAWK;AACD,iBAAO,KAAK,OAAL,IAAgB,CAAC,KAAK,KAA7B;AACH;AACJ;AACD;;;AAGG;;;;aACH,2BAAkB,GAAlB,EAAqB;AACjB,YAAI,GAAG,CAAC,MAAR,EAAgB;AACZ,eAAK,WAAL,CAAiB,aAAjB,CAA+B,YAA/B,CAA4C,kBAA5C,EAAgE,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAhE;AACH,SAFD,MAGK;AACD,eAAK,WAAL,CAAiB,aAAjB,CAA+B,eAA/B,CAA+C,kBAA/C;AACH;AACJ;AACD;;;AAGG;;;;aACH,4BAAgB;AACZ;AACA;AACA;AACA,YAAI,CAAC,KAAK,OAAV,EAAmB;AACf,eAAK,KAAL;AACH;AACJ;;;;IAvSkB,a;;AAySvB,UAAQ,CAAC,IAAT,GAAgB,SAAS,gBAAT,CAA0B,CAA1B,EAA2B;AAAI,WAAO,KAAK,CAAC,IAAI,QAAV,EAAoB,gEAAyB,qDAAzB,CAApB,EAAiE,gEAAyB,2DAAzB,CAAjE,EAA4G,gEAAyB,sDAAzB,EAA2C,EAA3C,CAA5G,EAA4J,gEAAyB,mDAAzB,EAAwC,CAAxC,CAA5J,EAAwM,gEAAyB,+DAAzB,EAAoD,CAApD,CAAxM,EAAgQ,gEAAyB,qEAAzB,CAAhQ,EAAoT,gEAAyB,wBAAzB,EAAmD,EAAnD,CAApT,EAA4W,gEAAyB,oEAAzB,CAA5W,EAA8Z,gEAAyB,iDAAzB,CAA9Z,EAAuc,gEAAyB,yEAAzB,EAAyC,CAAzC,CAAvc,CAAP;AAA6f,GAA5iB;;AACA,UAAQ,CAAC,IAAT;AAAgB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,QAAR;AAAkB,aAAS,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,EAAtB,CAAD,EAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,EAAzB,CAA5B,EAA0D,CAAC,QAAD,EAAW,kBAAX,EAA+B,EAA/B,CAA1D,EAA8F,CAAC,OAAD,EAAU,kBAAV,EAA8B,EAA9B,CAA9F,EAAiI,CAAC,UAAD,EAAa,kBAAb,EAAiC,EAAjC,CAAjI,CAA7B;AAAqM,aAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ,EAAyB,iCAAzB,CAAhN;AAA6Q,YAAQ,EAAE,CAAvR;AAA0R,gBAAY,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC7Y,iEAAkB,OAAlB,EAA2B,SAAS,iCAAT,GAA0C;AAAK,iBAAO,GAAG,CAAC,aAAJ,CAAkB,IAAlB,CAAP;AAAiC,SAA3G,EAA6G,MAA7G,EAAqH,SAAS,gCAAT,GAAyC;AAAK,iBAAO,GAAG,CAAC,aAAJ,CAAkB,KAAlB,CAAP;AAAkC,SAArM,EAAuM,OAAvM,EAAgN,SAAS,iCAAT,GAA0C;AAAK,iBAAO,GAAG,CAAC,QAAJ,EAAP;AAAwB,SAAvR;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,qEAAsB,UAAtB,EAAkC,GAAG,CAAC,QAAtC,EAAgD,UAAhD,EAA4D,GAAG,CAAC,QAAhE;AACA,kEAAmB,IAAnB,EAAyB,GAAG,CAAC,EAA7B,EAAiC,kBAAjC,EAAqD,GAAG,CAAC,WAAzD,EAAsE,UAAtE,EAAkF,GAAG,CAAC,QAAJ,IAAgB,CAAC,GAAG,CAAC,eAArB,IAAwC,IAA1H,EAAgI,cAAhI,EAAgJ,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,QAAjB,GAA4B,IAA5B,GAAmC,GAAG,CAAC,UAAvL,EAAmM,eAAnM,EAAoN,GAAG,CAAC,QAAxN;AACA,kEAAmB,kBAAnB,EAAuC,GAAG,CAAC,SAA3C;AACH;AAAE,KANgD;AAM9C,UAAM,EAAE;AAAE,QAAE,EAAE,IAAN;AAAY,cAAQ,EAAE,UAAtB;AAAkC,cAAQ,EAAE,UAA5C;AAAwD,UAAI,EAAE,MAA9D;AAAsE,WAAK,EAAE,OAA7E;AAAsF,cAAQ,EAAE,UAAhG;AAA4G,iBAAW,EAAE,aAAzH;AAAwI,uBAAiB,EAAE,mBAA3J;AAAgL,yBAAmB,EAAE,CAAC,kBAAD,EAAqB,qBAArB;AAArM,KANsC;AAM8M,YAAQ,EAAE,CAAC,UAAD,CANxN;AAMsO,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,8EAAX;AAAgC,iBAAW,EAAE;AAA7C,KAAD,CAA1B,CAAD,EAAuF,wEAAvF,EAA0H,kEAA1H;AANhP,GAAzB,CAA9B;;;;;MAoIM,c;;;;AAEN,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAApC;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAAC,qEAAD,CAAb;AAAkC,WAAO,EAAE,CAAC,CAC5F,oEAD4F,EAE5F,6EAF4F,EAG5F,mEAH4F,CAAD,EAI5F,oEAJ4F,EAK/F;AACA;AACA,iFAP+F;AAA3C,GAAxB,CAApC;;;AA4BA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,cAA1B,EAA0C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,QAAD,EAAW,mBAAX,CAAP;AAAyC,KAAvE;AAAyE,WAAO,EAAE;AAAc,aAAO,CAAC,oEAAD,EAC3M,6EAD2M,EAE3M,mEAF2M,CAAP;AAEjL,KAFiF;AAE/E,WAAO,EAAE;AAAc,aAAO,CAAC,oEAAD,EACnD;AACA;AACA,mFAHmD,EAG/B,QAH+B,EAGrB,mBAHqB,CAAP;AAGS;AAL+C,GAA1C,CAAnD;AAKoD,CALnE;AAOA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChmBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;AAGG;;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,yDAAT,CAAmE,EAAnE,EAAuE,GAAvE,EAA0E;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACtF,iEAAsB,CAAtB,EAAyB,YAAzB,EAAuC,EAAvC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,iBAAiB,GAAG,GAAG,CAAC,SAA9B;AACA,6DAAkB,OAAlB,EAA2B,iBAA3B;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,iBAA/B,EAAkD,GAAlD;AACH;AAAE;;AACH,SAAS,4CAAT,CAAsD,EAAtD,EAA0D,GAA1D,EAA6D;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzE,QAAM,GAAG,GAAG,gEAAZ;;AACA,iEAAsB,CAAtB,EAAyB,gBAAzB,EAA2C,EAA3C;AACA,iEAAsB,CAAtB,EAAyB,YAAzB,EAAuC,EAAvC;AACA,6DAAkB,iBAAlB,EAAqC,SAAS,kFAAT,CAA4F,MAA5F,EAAkG;AAAI,kEAAqB,GAArB;AAA2B,UAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AAAwC,aAAO,MAAM,CAAC,eAAP,CAAuB,MAAM,CAAC,KAA9B,CAAP;AAA8C,KAA5P;AACA,6DAAkB,CAAlB,EAAqB,yDAArB,EAAgF,CAAhF,EAAmF,CAAnF,EAAsF,YAAtF,EAAoG,EAApG;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,6DAAkB,YAAlB,EAAgC,MAAM,CAAC,oBAAvC,EAA6D,OAA7D,EAAsE,MAAM,CAAC,KAA7E;AACA,4DAAiB,CAAjB;AACA,6DAAkB,OAAlB,EAA2B,MAAM,CAAC,QAAlC,EAA4C,UAA5C,EAAwD,MAAM,CAAC,QAA/D,EAAyE,YAAzE,EAAuF,MAAM,CAAC,KAAP,CAAa,iBAApG;AACA,4DAAiB,CAAjB;AACA,6DAAkB,SAAlB,EAA6B,MAAM,CAAC,yBAApC;AACH;AAAE;;AACH,SAAS,iCAAT,CAA2C,EAA3C,EAA+C,GAA/C,EAAkD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC9D,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,QAAhC;AACH;AAAE;;AACH,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACxD,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,yDAAc,CAAd;AACA;AACA,6DAAkB,CAAlB,EAAqB,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,gBAAzE,EAA2F,EAA3F;AACA,6DAAkB,CAAlB,EAAqB,iCAArB,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,KAA9D,EAAqE,EAArE;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,MAAM,CAAC,KAAP,CAAa,iBAA5C,EAA+D,GAA/D;AACA,4DAAiB,CAAjB;AACA,6DAAkB,MAAlB,EAA0B,MAAM,CAAC,yBAAP,CAAiC,MAAjC,GAA0C,CAApE;AACA,4DAAiB,CAAjB;AACA,6DAAkB,MAAlB,EAA0B,MAAM,CAAC,yBAAP,CAAiC,MAAjC,IAA2C,CAArE;AACH;AAAE;;AACH,SAAS,8BAAT,CAAwC,EAAxC,EAA4C,GAA5C,EAA+C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC3D,QAAM,IAAI,GAAG,gEAAb;;AACA,iEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,EAAnC;AACA,6DAAkB,OAAlB,EAA2B,SAAS,sDAAT,GAA+D;AAAK,kEAAqB,IAArB;AAA4B,UAAM,MAAM,GAAG,6DAAf;AAAuC,aAAO,MAAM,CAAC,SAAP,EAAP;AAA4B,KAA9L;AACA;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,4DAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,YAAlB,EAAgC,MAAM,CAAC,KAAP,CAAa,cAA7C,EAA6D,oBAA7D,EAAmF,MAAM,CAAC,wBAAP,EAAnF,EAAsH,oBAAtH,EAA4I,OAA5I,EAAqJ,UAArJ,EAAiK,MAAM,CAAC,wBAAP,EAAjK;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,KAAP,CAAa,cAA9C;AACH;AAAE;;AACH,SAAS,+BAAT,CAAyC,EAAzC,EAA6C,GAA7C,EAAgD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC5D,QAAM,IAAI,GAAG,gEAAb;;AACA;AACA;AACA,iEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,EAAnC;AACA,6DAAkB,OAAlB,EAA2B,SAAS,uDAAT,GAAgE;AAAK,kEAAqB,IAArB;AAA4B,UAAM,OAAO,GAAG,6DAAhB;AAAwC,aAAO,OAAO,CAAC,QAAR,EAAP;AAA4B,KAAhM;AACA;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,4DAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,YAAlB,EAAgC,MAAM,CAAC,KAAP,CAAa,aAA7C,EAA4D,oBAA5D,EAAkF,MAAM,CAAC,oBAAP,EAAlF,EAAiH,oBAAjH,EAAuI,OAAvI,EAAgJ,UAAhJ,EAA4J,MAAM,CAAC,oBAAP,EAA5J;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,KAAP,CAAa,aAA9C;AACH;AAAE;;;MACG,gB,GACF;AAAA;;AACI;;;AAGG;AACH,SAAK,OAAL,GAAe,IAAI,yCAAJ,EAAf;AACA;;AACA,SAAK,iBAAL,GAAyB,iBAAzB;AACA;;AACA,SAAK,aAAL,GAAqB,WAArB;AACA;;AACA,SAAK,iBAAL,GAAyB,eAAzB;AACA;;AACA,SAAK,cAAL,GAAsB,YAAtB;AACA;;AACA,SAAK,aAAL,GAAqB,WAArB;AACA;;AACA,SAAK,aAAL,GAAqB,UAAC,IAAD,EAAO,QAAP,EAAiB,MAAjB,EAA2B;AAC5C,UAAI,MAAM,IAAI,CAAV,IAAe,QAAQ,IAAI,CAA/B,EAAkC;AAC9B,8BAAe,MAAf;AACH;;AACD,YAAM,GAAG,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,CAAjB,CAAT;AACA,UAAM,UAAU,GAAG,IAAI,GAAG,QAA1B,CAL4C,CAM5C;;AACA,UAAM,QAAQ,GAAG,UAAU,GAAG,MAAb,GACb,IAAI,CAAC,GAAL,CAAS,UAAU,GAAG,QAAtB,EAAgC,MAAhC,CADa,GAEb,UAAU,GAAG,QAFjB;AAGA,uBAAU,UAAU,GAAG,CAAvB,qBAA8B,QAA9B,iBAA6C,MAA7C;AACH,KAXD;AAYH,G;;AAEL,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,KAAjB,GAAsB,aAAG,iEAAsB;AAAE,WAAO,EAAE,SAAS,wBAAT,GAAiC;AAAK,aAAO,IAAI,gBAAJ,EAAP;AAAgC,KAAjF;AAAmF,SAAK,EAAE,gBAA1F;AAA4G,cAAU,EAAE;AAAxH,GAAtB,CAAzB;;;AAKA;;;AACA,SAAS,mCAAT,CAA6C,UAA7C,EAAuD;AACnD,SAAO,UAAU,IAAI,IAAI,gBAAJ,EAArB;AACH;AACD;;;AACA,IAAM,2BAA2B,GAAG;AAChC;AACA,SAAO,EAAE,gBAFuB;AAGhC,MAAI,EAAE,CAAC,cAAC,IAAI,mDAAJ,EAAD,EAAe,aAAE,IAAI,mDAAJ,EAAjB,EAAiC,gBAAjC,CAAD,CAH0B;AAIhC,YAAU,EAAE;AAJoB,CAApC;AAOA;;;;;;AAMG;;AACH;;AACA,IAAM,iBAAiB,GAAG,EAA1B;AACA;;;AAGG;;IACG,S;;;AAEN;;;AACA,IAAM,6BAA6B,gBAAG,IAAI,yDAAJ,CAAmB,+BAAnB,CAAtC,C,CACA;;AACA;;AACA,IAAM,sBAAsB,gBAAG,qEAAa,eAAC,wEAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA,IAAjB,CAA5C;;;MAMM,iB;;;;;AACF,+BAAY,KAAZ,EAAmB,kBAAnB,EAAuC,QAAvC,EAA+C;AAAA;;AAAA;;AAC3C;AACA,YAAK,KAAL,GAAa,KAAb;AACA,YAAK,kBAAL,GAA0B,kBAA1B;AACA,YAAK,UAAL,GAAkB,CAAlB;AACA,YAAK,OAAL,GAAe,CAAf;AACA,YAAK,gBAAL,GAAwB,EAAxB;AACA,YAAK,aAAL,GAAqB,KAArB;AACA,YAAK,qBAAL,GAA6B,KAA7B;AACA;;AACA,YAAK,IAAL,GAAY,IAAI,uDAAJ,EAAZ;AACA,YAAK,YAAL,GAAoB,KAAK,CAAC,OAAN,CAAc,SAAd,CAAwB;AAAA,eAAM,MAAK,kBAAL,CAAwB,YAAxB,EAAN;AAAA,OAAxB,CAApB;;AACA,UAAI,QAAJ,EAAc;AACV,YAAQ,QAAR,GAA2E,QAA3E,CAAQ,QAAR;AAAA,YAAkB,eAAlB,GAA2E,QAA3E,CAAkB,eAAlB;AAAA,YAAmC,YAAnC,GAA2E,QAA3E,CAAmC,YAAnC;AAAA,YAAiD,oBAAjD,GAA2E,QAA3E,CAAiD,oBAAjD;;AACA,YAAI,QAAQ,IAAI,IAAhB,EAAsB;AAClB,gBAAK,SAAL,GAAiB,QAAjB;AACH;;AACD,YAAI,eAAe,IAAI,IAAvB,EAA6B;AACzB,gBAAK,gBAAL,GAAwB,eAAxB;AACH;;AACD,YAAI,YAAY,IAAI,IAApB,EAA0B;AACtB,gBAAK,aAAL,GAAqB,YAArB;AACH;;AACD,YAAI,oBAAoB,IAAI,IAA5B,EAAkC;AAC9B,gBAAK,qBAAL,GAA6B,oBAA7B;AACH;AACJ;;AA1B0C;AA2B9C;AACD;;;;;WACA,eAAa;AAAK,eAAO,KAAK,UAAZ;AAAyB,O;WAC3C,aAAc,KAAd,EAAmB;AACf,aAAK,UAAL,GAAkB,IAAI,CAAC,GAAL,CAAS,2EAAoB,CAAC,KAAD,CAA7B,EAAsC,CAAtC,CAAlB;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;;WACA,eAAU;AAAK,eAAO,KAAK,OAAZ;AAAsB,O;WACrC,aAAW,KAAX,EAAgB;AACZ,aAAK,OAAL,GAAe,2EAAoB,CAAC,KAAD,CAAnC;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;;WACA,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AACd,aAAK,SAAL,GAAiB,IAAI,CAAC,GAAL,CAAS,2EAAoB,CAAC,KAAD,CAA7B,EAAsC,CAAtC,CAAjB;;AACA,aAAK,+BAAL;AACH;AACD;;;;WACA,eAAmB;AAAK,eAAO,KAAK,gBAAZ;AAA+B,O;WACvD,aAAoB,KAApB,EAAyB;AACrB,aAAK,gBAAL,GAAwB,CAAC,KAAK,IAAI,EAAV,EAAc,GAAd,CAAkB,WAAC;AAAA,iBAAI,2EAAoB,CAAC,CAAD,CAAxB;AAAA,SAAnB,CAAxB;;AACA,aAAK,+BAAL;AACH;AACD;;;;WACA,eAAgB;AAAK,eAAO,KAAK,aAAZ;AAA4B,O;WACjD,aAAiB,KAAjB,EAAsB;AAClB,aAAK,aAAL,GAAqB,4EAAqB,CAAC,KAAD,CAA1C;AACH;AACD;;;;WACA,eAAwB;AAAK,eAAO,KAAK,qBAAZ;AAAoC,O;WACjE,aAAyB,KAAzB,EAA8B;AAC1B,aAAK,qBAAL,GAA6B,4EAAqB,CAAC,KAAD,CAAlD;AACH;;;aACD,oBAAQ;AACJ,aAAK,YAAL,GAAoB,IAApB;;AACA,aAAK,+BAAL;;AACA,aAAK,gBAAL;AACH;;;aACD,uBAAW;AACP,aAAK,YAAL,CAAkB,WAAlB;AACH;AACD;;;;aACA,oBAAQ;AACJ,YAAI,CAAC,KAAK,WAAL,EAAL,EAAyB;AACrB;AACH;;AACD,YAAM,iBAAiB,GAAG,KAAK,SAA/B;AACA,aAAK,SAAL;;AACA,aAAK,cAAL,CAAoB,iBAApB;AACH;AACD;;;;aACA,wBAAY;AACR,YAAI,CAAC,KAAK,eAAL,EAAL,EAA6B;AACzB;AACH;;AACD,YAAM,iBAAiB,GAAG,KAAK,SAA/B;AACA,aAAK,SAAL;;AACA,aAAK,cAAL,CAAoB,iBAApB;AACH;AACD;;;;aACA,qBAAS;AACL;AACA,YAAI,CAAC,KAAK,eAAL,EAAL,EAA6B;AACzB;AACH;;AACD,YAAM,iBAAiB,GAAG,KAAK,SAA/B;AACA,aAAK,SAAL,GAAiB,CAAjB;;AACA,aAAK,cAAL,CAAoB,iBAApB;AACH;AACD;;;;aACA,oBAAQ;AACJ;AACA,YAAI,CAAC,KAAK,WAAL,EAAL,EAAyB;AACrB;AACH;;AACD,YAAM,iBAAiB,GAAG,KAAK,SAA/B;AACA,aAAK,SAAL,GAAiB,KAAK,gBAAL,KAA0B,CAA3C;;AACA,aAAK,cAAL,CAAoB,iBAApB;AACH;AACD;;;;aACA,2BAAe;AACX,eAAO,KAAK,SAAL,IAAkB,CAAlB,IAAuB,KAAK,QAAL,IAAiB,CAA/C;AACH;AACD;;;;aACA,uBAAW;AACP,YAAM,YAAY,GAAG,KAAK,gBAAL,KAA0B,CAA/C;AACA,eAAO,KAAK,SAAL,GAAiB,YAAjB,IAAiC,KAAK,QAAL,IAAiB,CAAzD;AACH;AACD;;;;aACA,4BAAgB;AACZ,YAAI,CAAC,KAAK,QAAV,EAAoB;AAChB,iBAAO,CAAP;AACH;;AACD,eAAO,IAAI,CAAC,IAAL,CAAU,KAAK,MAAL,GAAc,KAAK,QAA7B,CAAP;AACH;AACD;;;;;;;AAOG;;;;aACH,yBAAgB,QAAhB,EAAwB;AACpB;AACA;AACA,YAAM,UAAU,GAAG,KAAK,SAAL,GAAiB,KAAK,QAAzC;AACA,YAAM,iBAAiB,GAAG,KAAK,SAA/B;AACA,aAAK,SAAL,GAAiB,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,QAAxB,KAAqC,CAAtD;AACA,aAAK,QAAL,GAAgB,QAAhB;;AACA,aAAK,cAAL,CAAoB,iBAApB;AACH;AACD;;;;aACA,gCAAoB;AAChB,eAAO,KAAK,QAAL,IAAiB,CAAC,KAAK,WAAL,EAAzB;AACH;AACD;;;;aACA,oCAAwB;AACpB,eAAO,KAAK,QAAL,IAAiB,CAAC,KAAK,eAAL,EAAzB;AACH;AACD;;;AAGG;;;;aACH,2CAA+B;AAC3B,YAAI,CAAC,KAAK,YAAV,EAAwB;AACpB;AACH,SAH0B,CAI3B;;;AACA,YAAI,CAAC,KAAK,QAAV,EAAoB;AAChB,eAAK,SAAL,GAAiB,KAAK,eAAL,CAAqB,MAArB,IAA+B,CAA/B,GACb,KAAK,eAAL,CAAqB,CAArB,CADa,GAEb,iBAFJ;AAGH;;AACD,aAAK,yBAAL,GAAiC,KAAK,eAAL,CAAqB,KAArB,EAAjC;;AACA,YAAI,KAAK,yBAAL,CAA+B,OAA/B,CAAuC,KAAK,QAA5C,MAA0D,CAAC,CAA/D,EAAkE;AAC9D,eAAK,yBAAL,CAA+B,IAA/B,CAAoC,KAAK,QAAzC;AACH,SAb0B,CAc3B;;;AACA,aAAK,yBAAL,CAA+B,IAA/B,CAAoC,UAAC,CAAD,EAAI,CAAJ;AAAA,iBAAU,CAAC,GAAG,CAAd;AAAA,SAApC;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;;aACA,wBAAe,iBAAf,EAAgC;AAC5B,aAAK,IAAL,CAAU,IAAV,CAAe;AACX,2BAAiB,EAAjB,iBADW;AAEX,mBAAS,EAAE,KAAK,SAFL;AAGX,kBAAQ,EAAE,KAAK,QAHJ;AAIX,gBAAM,EAAE,KAAK;AAJF,SAAf;AAMH;;;;IApL2B,sB;;AAsLhC,mBAAiB,CAAC,IAAlB,GAAyB,SAAS,yBAAT,CAAmC,CAAnC,EAAoC;AAAI,WAAO,KAAK,CAAC,IAAI,iBAAV,EAA6B,gEAAyB,gBAAzB,CAA7B,EAAyE,gEAAyB,4DAAzB,CAAzE,EAA6H,gEAAyB,SAAzB,CAA7H,CAAP;AAA2K,GAA5O;;AACA,mBAAiB,CAAC,IAAlB;AAAyB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,iBAAR;AAA2B,UAAM,EAAE;AAAE,eAAS,EAAE,WAAb;AAA0B,YAAM,EAAE,QAAlC;AAA4C,cAAQ,EAAE,UAAtD;AAAkE,qBAAe,EAAE,iBAAnF;AAAsG,kBAAY,EAAE,cAApH;AAAoI,0BAAoB,EAAE,sBAA1J;AAAkL,WAAK,EAAE;AAAzL,KAAnC;AAAuO,WAAO,EAAE;AAAE,UAAI,EAAE;AAAR,KAAhP;AAAkQ,YAAQ,EAAE,CAAC,wEAAD;AAA5Q,GAAzB,CAAvC;;;;;MAwCM,Y;;;;;AACF,0BAAY,IAAZ,EAAkB,iBAAlB,EAAqC,QAArC,EAA6C;AAAA;;AAAA;;AACzC,kCAAM,IAAN,EAAY,iBAAZ,EAA+B,QAA/B;;AACA,UAAI,QAAQ,IAAI,QAAQ,CAAC,mBAAT,IAAgC,IAAhD,EAAsD;AAClD,eAAK,oBAAL,GAA4B,QAAQ,CAAC,mBAArC;AACH;;AAJwC;AAK5C;;;IANsB,iB;;AAQ3B,cAAY,CAAC,IAAb,GAAoB,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,WAAO,KAAK,CAAC,IAAI,YAAV,EAAwB,gEAAyB,gBAAzB,CAAxB,EAAoE,gEAAyB,4DAAzB,CAApE,EAAwH,gEAAyB,6BAAzB,EAAwD,CAAxD,CAAxH,CAAP;AAA6L,GAApP;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAjC;AAAsD,aAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,eAArB,CAAjE;AAAwG,UAAM,EAAE;AAAE,cAAQ,EAAE;AAAZ,KAAhH;AAA0I,YAAQ,EAAE,CAAC,cAAD,CAApJ;AAAsK,YAAQ,EAAE,CAAC,wEAAD,CAAhL;AAAqN,SAAK,EAAE,EAA5N;AAAgO,QAAI,EAAE,EAAtO;AAA0O,UAAM,EAAE,CAAC,CAAC,CAAD,EAAI,+BAAJ,CAAD,EAAuC,CAAC,CAAD,EAAI,yBAAJ,CAAvC,EAAuE,CAAC,OAAD,EAAU,yBAAV,EAAqC,CAArC,EAAwC,MAAxC,CAAvE,EAAwH,CAAC,CAAD,EAAI,6BAAJ,CAAxH,EAA4J,CAAC,CAAD,EAAI,2BAAJ,CAA5J,EAA8L,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,OAA1C,EAAmD,gCAAnD,EAAqF,CAArF,EAAwF,YAAxF,EAAsG,oBAAtG,EAA4H,oBAA5H,EAAkJ,UAAlJ,EAA8J,OAA9J,EAAuK,CAAvK,EAA0K,MAA1K,CAA9L,EAAiX,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,mCAA7C,EAAkF,CAAlF,EAAqF,YAArF,EAAmG,oBAAnG,EAAyH,oBAAzH,EAA+I,UAA/I,EAA2J,OAA3J,CAAjX,EAAshB,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,EAAsC,OAAtC,EAA+C,CAA/C,EAAkD,oBAAlD,CAAthB,EAA+lB,CAAC,GAAD,EAAM,+CAAN,CAA/lB,EAAupB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,+BAA7C,EAA8E,CAA9E,EAAiF,YAAjF,EAA+F,oBAA/F,EAAqH,oBAArH,EAA2I,UAA3I,EAAuJ,OAAvJ,CAAvpB,EAAwzB,CAAC,GAAD,EAAM,gDAAN,CAAxzB,EAAi3B,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,OAA1C,EAAmD,+BAAnD,EAAoF,CAApF,EAAuF,YAAvF,EAAqG,oBAArG,EAA2H,oBAA3H,EAAiJ,UAAjJ,EAA6J,OAA7J,EAAsK,CAAtK,EAAyK,MAAzK,CAAj3B,EAAmiC,CAAC,CAAD,EAAI,yBAAJ,CAAniC,EAAmkC,CAAC,CAAD,EAAI,+BAAJ,CAAnkC,EAAymC,CAAC,OAAD,EAAU,gCAAV,EAA4C,CAA5C,EAA+C,YAA/C,EAA6D,OAA7D,EAAsE,CAAtE,EAAyE,MAAzE,CAAzmC,EAA2rC,CAAC,OAAD,EAAU,+BAAV,EAA2C,CAA3C,EAA8C,MAA9C,CAA3rC,EAAkvC,CAAC,CAAD,EAAI,gCAAJ,EAAsC,CAAtC,EAAyC,YAAzC,EAAuD,OAAvD,CAAlvC,EAAmzC,CAAC,CAAD,EAAI,OAAJ,EAAa,UAAb,EAAyB,YAAzB,EAAuC,iBAAvC,CAAnzC,EAA82C,CAAC,CAAD,EAAI,OAAJ,EAAa,CAAb,EAAgB,OAAhB,EAAyB,SAAzB,CAA92C,EAAm5C,CAAC,CAAD,EAAI,OAAJ,CAAn5C,EAAi6C,CAAC,CAAD,EAAI,+BAAJ,CAAj6C,EAAu8C,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,gCAA7C,EAA+E,CAA/E,EAAkF,YAAlF,EAAgG,oBAAhG,EAAsH,oBAAtH,EAA4I,UAA5I,EAAwJ,OAAxJ,CAAv8C,EAAymD,CAAC,GAAD,EAAM,4DAAN,CAAzmD,EAA8qD,CAAC,iBAAD,EAAoB,EAApB,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6C,+BAA7C,EAA8E,CAA9E,EAAiF,YAAjF,EAA+F,oBAA/F,EAAqH,oBAArH,EAA2I,UAA3I,EAAuJ,OAAvJ,CAA9qD,EAA+0D,CAAC,GAAD,EAAM,4DAAN,CAA/0D,CAAlP;AAAuoE,YAAQ,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC1vE,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,iEAAkB,CAAlB,EAAqB,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,6DAAc,CAAd;AACA;AACA,iEAAkB,CAAlB,EAAqB,8BAArB,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,QAA3D,EAAqE,CAArE;AACA,qEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;AACA,iEAAkB,OAAlB,EAA2B,SAAS,6CAAT,GAAsD;AAAK,iBAAO,GAAG,CAAC,YAAJ,EAAP;AAA4B,SAAlH;AACA;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACA;AACA;AACA;AACA,qEAAsB,EAAtB,EAA0B,QAA1B,EAAoC,CAApC;AACA,iEAAkB,OAAlB,EAA2B,SAAS,8CAAT,GAAuD;AAAK,iBAAO,GAAG,CAAC,QAAJ,EAAP;AAAwB,SAA/G;AACA;AACA,qEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,CAAjC;AACA,gEAAiB,EAAjB,EAAqB,MAArB,EAA6B,EAA7B;AACA;AACA;AACA,iEAAkB,EAAlB,EAAsB,+BAAtB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,QAA7D,EAAuE,EAAvE;AACA;AACA;AACA;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,CAAC,GAAG,CAAC,YAA/B;AACA,gEAAiB,CAAjB;AACA,yEAA0B,GAA1B,EAA+B,GAAG,CAAC,KAAJ,CAAU,aAAV,CAAwB,GAAG,CAAC,SAA5B,EAAuC,GAAG,CAAC,QAA3C,EAAqD,GAAG,CAAC,MAAzD,CAA/B,EAAiG,GAAjG;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,oBAA9B;AACA,gEAAiB,CAAjB;AACA,iEAAkB,YAAlB,EAAgC,GAAG,CAAC,KAAJ,CAAU,iBAA1C,EAA6D,oBAA7D,EAAmF,GAAG,CAAC,wBAAJ,EAAnF,EAAmH,oBAAnH,EAAyI,OAAzI,EAAkJ,UAAlJ,EAA8J,GAAG,CAAC,wBAAJ,EAA9J;AACA,kEAAmB,YAAnB,EAAiC,GAAG,CAAC,KAAJ,CAAU,iBAA3C;AACA,gEAAiB,CAAjB;AACA,iEAAkB,YAAlB,EAAgC,GAAG,CAAC,KAAJ,CAAU,aAA1C,EAAyD,oBAAzD,EAA+E,GAAG,CAAC,oBAAJ,EAA/E,EAA2G,oBAA3G,EAAiI,OAAjI,EAA0I,UAA1I,EAAsJ,GAAG,CAAC,oBAAJ,EAAtJ;AACA,kEAAmB,YAAnB,EAAiC,GAAG,CAAC,KAAJ,CAAU,aAA3C;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,oBAA9B;AACH;AAAE,KA3CoD;AA2ClD,cAAU,EAAE,CAAC,iDAAD,EAAc,+DAAd,EAAgC,kEAAhC,EAAmD,uEAAnD,EAAwE,gEAAxE,EAA0F,oDAA1F,EAA0G,6DAA1G,CA3CsC;AA2CuF,UAAM,EAAE,CAAC,m3BAAD,CA3C/F;AA2Cs9B,iBAAa,EAAE,CA3Cr+B;AA2Cw+B,mBAAe,EAAE;AA3Cz/B,GAAzB,CAAlC;;;;;MA8EM,kB;;;;AAEN,oBAAkB,CAAC,IAAnB,GAA0B,SAAS,0BAAT,CAAoC,CAApC,EAAqC;AAAI,WAAO,KAAK,CAAC,IAAI,kBAAV,GAAP;AAAyC,GAA5G;;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAxC;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAAC,2BAAD,CAAb;AAA4C,WAAO,EAAE,CAAC,CAC1G,yDAD0G,EAE1G,qEAF0G,EAG1G,sEAH0G,EAI1G,wEAJ0G,EAK1G,mEAL0G,CAAD;AAArD,GAAxB,CAAxC;;;AAsBA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,kBAA1B,EAA8C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,YAAD,CAAP;AAAwB,KAAtD;AAAwD,WAAO,EAAE;AAAc,aAAO,CAAC,yDAAD,EAC9L,qEAD8L,EAE9L,sEAF8L,EAG9L,wEAH8L,EAI9L,mEAJ8L,CAAP;AAIpK,KAJqF;AAInF,WAAO,EAAE;AAAc,aAAO,CAAC,YAAD,CAAP;AAAwB;AAJoC,GAA9C,CAAnD;AAImE,CAJlF;AAMA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1hBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;;;;AAMG;;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,SAAD,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,SAAS,yBAAT,CAAmC,EAAnC,EAAuC,GAAvC,EAA0C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACtD,iEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,WAAhC;AACH;AAAE;;AACH,SAAS,gCAAT,CAA0C,EAA1C,EAA8C,GAA9C,EAAiD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC7D,iEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,YAAhC;AACH;AAAE;;AACH,SAAS,sCAAT,CAAgD,EAAhD,EAAoD,GAApD,EAAuD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACnE,+DAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,SAAS,yBAAT,CAAmC,EAAnC,EAAuC,GAAvC,EAA0C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACtD,iEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;AACA,6DAAkB,CAAlB,EAAqB,gCAArB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,MAA7D,EAAqE,EAArE;AACA,6DAAkB,CAAlB,EAAqB,sCAArB,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,YAAnE,EAAiF,EAAjF;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,UAAlB,EAA8B,CAAC,CAAC,MAAM,CAAC,aAAvC;AACA,4DAAiB,CAAjB;AACA,6DAAkB,cAAlB,EAAkC,IAAlC;AACH;AAAE;;AACH,SAAS,gCAAT,CAA0C,EAA1C,EAA8C,GAA9C,EAAiD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC7D,QAAM,GAAG,GAAG,gEAAZ;;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;AACA,6DAAkB,sBAAlB,EAA0C,SAAS,6EAAT,CAAuF,MAAvF,EAA6F;AAAI,kEAAqB,GAArB;AAA2B,UAAM,MAAM,GAAG,6DAAf;AAAuC,aAAO,MAAM,CAAC,yBAAP,CAAiC,IAAjC,CAAsC,MAAM,CAAC,OAA7C,CAAP;AAA+D,KAA5Q,EAA8Q,SAA9Q,EAAyR,SAAS,uDAAT,CAAiE,MAAjE,EAAuE;AAAI,kEAAqB,GAArB;AAA2B,UAAM,OAAO,GAAG,6DAAhB;AAAwC,aAAO,OAAO,CAAC,cAAR,CAAuB,MAAvB,CAAP;AAAwC,KAA/c;AACA,+DAAoB,CAApB,EAAuB,CAAvB;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,qBAAlB,EAAyC,SAAzC;AACA,4DAAiB,CAAjB;AACA,yEAA8B,mBAA9B,EAAmD,MAAM,CAAC,cAAP,EAAnD,EAA4E,EAA5E;AACA,8DAAmB,kBAAnB,EAAuC,MAAM,CAAC,gBAA9C,EAAgE,WAAhE,EAA6E,MAAM,CAAC,gBAApF,EAAsG,IAAtG;AACA,6DAAkB,SAAlB,EAA6B,MAAM,CAAC,UAApC,EAAgD,iBAAhD,EAAmE,MAAM,CAAC,QAAP,GAAkB,kBAAlB,GAAuC,SAA1G;AACA,8DAAmB,IAAnB,EAAyB,MAAM,CAAC,EAAP,GAAY,QAArC,EAA+C,sBAA/C,EAAuE,MAAM,CAAC,QAA9E,EAAwF,YAAxF,EAAsG,MAAM,CAAC,SAAP,IAAoB,IAA1H,EAAgI,iBAAhI,EAAmJ,MAAM,CAAC,uBAAP,EAAnJ;AACH;AAAE;;AACH,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAD,CAAD,CAAD,EAA2B,GAA3B,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,oBAAD,EAAuB,GAAvB,CAAZ;AACA,IAAM,mBAAmB,GAAG;AACxB;;;;AAIG;AACH,oBAAkB,eAAE,4DAAO,CAAC,oBAAD,EAAuB,C,aAC9C,+DAAU,CAAC,WAAD,EAAY,aAAE,0DAAK,CAAC,iBAAD,EAAoB,cAAC,iEAAY,EAAb,CAApB,EAAsC;AAAE,YAAQ,EAAE;AAAZ,GAAtC,CAAnB,CADoC,CAAvB,CANH;;AASxB;;;;;;;;AAQG;AACH,gBAAc,eAAE,4DAAO,CAAC,gBAAD,EAAmB,C,aACtC,0DAAK,CAAC,MAAD,EAAO,aAAE,0DAAK,CAAC;AAChB,aAAS,EAAE,aADK;AAEhB,YAAQ,EAAE,MAFM;AAGhB,WAAO,EAAE;AAHO,GAAD,CAAd,CADiC,E,aAMtC,0DAAK,CAAC,SAAD,EAAU,aAAE,0DAAK,CAAC;AACnB,WAAO,EAAE,CADU;AAEnB,YAAQ,EAAE,mBAFS;AAGnB,aAAS,EAAE;AAHQ,GAAD,CAAjB,CANiC,E,aAWtC,0DAAK,CAAC,kBAAD,EAAmB,aAAE,0DAAK,CAAC;AAC5B,WAAO,EAAE,CADmB;AAE5B,YAAQ,EAAE,mBAFkB;AAG5B,aAAS,EAAE;AAHiB,GAAD,CAA1B,CAXiC,E,aAgBtC,+DAAU,CAAC,WAAD,EAAY,aAAE,4DAAO,CAAC,kCAAD,CAArB,CAhB4B,E,aAiBtC,+DAAU,CAAC,WAAD,EAAY,aAAE,4DAAO,CAAC,mBAAD,EAAoB,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE;AAAX,GAAD,CAA3B,CAArB,CAjB4B,CAAnB;AAlBC,CAA5B;AAuCA;;;;;;AAMG;;AACH;;;;AAIG;;AACH,SAAS,gCAAT,GAAyC;AACrC,SAAO,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;;;;;AAKG;;;AACH,SAAS,8BAAT,GAAuC;AACnC,SAAO,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;;;;AAIG;;;AACH,SAAS,iCAAT,GAA0C;AACtC,SAAO,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;;;;;;AAMG;;;AACH,IAAI,YAAY,GAAG,CAAnB;AACA;;;;AAIG;;AACH;;AACA,IAAM,uBAAuB,GAAG,GAAhC;AACA;;AACA,IAAM,sBAAsB,GAAG,EAA/B;AACA;;AACA,IAAM,6BAA6B,GAAG,sBAAsB,GAAG,CAA/D;AACA;;AACA,IAAM,qBAAqB,GAAG,CAA9B,C,CACA;;AACA;;;;;;;;AAQG;;AACH,IAAM,+BAA+B,GAAG,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;;;AAGG;;AACH,IAAM,6BAA6B,GAAG,CAAtC;AACA;;AACA,IAAM,0BAA0B,gBAAG,IAAI,yDAAJ,CAAmB,4BAAnB,CAAnC;AACA;;AACA,SAAS,2CAAT,CAAqD,OAArD,EAA4D;AACxD,SAAO;AAAA,WAAM,OAAO,CAAC,gBAAR,CAAyB,UAAzB,EAAN;AAAA,GAAP;AACH;AACD;;;AACA,IAAM,iBAAiB,gBAAG,IAAI,yDAAJ,CAAmB,mBAAnB,CAA1B;AACA;;AACA,IAAM,mCAAmC,GAAG;AACxC,SAAO,EAAE,0BAD+B;AAExC,MAAI,EAAE,CAAC,0DAAD,CAFkC;AAGxC,YAAU,EAAE;AAH4B,CAA5C;AAKA;;IACM,e,GACF;AACA;AACA,MAFA;AAGA;AACA,KAJA,EAIK;AAAA;;AACD,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,KAAL,GAAa,KAAb;AACH,C,EAEL;;AACA;;;AACA,IAAM,mBAAmB,gBAAG,2EAAkB,eAAC,sEAAa,eAAC,sEAAa,eAAC,wEAAe;AACtF,kBAAY,WAAZ,EAAyB,yBAAzB,EAAoD,WAApD,EAAiE,gBAAjE,EAAmF,SAAnF,EAA4F;AAAA;;AACxF,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,yBAAL,GAAiC,yBAAjC;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACH;;AAPqF;AAAA,IAAhB,CAAd,CAAd,CAA9C;AASA;;;;AAIG;;;AACH,IAAM,kBAAkB,gBAAG,IAAI,yDAAJ,CAAmB,kBAAnB,CAA3B;;;MAIM,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAArC;AAA+D,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,kBAAX;AAA+B,iBAAW,EAAE;AAA5C,KAAD,CAA1B,CAAD;AAAzE,GAAzB,CAAtC;;;;;MASM,c;;;;;AACF,4BAAY,cAAZ,EAA4B,kBAA5B,EAAgD,OAAhD,EAAyD,yBAAzD,EAAoF,UAApF,EAAgG,IAAhG,EAAsG,WAAtG,EAAmH,gBAAnH,EAAqI,gBAArI,EAAuJ,SAAvJ,EAAkK,QAAlK,EAA4K,qBAA5K,EAAmM,cAAnM,EAAmN,eAAnN,EAAkO;AAAA;;AAAA;;AAC9N,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AACA,gCAAM,UAAN,EAAkB,yBAAlB,EAA6C,WAA7C,EAA0D,gBAA1D,EAA4E,SAA5E;AACA,YAAK,cAAL,GAAsB,cAAtB;AACA,YAAK,kBAAL,GAA0B,kBAA1B;AACA,YAAK,OAAL,GAAe,OAAf;AACA,YAAK,IAAL,GAAY,IAAZ;AACA,YAAK,gBAAL,GAAwB,gBAAxB;AACA,YAAK,cAAL,GAAsB,cAAtB;AACA,YAAK,eAAL,GAAuB,eAAvB;AACA;;AACA,YAAK,UAAL,GAAkB,KAAlB;AACA;;AACA,YAAK,YAAL,GAAoB,UAAC,EAAD,EAAK,EAAL;AAAA,eAAY,EAAE,KAAK,EAAnB;AAAA,OAApB;AACA;;;AACA,YAAK,IAAL,wBAA0B,YAAY,EAAtC;AACA;;AACA,YAAK,sBAAL,GAA8B,IAA9B;AACA;;AACA,YAAK,QAAL,GAAgB,IAAI,0CAAJ,EAAhB;AACA;;AACA,YAAK,SAAL,GAAiB,YAAK,CAAI,CAA1B;AACA;;;AACA,YAAK,UAAL,GAAkB,YAAK,CAAI,CAA3B;AACA;;;AACA,YAAK,QAAL,8BAAoC,YAAY,EAAhD;AACA;;AACA,YAAK,yBAAL,GAAiC,IAAI,0CAAJ,EAAjC;AACA,YAAK,kBAAL,GAA0B,CAAC,CAAC,EAAE,GAAG,MAAK,eAAX,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,iBAArE,KAA2F,EAArH;AACA,YAAK,QAAL,GAAgB,KAAhB;AACA;;AACA,YAAK,WAAL,GAAmB,YAAnB;AACA,YAAK,SAAL,GAAiB,KAAjB;AACA,YAAK,SAAL,GAAiB,KAAjB;AACA,YAAK,uBAAL,GAA+B,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,MAAK,eAAX,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,sBAA1E,MAAsG,IAAtG,IAA8G,EAAE,KAAK,KAAK,CAA1H,GAA8H,EAA9H,GAAmI,KAAlK;AACA;;AACA,YAAK,SAAL,GAAiB,EAAjB;AACA;;AACA,YAAK,sBAAL,GAA8B,4CAAK,CAAC,YAAK;AACrC,YAAM,OAAO,GAAG,MAAK,OAArB;;AACA,YAAI,OAAJ,EAAa;AACT,iBAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAqB,0DAAS,CAAC,OAAD,CAA9B,EAAyC,0DAAS,CAAC;AAAA,mBAAM,yPAAS,OAAO,CAAC,GAAR,CAAY,gBAAM;AAAA,qBAAI,MAAM,CAAC,iBAAX;AAAA,aAAlB,CAAT,EAAN;AAAA,WAAD,CAAlD,CAAP;AACH;;AACD,eAAO,MAAK,OAAL,CAAa,QAAb,CACF,IADE,CACG,qDAAI,CAAC,CAAD,CADP,EACY,0DAAS,CAAC;AAAA,iBAAM,MAAK,sBAAX;AAAA,SAAD,CADrB,CAAP;AAEH,OAPkC,CAAnC;AAQA;;AACA,YAAK,YAAL,GAAoB,IAAI,uDAAJ,EAApB;AACA;;AACA,YAAK,aAAL,GAAqB,MAAK,YAAL,CAAkB,IAAlB,CAAuB,uDAAM,CAAC,WAAC;AAAA,eAAI,CAAJ;AAAA,OAAF,CAA7B,EAAuC,oDAAG,CAAC,YAAK,CAAI,CAAV,CAA1C,CAArB;AACA;;AACA,YAAK,aAAL,GAAqB,MAAK,YAAL,CAAkB,IAAlB,CAAuB,uDAAM,CAAC,WAAC;AAAA,eAAI,CAAC,CAAL;AAAA,OAAF,CAA7B,EAAwC,oDAAG,CAAC,YAAK,CAAI,CAAV,CAA3C,CAArB;AACA;;AACA,YAAK,eAAL,GAAuB,IAAI,uDAAJ,EAAvB;AACA;;;;AAIG;;AACH,YAAK,WAAL,GAAmB,IAAI,uDAAJ,EAAnB;;AACA,UAAI,MAAK,SAAT,EAAoB;AAChB;AACA;AACA,cAAK,SAAL,CAAe,aAAf;AACH,OAhE6N,CAiE9N;AACA;;;AACA,UAAI,CAAC,eAAe,KAAK,IAApB,IAA4B,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkE,eAAe,CAAC,yBAAnF,KAAiH,IAArH,EAA2H;AACvH,cAAK,0BAAL,GAAkC,eAAe,CAAC,yBAAlD;AACH;;AACD,YAAK,sBAAL,GAA8B,qBAA9B;AACA,YAAK,eAAL,GAAuB,MAAK,sBAAL,EAAvB;AACA,YAAK,QAAL,GAAgB,QAAQ,CAAC,QAAD,CAAR,IAAsB,CAAtC,CAxE8N,CAyE9N;;AACA,YAAK,EAAL,GAAU,MAAK,EAAf;AA1E8N;AA2EjO;AACD;;;;;WACA,eAAW;AACP,eAAO,KAAK,QAAL,IAAiB,KAAK,UAA7B;AACH;AACD;;;;WACA,eAAe;AAAK,eAAO,KAAK,YAAZ;AAA2B,O;WAC/C,aAAgB,KAAhB,EAAqB;AACjB,aAAK,YAAL,GAAoB,KAApB;AACA,aAAK,YAAL,CAAkB,IAAlB;AACH;AACD;;;;WACA,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AACd,aAAK,SAAL,GAAiB,6EAAqB,CAAC,KAAD,CAAtC;AACA,aAAK,YAAL,CAAkB,IAAlB;AACH;AACD;;;;WACA,eAAY;AAAK,eAAO,KAAK,SAAZ;AAAwB,O;WACzC,aAAa,KAAb,EAAkB;AACd,YAAI,KAAK,eAAL,KAAyB,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAA7D,CAAJ,EAA6E;AACzE,gBAAM,gCAAgC,EAAtC;AACH;;AACD,aAAK,SAAL,GAAiB,6EAAqB,CAAC,KAAD,CAAtC;AACH;AACD;;;;WACA,eAA0B;AAAK,eAAO,KAAK,uBAAZ;AAAsC,O;WACrE,aAA2B,KAA3B,EAAgC;AAC5B,aAAK,uBAAL,GAA+B,6EAAqB,CAAC,KAAD,CAApD;AACH;AACD;;;;AAIG;;;;WACH,eAAe;AAAK,eAAO,KAAK,YAAZ;AAA2B,O;WAC/C,aAAgB,EAAhB,EAAkB;AACd,YAAI,OAAO,EAAP,KAAc,UAAd,KAA6B,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAjE,CAAJ,EAAiF;AAC7E,gBAAM,iCAAiC,EAAvC;AACH;;AACD,aAAK,YAAL,GAAoB,EAApB;;AACA,YAAI,KAAK,eAAT,EAA0B;AACtB;AACA,eAAK,oBAAL;AACH;AACJ;AACD;;;;WACA,eAAS;AAAK,eAAO,KAAK,MAAZ;AAAqB,O;WACnC,aAAU,QAAV,EAAkB;AACd;AACA,YAAI,QAAQ,KAAK,KAAK,MAAlB,IAA6B,KAAK,SAAL,IAAkB,KAAK,CAAC,OAAN,CAAc,QAAd,CAAnD,EAA6E;AACzE,cAAI,KAAK,OAAT,EAAkB;AACd,iBAAK,oBAAL,CAA0B,QAA1B;AACH;;AACD,eAAK,MAAL,GAAc,QAAd;AACH;AACJ;AACD;;;;WACA,eAA6B;AAAK,eAAO,KAAK,0BAAZ;AAAyC,O;WAC3E,aAA8B,KAA9B,EAAmC;AAC/B,aAAK,0BAAL,GAAkC,4EAAoB,CAAC,KAAD,CAAtD;AACH;AACD;;;;WACA,eAAM;AAAK,eAAO,KAAK,GAAZ;AAAkB,O;WAC7B,aAAO,KAAP,EAAY;AACR,aAAK,GAAL,GAAW,KAAK,IAAI,KAAK,IAAzB;AACA,aAAK,YAAL,CAAkB,IAAlB;AACH;;;aACD,oBAAQ;AAAA;;AACJ,aAAK,eAAL,GAAuB,IAAI,qEAAJ,CAAmB,KAAK,QAAxB,CAAvB;AACA,aAAK,YAAL,CAAkB,IAAlB,GAFI,CAGJ;AACA;AACA;;AACA,aAAK,yBAAL,CACK,IADL,CACU,qEAAoB,EAD9B,EACkC,0DAAS,CAAC,KAAK,QAAN,CAD3C,EAEK,SAFL,CAEe;AAAA,iBAAM,MAAI,CAAC,mBAAL,CAAyB,MAAI,CAAC,SAA9B,CAAN;AAAA,SAFf;AAGH;;;aACD,8BAAkB;AAAA;;AACd,aAAK,eAAL;;AACA,aAAK,eAAL,CAAqB,OAArB,CAA6B,IAA7B,CAAkC,0DAAS,CAAC,KAAK,QAAN,CAA3C,EAA4D,SAA5D,CAAsE,eAAK,EAAG;AAC1E,eAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,gBAAM;AAAA,mBAAI,MAAM,CAAC,MAAP,EAAJ;AAAA,WAA1B;AACA,eAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,gBAAM;AAAA,mBAAI,MAAM,CAAC,QAAP,EAAJ;AAAA,WAA5B;AACH,SAHD;;AAIA,aAAK,OAAL,CAAa,OAAb,CAAqB,IAArB,CAA0B,0DAAS,CAAC,IAAD,CAAnC,EAA2C,0DAAS,CAAC,KAAK,QAAN,CAApD,EAAqE,SAArE,CAA+E,YAAK;AAChF,gBAAI,CAAC,aAAL;;AACA,gBAAI,CAAC,oBAAL;AACH,SAHD;AAIH;;;aACD,qBAAS;AACL,YAAM,iBAAiB,GAAG,KAAK,yBAAL,EAA1B,CADK,CAEL;AACA;AACA;;;AACA,YAAI,iBAAiB,KAAK,KAAK,sBAA/B,EAAuD;AACnD,cAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,aAAjC;AACA,eAAK,sBAAL,GAA8B,iBAA9B;;AACA,cAAI,iBAAJ,EAAuB;AACnB,mBAAO,CAAC,YAAR,CAAqB,iBAArB,EAAwC,iBAAxC;AACH,WAFD,MAGK;AACD,mBAAO,CAAC,eAAR,CAAwB,iBAAxB;AACH;AACJ;;AACD,YAAI,KAAK,SAAT,EAAoB;AAChB,eAAK,gBAAL;AACH;AACJ;;;aACD,qBAAY,OAAZ,EAAmB;AACf;AACA;AACA,YAAI,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,eAAK,YAAL,CAAkB,IAAlB;AACH;;AACD,YAAI,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAK,WAAjD,EAA8D;AAC1D,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAK,0BAApC;AACH;AACJ;;;aACD,uBAAW;AACP,aAAK,QAAL,CAAc,IAAd;;AACA,aAAK,QAAL,CAAc,QAAd;;AACA,aAAK,YAAL,CAAkB,QAAlB;AACH;AACD;;;;aACA,kBAAM;AACF,aAAK,SAAL,GAAiB,KAAK,KAAL,EAAjB,GAAgC,KAAK,IAAL,EAAhC;AACH;AACD;;;;aACA,gBAAI;AACA,YAAI,KAAK,QAAL,EAAJ,EAAqB;AACjB,eAAK,UAAL,GAAkB,IAAlB;;AACA,eAAK,WAAL,CAAiB,yBAAjB,CAA2C,IAA3C;;AACA,eAAK,uBAAL;;AACA,eAAK,kBAAL,CAAwB,YAAxB;AACH;AACJ;AACD;;;;aACA,iBAAK;AACD,YAAI,KAAK,UAAT,EAAqB;AACjB,eAAK,UAAL,GAAkB,KAAlB;;AACA,eAAK,WAAL,CAAiB,yBAAjB,CAA2C,KAAK,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,eAAK,kBAAL,CAAwB,YAAxB;;AACA,eAAK,UAAL;AACH;AACJ;AACD;;;;;AAKG;;;;aACH,oBAAW,KAAX,EAAgB;AACZ,aAAK,KAAL,GAAa,KAAb;AACH;AACD;;;;;;AAMG;;;;aACH,0BAAiB,EAAjB,EAAmB;AACf,aAAK,SAAL,GAAiB,EAAjB;AACH;AACD;;;;;;AAMG;;;;aACH,2BAAkB,EAAlB,EAAoB;AAChB,aAAK,UAAL,GAAkB,EAAlB;AACH;AACD;;;;;AAKG;;;;aACH,0BAAiB,UAAjB,EAA2B;AACvB,aAAK,QAAL,GAAgB,UAAhB;;AACA,aAAK,kBAAL,CAAwB,YAAxB;;AACA,aAAK,YAAL,CAAkB,IAAlB;AACH;AACD;;;;WACA,eAAa;AACT,eAAO,KAAK,UAAZ;AACH;AACD;;;;WACA,eAAY;AACR,eAAO,KAAK,QAAL,GAAgB,KAAK,eAAL,CAAqB,QAArC,GAAgD,KAAK,eAAL,CAAqB,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;WACA,eAAgB;AACZ,YAAI,KAAK,KAAT,EAAgB;AACZ,iBAAO,EAAP;AACH;;AACD,YAAI,KAAK,SAAT,EAAoB;AAChB,cAAM,eAAe,GAAG,KAAK,eAAL,CAAqB,QAArB,CAA8B,GAA9B,CAAkC,gBAAM;AAAA,mBAAI,MAAM,CAAC,SAAX;AAAA,WAAxC,CAAxB;;AACA,cAAI,KAAK,MAAL,EAAJ,EAAmB;AACf,2BAAe,CAAC,OAAhB;AACH,WAJe,CAKhB;;;AACA,iBAAO,eAAe,CAAC,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,eAAO,KAAK,eAAL,CAAqB,QAArB,CAA8B,CAA9B,EAAiC,SAAxC;AACH;AACD;;;;aACA,kBAAM;AACF,eAAO,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;;aACA,wBAAe,KAAf,EAAoB;AAChB,YAAI,CAAC,KAAK,QAAV,EAAoB;AAChB,eAAK,SAAL,GAAiB,KAAK,kBAAL,CAAwB,KAAxB,CAAjB,GAAkD,KAAK,oBAAL,CAA0B,KAA1B,CAAlD;AACH;AACJ;AACD;;;;aACA,8BAAqB,KAArB,EAA0B;AACtB,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,UAAU,GAAG,OAAO,KAAK,8DAAZ,IAA0B,OAAO,KAAK,4DAAtC,IACf,OAAO,KAAK,8DADG,IACW,OAAO,KAAK,+DAD1C;AAEA,YAAM,SAAS,GAAG,OAAO,KAAK,yDAAZ,IAAqB,OAAO,KAAK,yDAAnD;AACA,YAAM,OAAO,GAAG,KAAK,WAArB,CALsB,CAMtB;;AACA,YAAI,CAAC,OAAO,CAAC,QAAR,EAAD,IAAwB,SAAS,IAAI,CAAC,sEAAc,CAAC,KAAD,CAApD,IACC,CAAC,KAAK,QAAL,IAAiB,KAAK,CAAC,MAAxB,KAAmC,UADxC,EACqD;AACjD,eAAK,CAAC,cAAN,GADiD,CACzB;;AACxB,eAAK,IAAL;AACH,SAJD,MAKK,IAAI,CAAC,KAAK,QAAV,EAAoB;AACrB,cAAM,wBAAwB,GAAG,KAAK,QAAtC;AACA,iBAAO,CAAC,SAAR,CAAkB,KAAlB;AACA,cAAM,cAAc,GAAG,KAAK,QAA5B,CAHqB,CAIrB;;AACA,cAAI,cAAc,IAAI,wBAAwB,KAAK,cAAnD,EAAmE;AAC/D;AACA;AACA,iBAAK,cAAL,CAAoB,QAApB,CAA6B,cAAc,CAAC,SAA5C,EAAuD,KAAvD;AACH;AACJ;AACJ;AACD;;;;aACA,4BAAmB,KAAnB,EAAwB;AACpB,YAAM,OAAO,GAAG,KAAK,WAArB;AACA,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,UAAU,GAAG,OAAO,KAAK,8DAAZ,IAA0B,OAAO,KAAK,4DAAzD;AACA,YAAM,QAAQ,GAAG,OAAO,CAAC,QAAR,EAAjB;;AACA,YAAI,UAAU,IAAI,KAAK,CAAC,MAAxB,EAAgC;AAC5B;AACA,eAAK,CAAC,cAAN;AACA,eAAK,KAAL,GAH4B,CAI5B;AACA;AACH,SAND,MAOK,IAAI,CAAC,QAAD,KAAc,OAAO,KAAK,yDAAZ,IAAqB,OAAO,KAAK,yDAA/C,KAAyD,OAAO,CAAC,UAAjE,IACL,CAAC,sEAAc,CAAC,KAAD,CADd,EACuB;AACxB,eAAK,CAAC,cAAN;;AACA,iBAAO,CAAC,UAAR,CAAmB,qBAAnB;AACH,SAJI,MAKA,IAAI,CAAC,QAAD,IAAa,KAAK,SAAlB,IAA+B,OAAO,KAAK,qDAA3C,IAAgD,KAAK,CAAC,OAA1D,EAAmE;AACpE,eAAK,CAAC,cAAN;AACA,cAAM,oBAAoB,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,aAAG;AAAA,mBAAI,CAAC,GAAG,CAAC,QAAL,IAAiB,CAAC,GAAG,CAAC,QAA1B;AAAA,WAArB,CAA7B;AACA,eAAK,OAAL,CAAa,OAAb,CAAqB,gBAAM,EAAG;AAC1B,gBAAI,CAAC,MAAM,CAAC,QAAZ,EAAsB;AAClB,kCAAoB,GAAG,MAAM,CAAC,MAAP,EAAH,GAAqB,MAAM,CAAC,QAAP,EAAzC;AACH;AACJ,WAJD;AAKH,SARI,MASA;AACD,cAAM,sBAAsB,GAAG,OAAO,CAAC,eAAvC;AACA,iBAAO,CAAC,SAAR,CAAkB,KAAlB;;AACA,cAAI,KAAK,SAAL,IAAkB,UAAlB,IAAgC,KAAK,CAAC,QAAtC,IAAkD,OAAO,CAAC,UAA1D,IACA,OAAO,CAAC,eAAR,KAA4B,sBADhC,EACwD;AACpD,mBAAO,CAAC,UAAR,CAAmB,qBAAnB;AACH;AACJ;AACJ;;;aACD,oBAAQ;AACJ,YAAI,CAAC,KAAK,QAAV,EAAoB;AAChB,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;;AAGG;;;;aACH,mBAAO;AACH,aAAK,QAAL,GAAgB,KAAhB;;AACA,YAAI,CAAC,KAAK,QAAN,IAAkB,CAAC,KAAK,SAA5B,EAAuC;AACnC,eAAK,UAAL;;AACA,eAAK,kBAAL,CAAwB,YAAxB;;AACA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;AAEG;;;;aACH,uBAAW;AAAA;;AACP,aAAK,WAAL,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,qDAAI,CAAC,CAAD,CAAzC,EAA8C,SAA9C,CAAwD,YAAK;AACzD,gBAAI,CAAC,kBAAL,CAAwB,aAAxB;;AACA,gBAAI,CAAC,mBAAL;AACH,SAHD;AAIH;AACD;;;;aACA,0BAAc;AACV,eAAO,KAAK,gBAAL,iBAA+B,KAAK,gBAAL,CAAsB,KAArD,IAA+D,EAAtE;AACH;AACD;;;;WACA,eAAS;AACL,eAAO,CAAC,KAAK,eAAN,IAAyB,KAAK,eAAL,CAAqB,OAArB,EAAhC;AACH;;;aACD,gCAAoB;AAAA;;AAChB;AACA;AACA,eAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,YAAK;AACxB,gBAAI,CAAC,oBAAL,CAA0B,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,SAAL,CAAe,KAAhC,GAAwC,MAAI,CAAC,MAAvE;;AACA,gBAAI,CAAC,YAAL,CAAkB,IAAlB;AACH,SAHD;AAIH;AACD;;;AAGG;;;;aACH,8BAAqB,KAArB,EAA0B;AAAA;;AACtB,aAAK,eAAL,CAAqB,QAArB,CAA8B,OAA9B,CAAsC,gBAAM;AAAA,iBAAI,MAAM,CAAC,iBAAP,EAAJ;AAAA,SAA5C;;AACA,aAAK,eAAL,CAAqB,KAArB;;AACA,YAAI,KAAK,QAAL,IAAiB,KAArB,EAA4B;AACxB,cAAI,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAD,KAA0B,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAA9D,CAAJ,EAA8E;AAC1E,kBAAM,8BAA8B,EAApC;AACH;;AACD,eAAK,CAAC,OAAN,CAAc,UAAC,YAAD;AAAA,mBAAkB,MAAI,CAAC,YAAL,CAAkB,YAAlB,CAAlB;AAAA,WAAd;;AACA,eAAK,WAAL;AACH,SAND,MAOK;AACD,cAAM,mBAAmB,GAAG,KAAK,YAAL,CAAkB,KAAlB,CAA5B,CADC,CAED;AACA;;;AACA,cAAI,mBAAJ,EAAyB;AACrB,iBAAK,WAAL,CAAiB,gBAAjB,CAAkC,mBAAlC;AACH,WAFD,MAGK,IAAI,CAAC,KAAK,SAAV,EAAqB;AACtB;AACA;AACA,iBAAK,WAAL,CAAiB,gBAAjB,CAAkC,CAAC,CAAnC;AACH;AACJ;;AACD,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;AAGG;;;;aACH,sBAAa,KAAb,EAAkB;AAAA;;AACd,YAAM,mBAAmB,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,UAAC,MAAD,EAAW;AACrD;AACA;AACA,cAAI,MAAI,CAAC,eAAL,CAAqB,UAArB,CAAgC,MAAhC,CAAJ,EAA6C;AACzC,mBAAO,KAAP;AACH;;AACD,cAAI;AACA;AACA,mBAAO,MAAM,CAAC,KAAP,IAAgB,IAAhB,IAAwB,MAAI,CAAC,YAAL,CAAkB,MAAM,CAAC,KAAzB,EAAgC,KAAhC,CAA/B;AACH,WAHD,CAIA,OAAO,KAAP,EAAc;AACV,gBAAI,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAxC,EAAmD;AAC/C;AACA,qBAAO,CAAC,IAAR,CAAa,KAAb;AACH;;AACD,mBAAO,KAAP;AACH;AACJ,SAjB2B,CAA5B;;AAkBA,YAAI,mBAAJ,EAAyB;AACrB,eAAK,eAAL,CAAqB,MAArB,CAA4B,mBAA5B;AACH;;AACD,eAAO,mBAAP;AACH;AACD;;;;aACA,2BAAe;AAAA;;AACX,aAAK,WAAL,GAAmB,IAAI,0EAAJ,CAA+B,KAAK,OAApC,EACd,aADc,CACA,KAAK,0BADL,EAEd,uBAFc,GAGd,yBAHc,CAGY,KAAK,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAId,cAJc,GAKd,uBALc,CAKU,CAAC,UAAD,CALV,CAAnB;;AAMA,aAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,0DAAS,CAAC,KAAK,QAAN,CAAtC,EAAuD,SAAvD,CAAiE,YAAK;AAClE,cAAI,MAAI,CAAC,SAAT,EAAoB;AAChB;AACA;AACA,gBAAI,CAAC,MAAI,CAAC,QAAN,IAAkB,MAAI,CAAC,WAAL,CAAiB,UAAvC,EAAmD;AAC/C,oBAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,qBAA5B;AACH,aALe,CAMhB;AACA;;;AACA,kBAAI,CAAC,KAAL;;AACA,kBAAI,CAAC,KAAL;AACH;AACJ,SAZD;;AAaA,aAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B,0DAAS,CAAC,KAAK,QAAN,CAAtC,EAAuD,SAAvD,CAAiE,YAAK;AAClE,cAAI,MAAI,CAAC,UAAL,IAAmB,MAAI,CAAC,KAA5B,EAAmC;AAC/B,kBAAI,CAAC,qBAAL,CAA2B,MAAI,CAAC,WAAL,CAAiB,eAAjB,IAAoC,CAA/D;AACH,WAFD,MAGK,IAAI,CAAC,MAAI,CAAC,UAAN,IAAoB,CAAC,MAAI,CAAC,QAA1B,IAAsC,MAAI,CAAC,WAAL,CAAiB,UAA3D,EAAuE;AACxE,kBAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,qBAA5B;AACH;AACJ,SAPD;AAQH;AACD;;;;aACA,yBAAa;AAAA;;AACT,YAAM,kBAAkB,GAAG,4CAAK,CAAC,KAAK,OAAL,CAAa,OAAd,EAAuB,KAAK,QAA5B,CAAhC;AACA,aAAK,sBAAL,CAA4B,IAA5B,CAAiC,0DAAS,CAAC,kBAAD,CAA1C,EAAgE,SAAhE,CAA0E,eAAK,EAAG;AAC9E,gBAAI,CAAC,SAAL,CAAe,KAAK,CAAC,MAArB,EAA6B,KAAK,CAAC,WAAnC;;AACA,cAAI,KAAK,CAAC,WAAN,IAAqB,CAAC,MAAI,CAAC,QAA3B,IAAuC,MAAI,CAAC,UAAhD,EAA4D;AACxD,kBAAI,CAAC,KAAL;;AACA,kBAAI,CAAC,KAAL;AACH;AACJ,SAND,EAFS,CAST;AACA;;AACA,iQAAS,KAAK,OAAL,CAAa,GAAb,CAAiB,gBAAM;AAAA,iBAAI,MAAM,CAAC,aAAX;AAAA,SAAvB,CAAT,GACK,IADL,CACU,0DAAS,CAAC,kBAAD,CADnB,EAEK,SAFL,CAEe,YAAK;AAChB,gBAAI,CAAC,kBAAL,CAAwB,YAAxB;;AACA,gBAAI,CAAC,YAAL,CAAkB,IAAlB;AACH,SALD;AAMH;AACD;;;;aACA,mBAAU,MAAV,EAAkB,WAAlB,EAA6B;AACzB,YAAM,WAAW,GAAG,KAAK,eAAL,CAAqB,UAArB,CAAgC,MAAhC,CAApB;;AACA,YAAI,MAAM,CAAC,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAK,SAAlC,EAA6C;AACzC,gBAAM,CAAC,QAAP;;AACA,eAAK,eAAL,CAAqB,KAArB;;AACA,cAAI,KAAK,KAAL,IAAc,IAAlB,EAAwB;AACpB,iBAAK,iBAAL,CAAuB,MAAM,CAAC,KAA9B;AACH;AACJ,SAND,MAOK;AACD,cAAI,WAAW,KAAK,MAAM,CAAC,QAA3B,EAAqC;AACjC,kBAAM,CAAC,QAAP,GAAkB,KAAK,eAAL,CAAqB,MAArB,CAA4B,MAA5B,CAAlB,GACI,KAAK,eAAL,CAAqB,QAArB,CAA8B,MAA9B,CADJ;AAEH;;AACD,cAAI,WAAJ,EAAiB;AACb,iBAAK,WAAL,CAAiB,aAAjB,CAA+B,MAA/B;AACH;;AACD,cAAI,KAAK,QAAT,EAAmB;AACf,iBAAK,WAAL;;AACA,gBAAI,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,mBAAK,KAAL;AACH;AACJ;AACJ;;AACD,YAAI,WAAW,KAAK,KAAK,eAAL,CAAqB,UAArB,CAAgC,MAAhC,CAApB,EAA6D;AACzD,eAAK,iBAAL;AACH;;AACD,aAAK,YAAL,CAAkB,IAAlB;AACH;AACD;;;;aACA,uBAAW;AAAA;;AACP,YAAI,KAAK,QAAT,EAAmB;AACf,cAAM,OAAO,GAAG,KAAK,OAAL,CAAa,OAAb,EAAhB;;AACA,eAAK,eAAL,CAAqB,IAArB,CAA0B,UAAC,CAAD,EAAI,CAAJ,EAAS;AAC/B,mBAAO,OAAI,CAAC,cAAL,GAAsB,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,OAA1B,CAAtB,GACH,OAAO,CAAC,OAAR,CAAgB,CAAhB,IAAqB,OAAO,CAAC,OAAR,CAAgB,CAAhB,CADzB;AAEH,WAHD;;AAIA,eAAK,YAAL,CAAkB,IAAlB;AACH;AACJ;AACD;;;;aACA,2BAAkB,aAAlB,EAA+B;AAC3B,YAAI,WAAW,GAAG,IAAlB;;AACA,YAAI,KAAK,QAAT,EAAmB;AACf,qBAAW,GAAG,KAAK,QAAL,CAAc,GAAd,CAAkB,gBAAM;AAAA,mBAAI,MAAM,CAAC,KAAX;AAAA,WAAxB,CAAd;AACH,SAFD,MAGK;AACD,qBAAW,GAAG,KAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,KAA9B,GAAsC,aAApD;AACH;;AACD,aAAK,MAAL,GAAc,WAAd;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,WAAtB;;AACA,aAAK,SAAL,CAAe,WAAf;;AACA,aAAK,eAAL,CAAqB,IAArB,CAA0B,KAAK,eAAL,CAAqB,WAArB,CAA1B;;AACA,aAAK,kBAAL,CAAwB,YAAxB;AACH;AACD;;;AAGG;;;;aACH,mCAAuB;AACnB,YAAI,KAAK,WAAT,EAAsB;AAClB,cAAI,KAAK,KAAT,EAAgB;AACZ,iBAAK,WAAL,CAAiB,kBAAjB;AACH,WAFD,MAGK;AACD,iBAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAK,eAAL,CAAqB,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;;aACA,oBAAQ;AACJ,YAAI,EAAJ;;AACA,eAAO,CAAC,KAAK,UAAN,IAAoB,CAAC,KAAK,QAA1B,IAAsC,CAAC,CAAC,EAAE,GAAG,KAAK,OAAX,MAAwB,IAAxB,IAAgC,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyD,EAAE,CAAC,MAA7D,IAAuE,CAApH;AACH;AACD;;;;aACA,eAAM,OAAN,EAAa;AACT,aAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B,CAAqC,OAArC;AACH;AACD;;;;aACA,mCAAuB;AACnB,YAAI,EAAJ;;AACA,YAAI,KAAK,SAAT,EAAoB;AAChB,iBAAO,IAAP;AACH;;AACD,YAAM,OAAO,GAAG,CAAC,EAAE,GAAG,KAAK,gBAAX,MAAiC,IAAjC,IAAyC,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkE,EAAE,CAAC,UAAH,EAAlF;AACA,YAAM,eAAe,GAAI,OAAO,GAAG,OAAO,GAAG,GAAb,GAAmB,EAAnD;AACA,eAAO,KAAK,cAAL,GAAsB,eAAe,GAAG,KAAK,cAA7C,GAA8D,OAArE;AACH;AACD;;;;aACA,oCAAwB;AACpB,YAAI,KAAK,SAAL,IAAkB,KAAK,WAAvB,IAAsC,KAAK,WAAL,CAAiB,UAA3D,EAAuE;AACnE,iBAAO,KAAK,WAAL,CAAiB,UAAjB,CAA4B,EAAnC;AACH;;AACD,eAAO,IAAP;AACH;AACD;;;;aACA,qCAAyB;AACrB,YAAI,EAAJ;;AACA,YAAI,KAAK,SAAT,EAAoB;AAChB,iBAAO,IAAP;AACH;;AACD,YAAM,OAAO,GAAG,CAAC,EAAE,GAAG,KAAK,gBAAX,MAAiC,IAAjC,IAAyC,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkE,EAAE,CAAC,UAAH,EAAlF;AACA,YAAI,KAAK,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,GAAb,GAAmB,EAA3B,IAAiC,KAAK,QAAlD;;AACA,YAAI,KAAK,cAAT,EAAyB;AACrB,eAAK,IAAI,MAAM,KAAK,cAApB;AACH;;AACD,eAAO,KAAP;AACH;AACD;;;;aACA,6BAAoB,MAApB,EAA0B;AACtB,aAAK,YAAL,CAAkB,IAAlB,CAAuB,MAAvB;AACH;AACD;;;AAGG;;;;aACH,2BAAkB,GAAlB,EAAqB;AACjB,aAAK,gBAAL,GAAwB,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;AAGG;;;;aACH,4BAAgB;AACZ,aAAK,KAAL;AACA,aAAK,IAAL;AACH;AACD;;;AAGG;;;;WACH,eAAoB;AAChB,eAAO,KAAK,UAAL,IAAmB,CAAC,KAAK,KAAzB,IAAmC,KAAK,QAAL,IAAiB,CAAC,CAAC,KAAK,YAAlE;AACH;;;;IAloBwB,mB;;AAooB7B,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,kEAAzB,CAA1B,EAA0E,gEAAyB,4DAAzB,CAA1E,EAA8H,gEAAyB,iDAAzB,CAA9H,EAAuK,gEAAyB,sEAAzB,CAAvK,EAA2N,gEAAyB,qDAAzB,CAA3N,EAAwQ,gEAAyB,8DAAzB,EAAgD,CAAhD,CAAxQ,EAA4T,gEAAyB,mDAAzB,EAAwC,CAAxC,CAA5T,EAAwW,gEAAyB,+DAAzB,EAAoD,CAApD,CAAxW,EAAga,gEAAyB,yEAAzB,EAAyC,CAAzC,CAAha,EAA6c,gEAAyB,sDAAzB,EAA2C,EAA3C,CAA7c,EAA6f,gEAAyB,UAAzB,CAA7f,EAAmiB,gEAAyB,0BAAzB,CAAniB,EAAylB,gEAAyB,6DAAzB,CAAzlB,EAAyoB,gEAAyB,iBAAzB,EAA4C,CAA5C,CAAzoB,CAAP;AAAksB,GAA7vB;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,SAAS,oBAAT,CAA8B,EAA9B,EAAkC,GAAlC,EAAqC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC7I,kEAAmB,GAAnB,EAAwB,CAAxB;AACA,kEAAmB,GAAnB,EAAwB,CAAxB;AACA,kEAAmB,sEAAnB,EAAwC,CAAxC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,OAAJ,GAAc,EAAE,CAAC,KAAtE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,KAAJ,GAAY,EAAE,CAAC,KAApE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,WAAJ,GAAkB,EAAE,CAAC,KAA1E;AACH;AAAE,KATsD;AASpD,UAAM,EAAE;AAAE,eAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAb;AAA0C,QAAE,EAAE,IAA9C;AAAoD,iBAAW,EAAE,aAAjE;AAAgF,cAAQ,EAAE,UAA1F;AAAsG,cAAQ,EAAE,UAAhH;AAA4H,4BAAsB,EAAE,wBAApJ;AAA8K,iBAAW,EAAE,aAA3L;AAA0M,WAAK,EAAE,OAAjN;AAA0N,+BAAyB,EAAE,2BAArP;AAAkR,gBAAU,EAAE,YAA9R;AAA4S,oBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAA5T;AAAmW,uBAAiB,EAAE,mBAAtX;AAA2Y,oBAAc,EAAE;AAA3Z,KAT4C;AASmY,WAAO,EAAE;AAAE,kBAAY,EAAE,cAAhB;AAAgC,mBAAa,EAAE,QAA/C;AAAyD,mBAAa,EAAE,QAAxE;AAAkF,qBAAe,EAAE,iBAAnG;AAAsH,iBAAW,EAAE;AAAnI,KAT5Y;AASgiB,YAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAT1iB,GAAzB,CAApC;;;;;MA+HM,S;;;;;AACF;AAAA;;AAAA;;AACI,oCAAS,SAAT;AACA;;AACA,cAAK,UAAL,GAAkB,CAAlB;AACA;;AACA,cAAK,gBAAL,GAAwB,CAAxB;AACA;;AACA,cAAK,gBAAL,GAAwB,KAAxB;AACA;;;;AAIG;;AACH,cAAK,QAAL,GAAgB,CAAhB;AACA,cAAK,UAAL,GAAkB,CACd;AACI,eAAO,EAAE,OADb;AAEI,eAAO,EAAE,KAFb;AAGI,gBAAQ,EAAE,OAHd;AAII,gBAAQ,EAAE;AAJd,OADc,EAOd;AACI,eAAO,EAAE,OADb;AAEI,eAAO,EAAE,QAFb;AAGI,gBAAQ,EAAE,OAHd;AAII,gBAAQ,EAAE;AAJd,OAPc,CAAlB;AAdJ;AA4BC;AACD;;;;;;AAMG;;;;;aACH,iCAAwB,aAAxB,EAAuC,YAAvC,EAAqD,SAArD,EAA8D;AAC1D,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAM,yBAAyB,GAAG,UAAU,GAAG,aAA/C;AACA,YAAM,gBAAgB,GAAG,UAAU,GAAG,CAAtC,CAH0D,CAI1D;AACA;AACA;AACA;;AACA,YAAM,qBAAqB,GAAG,yBAAyB,GAAG,YAA5B,GAA2C,gBAAzE;AACA,eAAO,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,qBAAZ,CAAT,EAA6C,SAA7C,CAAP;AACH;;;aACD,oBAAQ;AAAA;;AACJ;;AACA,aAAK,cAAL,CAAoB,MAApB,GAA6B,IAA7B,CAAkC,0DAAS,CAAC,KAAK,QAAN,CAA3C,EAA4D,SAA5D,CAAsE,YAAK;AACvE,cAAI,OAAI,CAAC,SAAT,EAAoB;AAChB,mBAAI,CAAC,YAAL,GAAoB,OAAI,CAAC,OAAL,CAAa,aAAb,CAA2B,qBAA3B,EAApB;;AACA,mBAAI,CAAC,kBAAL,CAAwB,YAAxB;AACH;AACJ,SALD;AAMH;;;aACD,gBAAI;AAAA;;AACA,mbAAsB;AAClB;;AACA,eAAK,YAAL,GAAoB,KAAK,OAAL,CAAa,aAAb,CAA2B,qBAA3B,EAApB,CAFkB,CAGlB;AACA;;AACA,eAAK,gBAAL,GACI,QAAQ,CAAC,gBAAgB,CAAC,KAAK,OAAL,CAAa,aAAd,CAAhB,CAA6C,QAA7C,IAAyD,GAA1D,CADZ;;AAEA,eAAK,yBAAL,GAPkB,CAQlB;;;AACA,eAAK,OAAL,CAAa,QAAb,CAAsB,IAAtB,CAA2B,qDAAI,CAAC,CAAD,CAA/B,EAAoC,SAApC,CAA8C,YAAK;AAC/C,gBAAI,OAAI,CAAC,gBAAL,IAAyB,OAAI,CAAC,WAAL,CAAiB,UAA1C,IACA,OAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,cADhC,EACgD;AAC5C,qBAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,cAA5B,CAA2C,KAA3C,CAAiD,QAAjD,aAA+D,OAAI,CAAC,gBAApE;AACH;AACJ,WALD;AAMH;AACJ;AACD;;;;aACA,+BAAsB,KAAtB,EAA2B;AACvB,YAAM,UAAU,GAAG,sFAA6B,CAAC,KAAD,EAAQ,KAAK,OAAb,EAAsB,KAAK,YAA3B,CAAhD;;AACA,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAI,KAAK,KAAK,CAAV,IAAe,UAAU,KAAK,CAAlC,EAAqC;AACjC;AACA;AACA;AACA,eAAK,KAAL,CAAW,aAAX,CAAyB,SAAzB,GAAqC,CAArC;AACH,SALD,MAMK;AACD,eAAK,KAAL,CAAW,aAAX,CAAyB,SAAzB,GAAqC,iFAAwB,CAAC,CAAC,KAAK,GAAG,UAAT,IAAuB,UAAxB,EAAoC,UAApC,EAAgD,KAAK,KAAL,CAAW,aAAX,CAAyB,SAAzE,EAAoF,uBAApF,CAA7D;AACH;AACJ;;;aACD,+BAAmB;AACf,aAAK,wBAAL;;AACA,aAAK,KAAL,CAAW,aAAX,CAAyB,SAAzB,GAAqC,KAAK,UAA1C;AACH;;;aACD,6BAAoB,MAApB,EAA0B;AACtB,YAAI,KAAK,SAAT,EAAoB;AAChB,eAAK,UAAL,GAAkB,CAAlB;AACH,SAFD,MAGK;AACD,eAAK,WAAL,CAAiB,OAAjB,GAA2B,CAA3B;;AACA,eAAK,kBAAL,CAAwB,YAAxB;AACH;;AACD,ybAA0B,MAA1B;AACH;;;aACD,yBAAgB,KAAhB,EAAqB;AACjB,eAAO,IAAI,eAAJ,CAAoB,IAApB,EAA0B,KAA1B,CAAP;AACH;AACD;;;;;;AAMG;;;;aACH,oCAAwB;AACpB,YAAM,WAAW,GAAG,KAAK,WAAL,CAAiB,UAAjB,CAA4B,cAA5B,CAA2C,qBAA3C,EAApB;;AACA,YAAM,YAAY,GAAG,KAAK,cAAL,CAAoB,eAApB,EAArB;;AACA,YAAM,KAAK,GAAG,KAAK,MAAL,EAAd;;AACA,YAAM,YAAY,GAAG,KAAK,QAAL,GAAgB,+BAA+B,GAAG,sBAAlD,GACjB,sBAAsB,GAAG,CAD7B;AAEA,YAAI,OAAJ,CANoB,CAOpB;;AACA,YAAI,KAAK,QAAT,EAAmB;AACf,iBAAO,GAAG,+BAAV;AACH,SAFD,MAGK,IAAI,KAAK,sBAAT,EAAiC;AAClC,iBAAO,GAAG,sBAAV;AACH,SAFI,MAGA;AACD,cAAI,QAAQ,GAAG,KAAK,eAAL,CAAqB,QAArB,CAA8B,CAA9B,KAAoC,KAAK,OAAL,CAAa,KAAhE;AACA,iBAAO,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAArB,GAA6B,6BAA7B,GAA6D,sBAAvE;AACH,SAjBmB,CAkBpB;;;AACA,YAAI,CAAC,KAAL,EAAY;AACR,iBAAO,IAAI,CAAC,CAAZ;AACH,SArBmB,CAsBpB;;;AACA,YAAM,YAAY,GAAG,KAAK,WAAW,CAAC,IAAZ,GAAmB,OAAnB,IAA8B,KAAK,GAAG,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA,YAAM,aAAa,GAAG,WAAW,CAAC,KAAZ,GAAoB,OAApB,GAA8B,YAAY,CAAC,KAA3C,IACf,KAAK,GAAG,CAAH,GAAO,YADG,CAAtB,CAxBoB,CA0BpB;;AACA,YAAI,YAAY,GAAG,CAAnB,EAAsB;AAClB,iBAAO,IAAI,YAAY,GAAG,6BAA1B;AACH,SAFD,MAGK,IAAI,aAAa,GAAG,CAApB,EAAuB;AACxB,iBAAO,IAAI,aAAa,GAAG,6BAA3B;AACH,SAhCmB,CAiCpB;AACA;AACA;;;AACA,aAAK,WAAL,CAAiB,OAAjB,GAA2B,IAAI,CAAC,KAAL,CAAW,OAAX,CAA3B;;AACA,aAAK,WAAL,CAAiB,UAAjB,CAA4B,cAA5B;AACH;AACD;;;;AAIG;;;;aACH,kCAAyB,aAAzB,EAAwC,YAAxC,EAAsD,SAAtD,EAA+D;AAC3D,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAM,sBAAsB,GAAG,CAAC,UAAU,GAAG,KAAK,YAAL,CAAkB,MAAhC,IAA0C,CAAzE;AACA,YAAM,mBAAmB,GAAG,IAAI,CAAC,KAAL,CAAW,uBAAuB,GAAG,UAArC,CAA5B;AACA,YAAI,wBAAJ,CAJ2D,CAK3D;;AACA,YAAI,KAAK,sBAAT,EAAiC;AAC7B,iBAAO,CAAP;AACH;;AACD,YAAI,KAAK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,kCAAwB,GAAG,aAAa,GAAG,UAA3C;AACH,SAFD,MAGK,IAAI,KAAK,UAAL,KAAoB,SAAxB,EAAmC;AACpC,cAAM,mBAAmB,GAAG,KAAK,aAAL,KAAuB,mBAAnD;AACA,cAAM,oBAAoB,GAAG,aAAa,GAAG,mBAA7C,CAFoC,CAGpC;AACA;;AACA,cAAI,iBAAiB,GAAG,UAAU,GAAG,CAAC,KAAK,aAAL,KAAuB,UAAvB,GAAoC,uBAArC,IAAgE,UAArG,CALoC,CAMpC;AACA;AACA;AACA;;AACA,kCAAwB,GAAG,oBAAoB,GAAG,UAAvB,GAAoC,iBAA/D;AACH,SAXI,MAYA;AACD;AACA;AACA;AACA,kCAAwB,GAAG,YAAY,GAAG,UAAU,GAAG,CAAvD;AACH,SA7B0D,CA8B3D;AACA;AACA;;;AACA,eAAO,IAAI,CAAC,KAAL,CAAW,wBAAwB,GAAG,CAAC,CAA5B,GAAgC,sBAA3C,CAAP;AACH;AACD;;;;;AAKG;;;;aACH,qCAA4B,SAA5B,EAAqC;AACjC,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAM,YAAY,GAAG,KAAK,cAAL,CAAoB,eAApB,EAArB;;AACA,YAAM,iBAAiB,GAAG,KAAK,YAAL,CAAkB,GAAlB,GAAwB,6BAAlD;AACA,YAAM,oBAAoB,GAAG,YAAY,CAAC,MAAb,GAAsB,KAAK,YAAL,CAAkB,MAAxC,GAAiD,6BAA9E;AACA,YAAM,cAAc,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,QAAd,CAAvB;AACA,YAAM,gBAAgB,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,aAAL,KAAuB,UAAhC,EAA4C,uBAA5C,CAAzB;AACA,YAAM,iBAAiB,GAAG,gBAAgB,GAAG,cAAnB,GAAoC,KAAK,YAAL,CAAkB,MAAhF;;AACA,YAAI,iBAAiB,GAAG,oBAAxB,EAA8C;AAC1C,eAAK,cAAL,CAAoB,iBAApB,EAAuC,oBAAvC;AACH,SAFD,MAGK,IAAI,cAAc,GAAG,iBAArB,EAAwC;AACzC,eAAK,gBAAL,CAAsB,cAAtB,EAAsC,iBAAtC,EAAyD,SAAzD;AACH,SAFI,MAGA;AACD,eAAK,gBAAL,GAAwB,KAAK,uBAAL,EAAxB;AACH;AACJ;AACD;;;;aACA,wBAAe,iBAAf,EAAkC,oBAAlC,EAAsD;AAClD;AACA,YAAM,qBAAqB,GAAG,IAAI,CAAC,KAAL,CAAW,iBAAiB,GAAG,oBAA/B,CAA9B,CAFkD,CAGlD;AACA;;AACA,aAAK,UAAL,IAAmB,qBAAnB;AACA,aAAK,QAAL,IAAiB,qBAAjB;AACA,aAAK,gBAAL,GAAwB,KAAK,uBAAL,EAAxB,CAPkD,CAQlD;AACA;AACA;;AACA,YAAI,KAAK,UAAL,IAAmB,CAAvB,EAA0B;AACtB,eAAK,UAAL,GAAkB,CAAlB;AACA,eAAK,QAAL,GAAgB,CAAhB;AACA,eAAK,gBAAL;AACH;AACJ;AACD;;;;aACA,0BAAiB,cAAjB,EAAiC,iBAAjC,EAAoD,SAApD,EAA6D;AACzD;AACA,YAAM,qBAAqB,GAAG,IAAI,CAAC,KAAL,CAAW,cAAc,GAAG,iBAA5B,CAA9B,CAFyD,CAGzD;AACA;;AACA,aAAK,UAAL,IAAmB,qBAAnB;AACA,aAAK,QAAL,IAAiB,qBAAjB;AACA,aAAK,gBAAL,GAAwB,KAAK,uBAAL,EAAxB,CAPyD,CAQzD;AACA;AACA;;AACA,YAAI,KAAK,UAAL,IAAmB,SAAvB,EAAkC;AAC9B,eAAK,UAAL,GAAkB,SAAlB;AACA,eAAK,QAAL,GAAgB,CAAhB;AACA,eAAK,gBAAL;AACA;AACH;AACJ;AACD;;;;aACA,qCAAyB;AACrB,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAM,KAAK,GAAG,KAAK,aAAL,EAAd;;AACA,YAAM,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,GAAG,UAAjB,EAA6B,uBAA7B,CAApB;AACA,YAAM,qBAAqB,GAAG,KAAK,GAAG,UAAtC,CAJqB,CAKrB;;AACA,YAAM,SAAS,GAAG,qBAAqB,GAAG,WAA1C,CANqB,CAOrB;;AACA,YAAI,oBAAJ;;AACA,YAAI,KAAK,KAAT,EAAgB;AACZ,8BAAoB,GAAG,CAAvB;AACH,SAFD,MAGK;AACD,8BAAoB,GAChB,IAAI,CAAC,GAAL,CAAS,KAAK,OAAL,CAAa,OAAb,GAAuB,OAAvB,CAA+B,KAAK,eAAL,CAAqB,QAArB,CAA8B,CAA9B,CAA/B,CAAT,EAA2E,CAA3E,CADJ;AAEH;;AACD,4BAAoB,IAAI,sFAA6B,CAAC,oBAAD,EAAuB,KAAK,OAA5B,EAAqC,KAAK,YAA1C,CAArD,CAhBqB,CAiBrB;AACA;;AACA,YAAM,YAAY,GAAG,WAAW,GAAG,CAAnC;AACA,aAAK,UAAL,GAAkB,KAAK,uBAAL,CAA6B,oBAA7B,EAAmD,YAAnD,EAAiE,SAAjE,CAAlB;AACA,aAAK,QAAL,GAAgB,KAAK,wBAAL,CAA8B,oBAA9B,EAAoD,YAApD,EAAkE,SAAlE,CAAhB;;AACA,aAAK,2BAAL,CAAiC,SAAjC;AACH;AACD;;;;aACA,mCAAuB;AACnB,YAAM,UAAU,GAAG,KAAK,cAAL,EAAnB;;AACA,YAAM,sBAAsB,GAAG,CAAC,UAAU,GAAG,KAAK,YAAL,CAAkB,MAAhC,IAA0C,CAAzE;AACA,YAAM,OAAO,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,QAAd,IAA0B,sBAA1B,GAAmD,UAAU,GAAG,CAAhF;AACA,6BAAc,OAAd;AACH;AACD;;;;aACA,0BAAc;AACV,eAAO,KAAK,gBAAL,GAAwB,qBAA/B;AACH;AACD;;;;aACA,yBAAa;AACT,eAAO,KAAK,OAAL,CAAa,MAAb,GAAsB,KAAK,YAAL,CAAkB,MAA/C;AACH;;;;IApSmB,c;;AAsSxB,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC;AAAc,QAAI,sBAAJ;AAA4B,WAAO,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,aAAO,CAAC,sBAAsB,KAAK,sBAAsB,GAAG,oEAA6B,SAA7B,CAA9B,CAAvB,EAA+F,CAAC,IAAI,SAApG,CAAP;AAAwH,KAA/J;AAAkK,GAA5M,EAA/B;;AACA,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,SAAR;AAAmB,aAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgD,kBAAc,EAAE,SAAS,wBAAT,CAAkC,EAAlC,EAAsC,GAAtC,EAA2C,QAA3C,EAAmD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACnL,qEAAsB,QAAtB,EAAgC,kBAAhC,EAAoD,CAApD;AACA,qEAAsB,QAAtB,EAAgC,8DAAhC,EAA2C,CAA3C;AACA,qEAAsB,QAAtB,EAAgC,iEAAhC,EAA8C,CAA9C;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,aAAJ,GAAoB,EAAE,CAAC,KAA5E;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,OAAJ,GAAc,EAAnE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,YAAJ,GAAmB,EAAxE;AACH;AAAE,KATiD;AAS/C,aAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,mBAArB,EAA0C,MAA1C,EAAkD,eAAlD,EAAmE,MAAnE,EAA2E,CAA3E,EAA8E,YAA9E,CAToC;AASyD,YAAQ,EAAE,EATnE;AASuE,gBAAY,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC5L,iEAAkB,SAAlB,EAA6B,SAAS,oCAAT,CAA8C,MAA9C,EAAoD;AAAI,iBAAO,GAAG,CAAC,cAAJ,CAAmB,MAAnB,CAAP;AAAoC,SAAzH,EAA2H,OAA3H,EAAoI,SAAS,kCAAT,GAA2C;AAAK,iBAAO,GAAG,CAAC,QAAJ,EAAP;AAAwB,SAA5M,EAA8M,MAA9M,EAAsN,SAAS,iCAAT,GAA0C;AAAK,iBAAO,GAAG,CAAC,OAAJ,EAAP;AAAuB,SAA5R;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,kEAAmB,IAAnB,EAAyB,GAAG,CAAC,EAA7B,EAAiC,UAAjC,EAA6C,GAAG,CAAC,QAAjD,EAA2D,eAA3D,EAA4E,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,EAAJ,GAAS,QAAzB,GAAoC,IAAhH,EAAsH,eAAtH,EAAuI,GAAG,CAAC,SAA3I,EAAsJ,YAAtJ,EAAoK,GAAG,CAAC,SAAJ,IAAiB,IAArL,EAA2L,eAA3L,EAA4M,GAAG,CAAC,QAAJ,CAAa,QAAb,EAA5M,EAAqO,eAArO,EAAsP,GAAG,CAAC,QAAJ,CAAa,QAAb,EAAtP,EAA+Q,cAA/Q,EAA+R,GAAG,CAAC,UAAnS,EAA+S,kBAA/S,EAAmU,GAAG,CAAC,gBAAJ,IAAwB,IAA3V,EAAiW,uBAAjW,EAA0X,GAAG,CAAC,wBAAJ,EAA1X;AACA,kEAAmB,qBAAnB,EAA0C,GAAG,CAAC,QAA9C,EAAwD,oBAAxD,EAA8E,GAAG,CAAC,UAAlF,EAA8F,qBAA9F,EAAqH,GAAG,CAAC,QAAzH,EAAmI,kBAAnI,EAAuJ,GAAG,CAAC,KAA3J,EAAkK,qBAAlK,EAAyL,GAAG,CAAC,QAA7L;AACH;AAAE,KAdiD;AAc/C,UAAM,EAAE;AAAE,cAAQ,EAAE,UAAZ;AAAwB,mBAAa,EAAE,eAAvC;AAAwD,cAAQ,EAAE;AAAlE,KAduC;AAcyC,YAAQ,EAAE,CAAC,WAAD,CAdnD;AAckE,YAAQ,EAAE,cAAC,iEAA0B,CACnJ;AAAE,aAAO,EAAE,8EAAX;AAAgC,iBAAW,EAAE;AAA7C,KADmJ,EAEnJ;AAAE,aAAO,EAAE,gFAAX;AAAwC,iBAAW,EAAE;AAArD,KAFmJ,CAA1B,CAAD,EAGxH,wEAHwH,CAd5E;AAiBR,sBAAkB,EAAE,GAjBZ;AAiBiB,SAAK,EAAE,CAjBxB;AAiB2B,QAAI,EAAE,EAjBjC;AAiBqC,UAAM,EAAE,CAAC,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,CAA3B,EAA8B,oBAA9B,EAAoD,CAApD,EAAuD,OAAvD,CAAD,EAAkE,CAAC,QAAD,EAAW,kBAAX,EAA+B,SAA/B,EAA0C,EAA1C,CAAlE,EAAiH,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,UAA3B,CAAjH,EAAyJ,CAAC,OAAD,EAAU,4CAAV,EAAwD,CAAxD,EAA2D,cAA3D,CAAzJ,EAAqO,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,CAAlD,EAAqD,cAArD,CAArO,EAA2S,CAAC,CAAD,EAAI,0BAAJ,CAA3S,EAA4U,CAAC,CAAD,EAAI,kBAAJ,CAA5U,EAAqW,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,iCAA9B,EAAiE,EAAjE,EAAqE,gCAArE,EAAuG,EAAvG,EAA2G,kCAA3G,EAA+I,kCAA/I,EAAmL,CAAnL,EAAsL,+BAAtL,EAAuN,mCAAvN,EAA4P,2BAA5P,EAAyR,yBAAzR,EAAoT,8BAApT,EAAoV,6BAApV,EAAmX,4BAAnX,EAAiZ,eAAjZ,EAAka,QAAla,EAA4a,QAA5a,CAArW,EAA4xB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,qBAA9B,CAA5xB,EAAk1B,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAAl1B,EAA+3B,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,iBAApC,CAA/3B,EAAu7B,CAAC,CAAD,EAAI,cAAJ,CAAv7B,EAA48B,CAAC,CAAD,EAAI,qBAAJ,CAA58B,EAAw+B,CAAC,CAAD,EAAI,uBAAJ,CAAx+B,EAAsgC,CAAC,MAAD,EAAS,SAAT,EAAoB,UAApB,EAAgC,IAAhC,EAAsC,CAAtC,EAAyC,SAAzC,EAAoD,SAApD,CAAtgC,EAAskC,CAAC,OAAD,EAAU,EAAV,CAAtkC,CAjB7C;AAiBmoC,YAAQ,EAAE,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,GAAhC,EAAmC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAChvC,sEAAuB,GAAvB;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;AACA,iEAAkB,OAAlB,EAA2B,SAAS,uCAAT,GAAgD;AAAK,iBAAO,GAAG,CAAC,MAAJ,EAAP;AAAsB,SAAtG;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,iEAAkB,CAAlB,EAAqB,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;AACA,iEAAkB,CAAlB,EAAqB,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;AACA;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA;AACA;AACA,iEAAkB,CAAlB,EAAqB,gCAArB,EAAuD,CAAvD,EAA0D,EAA1D,EAA8D,aAA9D,EAA6E,CAA7E;AACA,iEAAkB,eAAlB,EAAmC,SAAS,uDAAT,GAAgE;AAAK,iBAAO,GAAG,CAAC,KAAJ,EAAP;AAAqB,SAA7H,EAA+H,QAA/H,EAAyI,SAAS,gDAAT,GAAyD;AAAK,iBAAO,GAAG,CAAC,WAAJ,EAAP;AAA2B,SAAlO,EAAoO,QAApO,EAA8O,SAAS,gDAAT,GAAyD;AAAK,iBAAO,GAAG,CAAC,KAAJ,EAAP;AAAqB,SAAjU;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAM,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,kEAAmB,WAAnB,EAAgC,GAAG,CAAC,SAAJ,GAAgB,GAAG,CAAC,EAAJ,GAAS,QAAzB,GAAoC,IAApE;AACA,gEAAiB,CAAjB;AACA,iEAAkB,UAAlB,EAA8B,GAAG,CAAC,KAAlC;AACA,kEAAmB,IAAnB,EAAyB,GAAG,CAAC,QAA7B;AACA,gEAAiB,CAAjB;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;AACA,gEAAiB,CAAjB;AACA,iEAAkB,cAAlB,EAAkC,KAAlC;AACA,gEAAiB,CAAjB;AACA,iEAAkB,+BAAlB,EAAmD,GAAG,CAAC,kBAAvD,EAA2E,mCAA3E,EAAgH,GAAG,CAAC,eAApH,EAAqI,2BAArI,EAAkK,GAAlK,EAAuK,yBAAvK,EAAkM,GAAG,CAAC,SAAtM,EAAiN,8BAAjN,EAAiP,GAAG,CAAC,UAArP,EAAiQ,6BAAjQ,EAAgS,GAAG,CAAC,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkC,GAAG,CAAC,YAAJ,CAAiB,KAAnV,EAA0V,4BAA1V,EAAwX,GAAG,CAAC,QAA5X;AACH;AAAE,KA3CiD;AA2C/C,cAAU,EAAE,CAAC,mEAAD,EAA0B,sDAA1B,EAA2C,0DAA3C,EAAgE,sEAAhE,EAA4F,6DAA5F,EAAoH,qDAApH,CA3CmC;AA2CkG,UAAM,EAAE,CAAC,stEAAD,CA3C1G;AA2Co0E,iBAAa,EAAE,CA3Cn1E;AA2Cs1E,QAAI,EAAE;AAAE,eAAS,EAAE,CACr5E,mBAAmB,CAAC,kBADi4E,EAEr5E,mBAAmB,CAAC,cAFi4E;AAAb,KA3C51E;AA8C3C,mBAAe,EAAE;AA9C0B,GAAzB,CAA/B;;;;;MAoHM,e;;;;AAEN,iBAAe,CAAC,IAAhB,GAAuB,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,WAAO,KAAK,CAAC,IAAI,eAAV,GAAP;AAAsC,GAAnG;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAArC;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAAC,mCAAD,CAAb;AAAoD,WAAO,EAAE,CAAC,CAC/G,0DAD+G,EAE/G,gEAF+G,EAG/G,oEAH+G,EAI/G,oEAJ+G,CAAD,EAK/G,wEAL+G,EAMlH,6EANkH,EAOlH,oEAPkH,EAQlH,oEARkH;AAA7D,GAAxB,CAArC;;;AA8BA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,eAA1B,EAA2C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,SAAD,EAAY,gBAAZ,CAAP;AAAuC,KAArE;AAAuE,WAAO,EAAE;AAAc,aAAO,CAAC,0DAAD,EAC1M,gEAD0M,EAE1M,oEAF0M,EAG1M,oEAH0M,CAAP;AAGhL,KAHkF;AAGhF,WAAO,EAAE;AAAc,aAAO,CAAC,wEAAD,EACnD,6EADmD,EAC/B,SAD+B,EACpB,gBADoB,EACF,oEADE,EAEnD,oEAFmD,CAAP;AAEzB;AALkF,GAA3C,CAAnD;AAKkB,CALjC;AAOA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACr9CH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;AACA;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,iBAAD,EAAoB,EAApB,CAAZ;;AACA,SAAS,4BAAT,CAAsC,EAAtC,EAA0C,GAA1C,EAA6C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzD,QAAM,GAAG,GAAG,gEAAZ;;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,6DAAkB,sBAAlB,EAA0C,SAAS,yEAAT,GAAkF;AAAK,kEAAqB,GAArB;AAA2B,UAAM,MAAM,GAAG,6DAAf;AAAuC,aAAO,MAAM,CAAC,0BAAP,GAAoC,IAA3C;AAAkD,KAArP,EAAuP,qBAAvP,EAA8Q,SAAS,wEAAT,GAAiF;AAAK,kEAAqB,GAArB;AAA2B,UAAM,MAAM,GAAG,6DAAf;AAAuC,aAAO,MAAM,CAAC,0BAAP,GAAoC,KAA3C;AAAmD,KAAzd;AACA,4DAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,4DAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA,4DAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA,4DAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,eAAlB,EAAmC,MAAM,CAAC,kBAAP,EAAnC,EAAgE,gBAAhE,EAAkF,MAAM,CAAC,kBAAP,EAAlF,EAA+G,gBAA/G,EAAiI,MAAM,CAAC,uBAAP,EAAjI;AACA,4DAAiB,CAAjB;AACA,6DAAkB,YAAlB,EAAgC,MAAM,CAAC,uBAAP,EAAhC;AACA,4DAAiB,CAAjB;AACA,6DAAkB,cAAlB,EAAkC,MAAM,CAAC,uBAAP,EAAlC;AACA,4DAAiB,CAAjB;AACA,6DAAkB,eAAlB,EAAmC,MAAM,CAAC,uBAAP,EAAnC;AACH;AAAE;;AACH,IAAM,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,SAAS,+BAAT,CAAyC,EAAzC,EAA2C;AACvC,SAAO,KAAK,0DAAmD,EAAnD,QAAZ;AACH;AACD;;;AACA,SAAS,wCAAT,GAAiD;AAC7C,SAAO,KAAK,oFAAZ;AACH;AACD;;;AACA,SAAS,2BAAT,GAAoC;AAChC,SAAO,KAAK,oDAAZ;AACH;AACD;;;AACA,SAAS,4BAAT,CAAsC,SAAtC,EAA+C;AAC3C,SAAO,KAAK,WAAI,SAAJ,uDAAZ;AACH;AAED;;;;;;AAMG;;AACH;;;AACA,IAAM,wBAAwB,gBAAG,IAAI,yDAAJ,CAAmB,0BAAnB,CAAjC,C,CACA;;AACA;;AACA,IAAM,YAAY,gBAAG,wEAAgB,eAAC,qEAAa;AAAA;AAAA;AAAA;;AAAA;AAAA,IAAd,CAArC;;;MAGM,O;;;;;AACF,qBAAY,eAAZ,EAA2B;AAAA;;AAAA;;AACvB;AACA,YAAK,eAAL,GAAuB,eAAvB;AACA;;AACA,YAAK,SAAL,GAAiB,IAAI,GAAJ,EAAjB;AACA;;AACA,YAAK,aAAL,GAAqB,IAAI,yCAAJ,EAArB;AACA;;;AAGG;;AACH,YAAK,KAAL,GAAa,KAAb;AACA,YAAK,UAAL,GAAkB,EAAlB;AACA;;AACA,YAAK,UAAL,GAAkB,IAAI,uDAAJ,EAAlB;AAduB;AAe1B;AACD;;;;;WACA,eAAa;AAAK,eAAO,KAAK,UAAZ;AAAyB,O;WAC3C,aAAc,SAAd,EAAuB;AACnB,YAAI,SAAS,IAAI,SAAS,KAAK,KAA3B,IAAoC,SAAS,KAAK,MAAlD,KACC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SADrC,CAAJ,EACqD;AACjD,gBAAM,4BAA4B,CAAC,SAAD,CAAlC;AACH;;AACD,aAAK,UAAL,GAAkB,SAAlB;AACH;AACD;;;AAGG;;;;WACH,eAAgB;AAAK,eAAO,KAAK,aAAZ;AAA4B,O;WACjD,aAAiB,CAAjB,EAAkB;AAAI,aAAK,aAAL,GAAqB,4EAAqB,CAAC,CAAD,CAA1C;AAAgD;AACtE;;;AAGG;;;;aACH,kBAAS,QAAT,EAAiB;AACb,YAAI,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAxC,EAAmD;AAC/C,cAAI,CAAC,QAAQ,CAAC,EAAd,EAAkB;AACd,kBAAM,2BAA2B,EAAjC;AACH;;AACD,cAAI,KAAK,SAAL,CAAe,GAAf,CAAmB,QAAQ,CAAC,EAA5B,CAAJ,EAAqC;AACjC,kBAAM,+BAA+B,CAAC,QAAQ,CAAC,EAAV,CAArC;AACH;AACJ;;AACD,aAAK,SAAL,CAAe,GAAf,CAAmB,QAAQ,CAAC,EAA5B,EAAgC,QAAhC;AACH;AACD;;;AAGG;;;;aACH,oBAAW,QAAX,EAAmB;AACf,aAAK,SAAL,CAAe,MAAf,CAAsB,QAAQ,CAAC,EAA/B;AACH;AACD;;;;aACA,cAAK,QAAL,EAAa;AACT,YAAI,KAAK,MAAL,IAAe,QAAQ,CAAC,EAA5B,EAAgC;AAC5B,eAAK,MAAL,GAAc,QAAQ,CAAC,EAAvB;AACA,eAAK,SAAL,GAAiB,QAAQ,CAAC,KAAT,GAAiB,QAAQ,CAAC,KAA1B,GAAkC,KAAK,KAAxD;AACH,SAHD,MAIK;AACD,eAAK,SAAL,GAAiB,KAAK,oBAAL,CAA0B,QAA1B,CAAjB;AACH;;AACD,aAAK,UAAL,CAAgB,IAAhB,CAAqB;AAAE,gBAAM,EAAE,KAAK,MAAf;AAAuB,mBAAS,EAAE,KAAK;AAAvC,SAArB;AACH;AACD;;;;aACA,8BAAqB,QAArB,EAA6B;AACzB,YAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AACA,YAAI,CAAC,QAAL,EAAe;AACX,iBAAO,EAAP;AACH,SAJwB,CAKzB;;;AACA,YAAM,YAAY,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,QAAQ,KAAK,IAAb,IAAqB,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoD,QAAQ,CAAC,YAAnE,MAAqF,IAArF,IAA6F,EAAE,KAAK,KAAK,CAAzG,GAA6G,EAA7G,GAAkH,KAAK,YAA7H,MAA+I,IAA/I,IAAuJ,EAAE,KAAK,KAAK,CAAnK,GAAuK,EAAvK,GAA4K,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,eAAX,MAAgC,IAAhC,IAAwC,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiE,EAAE,CAAC,YAAtE,CAAlM;AACA,YAAI,kBAAkB,GAAG,qBAAqB,CAAC,QAAQ,CAAC,KAAT,IAAkB,KAAK,KAAxB,EAA+B,YAA/B,CAA9C,CAPyB,CAQzB;;AACA,YAAI,kBAAkB,GAAG,kBAAkB,CAAC,OAAnB,CAA2B,KAAK,SAAhC,IAA6C,CAAtE;;AACA,YAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAA7C,EAAqD;AACjD,4BAAkB,GAAG,CAArB;AACH;;AACD,eAAO,kBAAkB,CAAC,kBAAD,CAAzB;AACH;;;aACD,oBAAQ;AACJ,aAAK,gBAAL;AACH;;;aACD,uBAAW;AACP,aAAK,aAAL,CAAmB,IAAnB;AACH;;;aACD,uBAAW;AACP,aAAK,aAAL,CAAmB,QAAnB;AACH;;;;IAzFiB,Y;;AA2FtB,SAAO,CAAC,IAAR,GAAe,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,WAAO,KAAK,CAAC,IAAI,OAAV,EAAmB,gEAAyB,wBAAzB,EAAmD,CAAnD,CAAnB,CAAP;AAAmF,GAAhI;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAD,CAA5B;AAAmD,aAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAA9D;AAA+E,UAAM,EAAE;AAAE,cAAQ,EAAE,CAAC,iBAAD,EAAoB,UAApB,CAAZ;AAA6C,WAAK,EAAE,CAAC,cAAD,EAAiB,OAAjB,CAApD;AAA+E,eAAS,EAAE,CAAC,kBAAD,EAAqB,WAArB,CAA1F;AAA6H,kBAAY,EAAE,CAAC,qBAAD,EAAwB,cAAxB,CAA3I;AAAoL,YAAM,EAAE,CAAC,eAAD,EAAkB,QAAlB;AAA5L,KAAvF;AAAkT,WAAO,EAAE;AAAE,gBAAU,EAAE;AAAd,KAA3T;AAA4V,YAAQ,EAAE,CAAC,SAAD,CAAtW;AAAmX,YAAQ,EAAE,CAAC,wEAAD,EAAoC,kEAApC;AAA7X,GAAzB,CAA7B;;;AAwCA;;;AACA,SAAS,qBAAT,CAA+B,KAA/B,EAAsC,YAAtC,EAAkD;AAC9C,MAAI,SAAS,GAAG,CAAC,KAAD,EAAQ,MAAR,CAAhB;;AACA,MAAI,KAAK,IAAI,MAAb,EAAqB;AACjB,aAAS,CAAC,OAAV;AACH;;AACD,MAAI,CAAC,YAAL,EAAmB;AACf,aAAS,CAAC,IAAV,CAAe,EAAf;AACH;;AACD,SAAO,SAAP;AACH;AAED;;;;;;AAMG;;;AACH,IAAM,yBAAyB,GAAG,kFAA8B,GAA9B,GAC9B,kFADJ;AAEA;;;AAGG;;AACH,IAAM,iBAAiB,GAAG;AACtB;AACA,WAAS,eAAE,4DAAO,CAAC,WAAD,EAAc,C,aAC5B,0DAAK,CAAC,iBAAD,EAAkB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAzB,CADuB,EAE5B;;;AACA,4DAAK,CAAC,mBAAD,EAAoB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAA3B,CAHuB,E,aAI5B,+DAAU,CAAC,4BAAD,EAA6B,aAAE,4DAAO,CAAC,yBAAD,CAAtC,CAJkB,CAAd,CAFI;;AAQtB;AACA,aAAW,eAAE,4DAAO,CAAC,aAAD,EAAgB,C,aAChC,0DAAK,CAAC,iBAAD,EAAkB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAzB,CAD2B,E,aAEhC,0DAAK,CAAC,mBAAD,EAAoB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAA3B,CAF2B,E,aAGhC,+DAAU,CAAC,4BAAD,EAA6B,aAAE,4DAAO,CAAC,yBAAD,CAAtC,CAHsB,CAAhB,CATE;;AActB;AACA,cAAY,eAAE,4DAAO,CAAC,cAAD,EAAiB,C,aAClC,0DAAK,CAAC,iBAAD,EAAkB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAzB,CAD6B,E,aAElC,0DAAK,CAAC,mBAAD,EAAoB,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAA3B,CAF6B,E,aAGlC,+DAAU,CAAC,4BAAD,EAA6B,aAAE,4DAAO,CAAC,yBAAD,CAAtC,CAHwB,CAAjB,CAfC;;AAoBtB;AACA,cAAY,eAAE,4DAAO,CAAC,cAAD,EAAiB,C,aAClC,0DAAK,CAAC,uCAAD,EAAwC,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE;AAAX,GAAD,CAA/C,CAD6B,E,aAElC,0DAAK,CAAC,iCAAD,EAAkC,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE;AAAX,GAAD,CAAzC,CAF6B,E,aAGlC,0DAAK,CAAC,2EAAD,EAA4E,aAAE,0DAAK,CAAC;AAAE,WAAO,EAAE;AAAX,GAAD,CAAnF,CAH6B,EAIlC;;;AACA,iEAAU,CAAC,wDAAD,EAAyD,aAAE,4DAAO,CAAC,KAAD,CAAlE,CALwB,E,aAMlC,+DAAU,CAAC,SAAD,EAAU,aAAE,4DAAO,CAAC,yBAAD,CAAnB,CANwB,CAAjB,CArBC;;AA6BtB;;;;;;AAMG;AACH,eAAa,eAAE,4DAAO,CAAC,eAAD,EAAkB,CACpC;;;AACA,iEAAU,CAAC,wCAAD,EAAyC,aAAE,4DAAO,CAAC,yBAAD,EAA0B,aAAE,8DAAS,CAAC,C,aAC9F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CADyF,E,aAE9F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAFyF,CAAD,CAArC,CAAlD,CAF0B,EAMpC;;;AACA,iEAAU,CAAC,wCAAD,EAAyC,aAAE,4DAAO,CAAC,yBAAD,EAA0B,aAAE,8DAAS,CAAC,C,aAC9F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CADyF,E,aAE9F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAFyF,CAAD,CAArC,CAAlD,CAP0B,EAWpC;;;AACA,iEAAU,CAAC,sCAAD,EAAuC,aAAE,4DAAO,CAAC,yBAAD,EAA0B,aAAE,8DAAS,CAAC,C,aAC5F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CADuF,E,aAE5F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAFuF,CAAD,CAArC,CAAhD,CAZ0B,EAgBpC;;;AACA,iEAAU,CAAC,sCAAD,EAAuC,aAAE,4DAAO,CAAC,yBAAD,EAA0B,aAAE,8DAAS,CAAC,C,aAC5F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CADuF,E,aAE5F,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAFuF,CAAD,CAArC,CAAhD,CAjB0B,E,aAqBpC,0DAAK,CAAC,wEAAD,EAAyE,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAhF,CArB+B,E,aAsBpC,0DAAK,CAAC,oCAAD,EAAqC,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAA5C,CAtB+B,E,aAuBpC,0DAAK,CAAC,iCAAD,EAAkC,aAAE,0DAAK,CAAC;AAAE,aAAS,EAAE;AAAb,GAAD,CAAzC,CAvB+B,CAAlB,CApCA;;AA6DtB;AACA,eAAa,eAAE,4DAAO,CAAC,eAAD,EAAkB,C,aACpC,+DAAU,CAAC,SAAD,EAAY,C,aAClB,0DAAK,CAAC,IAAD,EAAK,aAAE,iEAAY,EAAnB,EAAuB;AAAE,YAAQ,EAAE;AAAZ,GAAvB,CADa,CAAZ,CAD0B,CAAlB;AA9DA,CAA1B;;;MAkFM,iB,GACF;AAAA;;AACI;;;AAGG;AACH,SAAK,OAAL,GAAe,IAAI,yCAAJ,EAAf;AACH,G;;AAEL,mBAAiB,CAAC,IAAlB,GAAyB,SAAS,yBAAT,CAAmC,CAAnC,EAAoC;AAAI,WAAO,KAAK,CAAC,IAAI,iBAAV,GAAP;AAAwC,GAAzG;;AACA,mBAAiB,CAAC,KAAlB,GAAuB,aAAG,iEAAsB;AAAE,WAAO,EAAE,SAAS,yBAAT,GAAkC;AAAK,aAAO,IAAI,iBAAJ,EAAP;AAAiC,KAAnF;AAAqF,SAAK,EAAE,iBAA5F;AAA+G,cAAU,EAAE;AAA3H,GAAtB,CAA1B;;;AAKA;;;AACA,SAAS,qCAAT,CAA+C,UAA/C,EAAyD;AACrD,SAAO,UAAU,IAAI,IAAI,iBAAJ,EAArB;AACH;AACD;;;AACA,IAAM,6BAA6B,GAAG;AAClC;AACA,SAAO,EAAE,iBAFyB;AAGlC,MAAI,EAAE,CAAC,cAAC,IAAI,mDAAJ,EAAD,EAAe,aAAE,IAAI,mDAAJ,EAAjB,EAAiC,iBAAjC,CAAD,CAH4B;AAIlC,YAAU,EAAE;AAJsB,CAAtC;AAOA;;;;;;AAMG;AACH;;AACA;;AACA,IAAM,kBAAkB,gBAAG,qEAAa;AAAA;AAAA;AAAA;;AAAA;AAAA,IAAxC;;;MAWM,a;;;;;AACF;AACA;;;AAGG;AACH,SALA,EAKO,kBALP,EAMA;AACA;AACA,SARA,EAQO,UARP,EAQmB,aARnB,EAQkC,WARlC,EAQ6C;AAAA;;AAAA;;AACzC;AACA;AACA;AACA;AACA;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,kBAAL,GAA0B,kBAA1B;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,UAAL,GAAkB,UAAlB;AACA,aAAK,aAAL,GAAqB,aAArB;AACA,aAAK,WAAL,GAAmB,WAAnB;AACA;;;AAGG;;AACH,aAAK,kBAAL,GAA0B,KAA1B;AACA;;;;AAIG;;AACH,aAAK,UAAL,GAAkB,EAAlB;AACA;;AACA,aAAK,eAAL,GAAuB,EAAvB;AACA;;AAEG;;AACH,aAAK,0BAAL,GAAkC,KAAlC;AACA;;AACA,aAAK,aAAL,GAAqB,OAArB;;AACA,UAAI,CAAC,KAAD,KAAW,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAA/C,CAAJ,EAA+D;AAC3D,cAAM,wCAAwC,EAA9C;AACH;;AACD,aAAK,mBAAL;;AAlCyC;AAmC5C;AACD;;;;;WACA,eAAgB;AAAK,eAAO,KAAK,aAAZ;AAA4B,O;WACjD,aAAiB,CAAjB,EAAkB;AAAI,aAAK,aAAL,GAAqB,4EAAqB,CAAC,CAAD,CAA1C;AAAgD;;;aACtE,oBAAQ;AACJ,YAAI,CAAC,KAAK,EAAN,IAAY,KAAK,UAArB,EAAiC;AAC7B,eAAK,EAAL,GAAU,KAAK,UAAL,CAAgB,IAA1B;AACH,SAHG,CAIJ;;;AACA,aAAK,qBAAL;;AACA,aAAK,4BAAL,CAAkC;AAAE,iBAAO,EAAE,KAAK,SAAL,KAAmB,QAAnB,GAA8B,KAAK;AAA9C,SAAlC;;AACA,aAAK,KAAL,CAAW,QAAX,CAAoB,IAApB;AACH;;;aACD,2BAAe;AAAA;;AACX;AACA;AACA,aAAK,aAAL,CAAmB,OAAnB,CAA2B,KAAK,WAAhC,EAA6C,IAA7C,EAAmD,SAAnD,CAA6D,gBAAM,EAAG;AAClE,cAAM,QAAQ,GAAG,CAAC,CAAC,MAAnB;;AACA,cAAI,QAAQ,KAAK,MAAI,CAAC,kBAAtB,EAA0C;AACtC,kBAAI,CAAC,wBAAL,CAA8B,QAA9B;;AACA,kBAAI,CAAC,kBAAL,CAAwB,YAAxB;AACH;AACJ,SAND;AAOH;;;aACD,uBAAW;AACP,aAAK,aAAL,CAAmB,cAAnB,CAAkC,KAAK,WAAvC;;AACA,aAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB;;AACA,aAAK,qBAAL,CAA2B,WAA3B;AACH;AACD;;;AAGG;;;;aACH,kCAAyB,OAAzB,EAAgC;AAC5B;AACA,YAAI,KAAK,WAAL,MAAsB,OAA1B,EAAmC;AAC/B;AACH;;AACD,aAAK,kBAAL,GAA0B,OAA1B;;AACA,YAAI,CAAC,KAAK,SAAL,EAAL,EAAuB;AACnB,eAAK,qBAAL;;AACA,cAAI,KAAK,kBAAT,EAA6B;AACzB,iBAAK,4BAAL,CAAkC;AAAE,uBAAS,EAAE,KAAK,eAAlB;AAAmC,qBAAO,EAAE;AAA5C,aAAlC;AACH,WAFD,MAGK;AACD,iBAAK,4BAAL,CAAkC;AAAE,uBAAS,EAAE,MAAb;AAAqB,qBAAO,EAAE,KAAK;AAAnC,aAAlC;AACH;AACJ;AACJ;AACD;;;;AAIG;;;;aACH,sCAA6B,SAA7B,EAAsC;AAClC,aAAK,UAAL,GAAkB,SAAS,IAAI,EAA/B,CADkC,CAElC;AACA;;AACA,YAAI,KAAK,0BAAT,EAAqC;AACjC,eAAK,UAAL,GAAkB;AAAE,mBAAO,EAAE,SAAS,CAAC;AAArB,WAAlB;AACH;AACJ;AACD;;;;aACA,gCAAoB;AAChB,aAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,EADgB,CAEhB;;;AACA,YAAI,KAAK,UAAL,CAAgB,OAAhB,KAA4B,MAA5B,IAAsC,KAAK,UAAL,CAAgB,OAAhB,KAA4B,QAAtE,EAAgF;AAC5E,eAAK,0BAAL,GAAkC,IAAlC;AACH;AACJ;;;aACD,wBAAY;AACR,YAAI,CAAC,KAAK,WAAL,EAAL,EAAyB;AACrB,eAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACH;AACJ;;;aACD,wBAAe,KAAf,EAAoB;AAChB,YAAI,CAAC,KAAK,WAAL,EAAD,KAAwB,KAAK,CAAC,OAAN,KAAkB,wDAAlB,IAA2B,KAAK,CAAC,OAAN,KAAkB,wDAArE,CAAJ,EAAiF;AAC7E,eAAK,CAAC,cAAN;;AACA,eAAK,oBAAL;AACH;AACJ;AACD;;;;aACA,qBAAS;AACL,eAAO,KAAK,KAAL,CAAW,MAAX,IAAqB,KAAK,EAA1B,KACF,KAAK,KAAL,CAAW,SAAX,KAAyB,KAAzB,IAAkC,KAAK,KAAL,CAAW,SAAX,KAAyB,MADzD,CAAP;AAEH;AACD;;;;aACA,mCAAuB;AACnB,yBAAU,KAAK,SAAL,KAAmB,SAAnB,GAA+B,EAAzC,SAA8C,KAAK,eAAnD;AACH;AACD;;;;aACA,8BAAkB;AACd,YAAM,SAAS,GAAG,KAAK,UAAL,CAAgB,SAAlC;AACA,eAAO,CAAC,SAAS,aAAM,SAAN,YAAwB,EAAlC,IAAwC,KAAK,UAAL,CAAgB,OAA/D;AACH;AACD;;;;;;;;;AASG;;;;aACH,iCAAqB;AACjB,aAAK,eAAL,GAAuB,KAAK,SAAL,KACnB,KAAK,KAAL,CAAW,SADQ,GAElB,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,KAF9B;AAGH;;;aACD,uBAAW;AACP,eAAO,KAAK,KAAL,CAAW,QAAX,IAAuB,KAAK,QAAnC;AACH;AACD;;;;;AAKG;;;;aACH,iCAAqB;AACjB,YAAI,CAAC,KAAK,SAAL,EAAL,EAAuB;AACnB,iBAAO,MAAP;AACH;;AACD,eAAO,KAAK,KAAL,CAAW,SAAX,IAAwB,KAAxB,GAAgC,WAAhC,GAA8C,YAArD;AACH;AACD;;;;aACA,wBAAY;AACR,eAAO,CAAC,KAAK,WAAL,EAAD,IAAuB,KAAK,SAAL,EAA9B;AACH;AACD;;;;aACA,+BAAmB;AAAA;;AACf,aAAK,qBAAL,GACI,4CAAK,CAAC,KAAK,KAAL,CAAW,UAAZ,EAAwB,KAAK,KAAL,CAAW,aAAnC,EAAkD,KAAK,KAAL,CAAW,OAA7D,CAAL,CAA2E,SAA3E,CAAqF,YAAK;AACtF,cAAI,MAAI,CAAC,SAAL,EAAJ,EAAsB;AAClB,kBAAI,CAAC,qBAAL,GADkB,CAElB;;;AACA,gBAAI,MAAI,CAAC,UAAL,CAAgB,OAAhB,KAA4B,MAA5B,IAAsC,MAAI,CAAC,UAAL,CAAgB,OAAhB,KAA4B,QAAtE,EAAgF;AAC5E,oBAAI,CAAC,0BAAL,GAAkC,IAAlC;AACH;;AACD,kBAAI,CAAC,4BAAL,CAAkC;AAAE,uBAAS,EAAE,MAAI,CAAC,eAAlB;AAAmC,qBAAO,EAAE;AAA5C,aAAlC;;AACA,kBAAI,CAAC,kBAAL,GAA0B,KAA1B;AACH,WATqF,CAUtF;;;AACA,cAAI,CAAC,MAAI,CAAC,SAAL,EAAD,IAAqB,MAAI,CAAC,UAA1B,IAAwC,MAAI,CAAC,UAAL,CAAgB,OAAhB,KAA4B,QAAxE,EAAkF;AAC9E,kBAAI,CAAC,0BAAL,GAAkC,KAAlC;;AACA,kBAAI,CAAC,4BAAL,CAAkC;AAAE,uBAAS,EAAE,QAAb;AAAuB,qBAAO,EAAE,MAAI,CAAC;AAArC,aAAlC;AACH;;AACD,gBAAI,CAAC,kBAAL,CAAwB,YAAxB;AACH,SAhBD,CADJ;AAkBH;;;;IAjMuB,kB;;AAmM5B,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,iBAAzB,CAAzB,EAAsE,gEAAyB,4DAAzB,CAAtE,EAA0H,gEAAyB,OAAzB,EAAkC,CAAlC,CAA1H,EAAgK,gEAAyB,4BAAzB,EAAuD,CAAvD,CAAhK,EAA2N,gEAAyB,4DAAzB,CAA3N,EAA0Q,gEAAyB,qDAAzB,CAA1Q,CAAP;AAAgU,GAAzX;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAAlC;AAAiE,aAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAA5E;AAAoG,YAAQ,EAAE,CAA9G;AAAiH,gBAAY,EAAE,SAAS,0BAAT,CAAoC,EAApC,EAAwC,GAAxC,EAA2C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC9O,iEAAkB,OAAlB,EAA2B,SAAS,sCAAT,GAA+C;AAAK,iBAAO,GAAG,CAAC,YAAJ,EAAP;AAA4B,SAA3G,EAA6G,SAA7G,EAAwH,SAAS,wCAAT,CAAkD,MAAlD,EAAwD;AAAI,iBAAO,GAAG,CAAC,cAAJ,CAAmB,MAAnB,CAAP;AAAoC,SAAxN,EAA0N,YAA1N,EAAwO,SAAS,2CAAT,GAAoD;AAAK,iBAAO,GAAG,CAAC,wBAAJ,CAA6B,IAA7B,CAAP;AAA4C,SAA7U,EAA+U,YAA/U,EAA6V,SAAS,2CAAT,GAAoD;AAAK,iBAAO,GAAG,CAAC,wBAAJ,CAA6B,KAA7B,CAAP;AAA6C,SAAnc;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,kEAAmB,WAAnB,EAAgC,GAAG,CAAC,qBAAJ,EAAhC;AACA,kEAAmB,0BAAnB,EAA+C,GAAG,CAAC,WAAJ,EAA/C;AACH;AAAE,KALqD;AAKnD,UAAM,EAAE;AAAE,cAAQ,EAAE,UAAZ;AAAwB,mBAAa,EAAE,eAAvC;AAAwD,kBAAY,EAAE,cAAtE;AAAsF,QAAE,EAAE,CAAC,iBAAD,EAAoB,IAApB,CAA1F;AAAqH,WAAK,EAAE;AAA5H,KAL2C;AAK4F,YAAQ,EAAE,CAAC,eAAD,CALtG;AAKyH,YAAQ,EAAE,CAAC,wEAAD,CALnI;AAKwK,SAAK,EAAE,GAL/K;AAKoL,sBAAkB,EAAE,GALxM;AAK6M,SAAK,EAAE,CALpN;AAKuN,QAAI,EAAE,CAL7N;AAKgO,UAAM,EAAE,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,2BAAtB,EAAmD,qBAAnD,CAAD,EAA4E,CAAC,CAAD,EAAI,yBAAJ,CAA5E,EAA4G,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA5G,EAA2J,CAAC,CAAD,EAAI,uBAAJ,CAA3J,EAAyL,CAAC,CAAD,EAAI,sBAAJ,CAAzL,EAAsN,CAAC,CAAD,EAAI,2BAAJ,CAAtN,EAAwP,CAAC,CAAD,EAAI,8BAAJ,CAAxP,EAA6R,CAAC,CAAD,EAAI,+BAAJ,CAA7R,EAAmU,CAAC,CAAD,EAAI,gCAAJ,CAAnU,CALxO;AAKmlB,YAAQ,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACxsB;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,mEAAoB,CAApB;AACA;AACA,iEAAkB,CAAlB,EAAqB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;AACA;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,kEAAmB,wBAAnB,EAA6C,GAAG,CAAC,SAAJ,EAA7C,EAA8D,iCAA9D,EAAiG,GAAG,CAAC,aAAJ,IAAqB,QAAtH;AACA,kEAAmB,UAAnB,EAA+B,GAAG,CAAC,WAAJ,KAAoB,IAApB,GAA2B,CAA1D;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,YAAJ,EAA1B;AACH;AAAE,KAlBqD;AAkBnD,cAAU,EAAE,CAAC,kDAAD,CAlBuC;AAkBxB,UAAM,EAAE,CAAC,wtDAAD,CAlBgB;AAkB4sD,iBAAa,EAAE,CAlB3tD;AAkB8tD,QAAI,EAAE;AAAE,eAAS,EAAE,CACjyD,iBAAiB,CAAC,SAD+wD,EAEjyD,iBAAiB,CAAC,WAF+wD,EAGjyD,iBAAiB,CAAC,YAH+wD,EAIjyD,iBAAiB,CAAC,YAJ+wD,EAKjyD,iBAAiB,CAAC,aAL+wD,EAMjyD,iBAAiB,CAAC,aAN+wD;AAAb,KAlBpuD;AAyB/C,mBAAe,EAAE;AAzB8B,GAAzB,CAAnC;;;;;MA6FM,a;;;;AAEN,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,GAAP;AAAoC,GAA7F;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAnC;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAAC,6BAAD,CAAb;AAA8C,WAAO,EAAE,CAAC,CAAC,0DAAD,EAAe,mEAAf,CAAD;AAAvD,GAAxB,CAAnC;;;AAUA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,aAA1B,EAAyC;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,OAAD,EAAU,aAAV,CAAP;AAAkC,KAAhE;AAAkE,WAAO,EAAE;AAAc,aAAO,CAAC,0DAAD,EAAe,mEAAf,CAAP;AAAyC,KAAlI;AAAoI,WAAO,EAAE;AAAc,aAAO,CAAC,OAAD,EAAU,aAAV,CAAP;AAAkC;AAA7L,GAAzC,CAAnD;AAA+R,CAA9S;AAEA;;;;;;AAMG;;AAEH;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5qBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,qCAAT,CAA+C,EAA/C,EAAmD,GAAnD,EAAsD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAClE,qEAA0B,CAA1B,EAA6B,CAA7B;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,kBAAlB,EAAsC,MAAM,CAAC,aAAP,CAAqB,MAAM,CAAC,KAA5B,CAAtC,EAA0E,yBAA1E,EAAqG,MAAM,CAAC,eAAP,EAArG;AACH;AAAE;;AACH,SAAS,4CAAT,CAAsD,EAAtD,EAA0D,GAA1D,EAA6D;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzE,iEAAsB,CAAtB,EAAyB,MAAzB;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,uBAAP,CAA+B,MAAM,CAAC,KAAtC,CAAzB;AACH;AAAE;;AACH,SAAS,gDAAT,CAA0D,EAA1D,EAA8D,GAA9D,EAAiE;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC7E,iEAAsB,CAAtB,EAAyB,UAAzB;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,uBAAP,CAA+B,MAAM,CAAC,KAAtC,CAAzB;AACH;AAAE;;AACH,SAAS,qCAAT,CAA+C,EAA/C,EAAmD,GAAnD,EAAsD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAClE,0EAA+B,CAA/B,EAAkC,CAAlC;AACA,6DAAkB,CAAlB,EAAqB,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,MAAzE,EAAiF,EAAjF;AACA,6DAAkB,CAAlB,EAAqB,gDAArB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,UAA7E,EAAyF,EAAzF;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,6DAAkB,UAAlB,EAA8B,MAAM,CAAC,KAArC;AACA,4DAAiB,CAAjB;AACA,6DAAkB,cAAlB,EAAkC,QAAlC;AACH;AAAE;;AACH,SAAS,4BAAT,CAAsC,EAAtC,EAA0C,GAA1C,EAA6C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzD,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,qEAA0B,CAA1B,EAA6B,EAA7B;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,6DAAkB,kBAAlB,EAAsC,MAAM,CAAC,cAAP,GAAwB,QAA9D;AACH;AAAE;;AACH,SAAS,4BAAT,CAAsC,EAAtC,EAA0C,GAA1C,EAA6C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzD,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,KAAhC;AACH;AAAE;;AACH,SAAS,4BAAT,CAAsC,EAAtC,EAA0C,GAA1C,EAA6C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzD,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,KAAP,CAAa,aAAtC;AACH;AAAE;;AACH,SAAS,4BAAT,CAAsC,EAAtC,EAA0C,GAA1C,EAA6C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACzD,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,oEAAyB,MAAM,CAAC,YAAhC;AACH;AAAE;;AACH,SAAS,4CAAT,CAAsD,EAAtD,EAA0D,GAA1D,EAA6D,CAAK;;AAClE,SAAS,8BAAT,CAAwC,EAAxC,EAA4C,GAA5C,EAA+C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC3D,+DAAoB,CAApB;AACA,6DAAkB,CAAlB,EAAqB,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,aAAzE,EAAwF,CAAxF;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,6DAAkB,iBAAlB,EAAqC,MAAM,CAAC,OAA5C;AACH;AAAE;;AACH,IAAM,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,SAAS,uDAAT,CAAiE,EAAjE,EAAqE,GAArE,EAAwE;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACpF,4DAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;AAAE;;AACH,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,EAAV,EAAc,EAAd,EAAgB;AAAI,SAAO;AAAE,QAAI,EAAE,EAAR;AAAY,KAAC,EAAE;AAAf,GAAP;AAA6B,CAA7D;;AACA,SAAS,iDAAT,CAA2D,EAA3D,EAA+D,GAA/D,EAAkE;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC9E,0EAA+B,CAA/B;AACA,qEAA0B,CAA1B,EAA6B,CAA7B;AACA,6DAAkB,CAAlB,EAAqB,uDAArB,EAA8E,CAA9E,EAAiF,CAAjF,EAAoF,KAApF,EAA2F,CAA3F;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,OAAO,GAAG,GAAG,CAAC,SAApB;AACA,QAAM,IAAI,GAAG,GAAG,CAAC,KAAjB;AACA,QAAM,SAAS,GAAG,GAAG,CAAC,IAAtB;AACA,gEAAqB,CAArB;;AACA,QAAM,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,4DAAiB,CAAjB;AACA,6DAAkB,kBAAlB,EAAsC,GAAtC,EAA2C,yBAA3C,EAAsE,8DAAuB,CAAvB,EAA0B,GAA1B,EAA+B,OAA/B,EAAwC,IAAxC,CAAtE;AACA,4DAAiB,CAAjB;AACA,6DAAkB,MAAlB,EAA0B,CAAC,SAA3B;AACH;AAAE;;AACH,SAAS,wCAAT,CAAkD,EAAlD,EAAsD,GAAtD,EAAyD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACrE,QAAM,IAAI,GAAG,gEAAb;;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,6DAAkB,gCAAlB,EAAoD,SAAS,+FAAT,CAAyG,MAAzG,EAA+G;AAAI,kEAAqB,IAArB;AAA4B,UAAM,OAAO,GAAG,4DAAqB,CAArB,CAAhB;AAAyC,aAAO,OAAO,CAAC,cAAR,CAAuB,IAAvB,CAA4B,MAA5B,CAAP;AAA6C,KAAzR;AACA,qEAA0B,CAA1B,EAA6B,EAA7B;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,QAAQ,GAAG,GAAG,CAAC,SAArB;AACA,QAAM,KAAK,GAAG,GAAG,CAAC,KAAlB;AACA,QAAM,MAAM,GAAG,4DAAqB,CAArB,CAAf;AACA,6DAAkB,2BAAlB,EAA+C,MAAM,CAAC,sBAAP,CAA8B,KAA9B,CAA/C,EAAqF,IAArF,EAA2F,MAAM,CAAC,iBAAP,CAAyB,KAAzB,CAA3F;AACA,8DAAmB,iBAAnB,EAAsC,MAAM,CAAC,eAAP,CAAuB,KAAvB,CAAtC,EAAqE,eAArE,EAAsF,MAAM,CAAC,aAAP,KAAyB,KAA/G;AACA,4DAAiB,CAAjB;AACA,6DAAkB,kBAAlB,EAAsC,QAAQ,CAAC,OAA/C;AACH;AAAE;;AACH,SAAS,kCAAT,CAA4C,EAA5C,EAAgD,GAAhD,EAAmD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC/D,0EAA+B,CAA/B;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,6DAAkB,CAAlB,EAAqB,iDAArB,EAAwE,CAAxE,EAA2E,CAA3E,EAA8E,cAA9E,EAA8F,CAA9F;AACA;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,6DAAkB,CAAlB,EAAqB,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,KAArE,EAA4E,CAA5E;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,6DAAkB,SAAlB,EAA6B,MAAM,CAAC,KAApC;AACA,4DAAiB,CAAjB;AACA,6DAAkB,SAAlB,EAA6B,MAAM,CAAC,KAApC;AACH;AAAE;;AACH,SAAS,wCAAT,CAAkD,EAAlD,EAAsD,GAAtD,EAAyD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACrE,QAAM,IAAI,GAAG,gEAAb;;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,qEAA0B,CAA1B,EAA6B,CAA7B;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,6DAAkB,8BAAlB,EAAkD,SAAS,6FAAT,CAAuG,MAAvG,EAA6G;AAAI,kEAAqB,IAArB;AAA4B,UAAM,OAAO,GAAG,4DAAqB,CAArB,CAAhB;AAAyC,aAAO,OAAO,CAAC,cAAR,CAAuB,IAAvB,CAA4B,MAA5B,CAAP;AAA6C,KAArR;AACA,iEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;AACA,qEAA0B,CAA1B,EAA6B,EAA7B;AACA;AACA;AACA;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,QAAQ,GAAG,GAAG,CAAC,SAArB;AACA,QAAM,KAAK,GAAG,GAAG,CAAC,KAAlB;AACA,QAAM,UAAU,GAAG,GAAG,CAAC,IAAvB;AACA,QAAM,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,QAAM,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,4DAAiB,CAAjB;AACA,6DAAkB,kBAAlB,EAAsC,GAAtC,EAA2C,yBAA3C,EAAsE,8DAAuB,CAAvB,EAA0B,GAA1B,EAA+B,QAA/B,EAAyC,KAAzC,CAAtE;AACA,4DAAiB,CAAjB;AACA,8DAAmB,2BAAnB,EAAgD,CAAC,UAAjD;AACA,4DAAiB,CAAjB;AACA,6DAAkB,yBAAlB,EAA6C,OAAO,CAAC,sBAAR,CAA+B,KAA/B,CAA7C,EAAoF,IAApF,EAA0F,OAAO,CAAC,iBAAR,CAA0B,KAA1B,CAA1F;AACA,8DAAmB,iBAAnB,EAAsC,OAAO,CAAC,eAAR,CAAwB,KAAxB,CAAtC,EAAsE,eAAtE,EAAuF,OAAO,CAAC,aAAR,KAA0B,KAAjH;AACA,4DAAiB,CAAjB;AACA,6DAAkB,kBAAlB,EAAsC,QAAQ,CAAC,OAA/C;AACH;AAAE;;AACH,SAAS,kCAAT,CAA4C,EAA5C,EAAgD,GAAhD,EAAmD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC/D,0EAA+B,CAA/B;AACA,6DAAkB,CAAlB,EAAqB,wCAArB,EAA+D,CAA/D,EAAkE,EAAlE,EAAsE,KAAtE,EAA6E,EAA7E;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,4DAAiB,CAAjB;AACA,6DAAkB,SAAlB,EAA6B,MAAM,CAAC,KAApC;AACH;AAAE;;AACH,SAAS,iCAAT,CAA2C,EAA3C,EAA+C,GAA/C,EAAkD;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AAC9D,QAAM,IAAI,GAAG,gEAAb;;AACA,iEAAsB,CAAtB,EAAyB,iBAAzB,EAA4C,EAA5C;AACA,6DAAkB,OAAlB,EAA2B,SAAS,kEAAT,GAA2E;AAAK,UAAM,WAAW,GAAG,4DAAqB,IAArB,CAApB;AAAgD,UAAM,QAAQ,GAAG,WAAW,CAAC,IAA7B;AAAmC,aAAO,QAAQ,CAAC,MAAT,EAAP;AAA2B,KAAzN,EAA2N,SAA3N,EAAsO,SAAS,oEAAT,CAA8E,MAA9E,EAAoF;AAAI,kEAAqB,IAArB;AAA4B,UAAM,OAAO,GAAG,6DAAhB;AAAwC,aAAO,OAAO,CAAC,UAAR,CAAmB,MAAnB,CAAP;AAAoC,KAAta;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,QAAQ,GAAG,GAAG,CAAC,IAArB;AACA,QAAM,KAAK,GAAG,GAAG,CAAC,CAAlB;AACA,QAAM,MAAM,GAAG,6DAAf;AACA,8DAAmB,+BAAnB,EAAoD,MAAM,CAAC,WAAP,KAAuB,YAA3E,EAAyF,6BAAzF,EAAwH,MAAM,CAAC,WAAP,KAAuB,UAA/I;AACA,6DAAkB,UAAlB,EAA8B,MAAM,CAAC,cAAP,OAA4B,KAA5B,GAAoC,CAApC,GAAwC,CAAC,CAAvE,EAA0E,IAA1E,EAAgF,MAAM,CAAC,eAAP,CAAuB,KAAvB,CAAhF,EAA+G,OAA/G,EAAwH,KAAxH,EAA+H,OAA/H,EAAwI,MAAM,CAAC,iBAAP,CAAyB,KAAzB,EAAgC,QAAQ,CAAC,KAAzC,CAAxI,EAAyL,OAAzL,EAAkM,QAAQ,CAAC,SAAT,IAAsB,QAAQ,CAAC,KAAjO,EAAwO,UAAxO,EAAoP,MAAM,CAAC,aAAP,KAAyB,KAA7Q,EAAoR,QAApR,EAA8R,MAAM,CAAC,gBAAP,CAAwB,KAAxB,EAA+B,QAA/B,CAA9R,EAAwU,UAAxU,EAAoV,QAAQ,CAAC,QAA7V,EAAuW,cAAvW,EAAuX,QAAQ,CAAC,YAAhY,EAA8Y,eAA9Y,EAA+Z,MAAM,CAAC,cAAta,EAAsb,eAAtb,EAAuc,MAAM,CAAC,aAA9c,EAA6d,OAA7d,EAAse,QAAQ,CAAC,KAAT,IAAkB,MAAM,CAAC,KAA/f;AACA,8DAAmB,eAAnB,EAAoC,KAAK,GAAG,CAA5C,EAA+C,cAA/C,EAA+D,MAAM,CAAC,KAAP,CAAa,MAA5E,EAAoF,eAApF,EAAqG,MAAM,CAAC,iBAAP,CAAyB,KAAzB,CAArG,EAAsI,eAAtI,EAAuJ,MAAM,CAAC,aAAP,IAAwB,KAA/K,EAAsL,YAAtL,EAAoM,QAAQ,CAAC,SAAT,IAAsB,IAA1N,EAAgO,iBAAhO,EAAmP,CAAC,QAAQ,CAAC,SAAV,IAAuB,QAAQ,CAAC,cAAhC,GAAiD,QAAQ,CAAC,cAA1D,GAA2E,IAA9T,EAAoU,eAApU,EAAqV,MAAM,CAAC,gBAAP,CAAwB,KAAxB,EAA+B,QAA/B,IAA2C,IAA3C,GAAkD,IAAvY;AACH;AAAE;;;MACG,Y;;;;;;;;;;;;IAAqB,8D;;AAE3B,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC;AAAc,QAAI,yBAAJ;AAA+B,WAAO,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,aAAO,CAAC,yBAAyB,KAAK,yBAAyB,GAAG,oEAA6B,YAA7B,CAAjC,CAA1B,EAAwG,CAAC,IAAI,YAA7G,CAAP;AAAoI,KAA9K;AAAiL,GAA9N,EAAlC;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6D,YAAQ,EAAE,CAAC,wEAAD;AAAvE,GAAzB,CAAlC;;;;;MAgBM,c,GACF;AAAA;;AACI;;;AAGG;AACH,SAAK,OAAL,GAAe,IAAI,yCAAJ,EAAf;AACA;;AACA,SAAK,aAAL,GAAqB,UAArB;AACH,G;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,KAAf,GAAoB,aAAG,iEAAsB;AAAE,WAAO,EAAE,SAAS,sBAAT,GAA+B;AAAK,aAAO,IAAI,cAAJ,EAAP;AAA8B,KAA7E;AAA+E,SAAK,EAAE,cAAtF;AAAsG,cAAU,EAAE;AAAlH,GAAtB,CAAvB;;;AAKA;;;AACA,SAAS,iCAAT,CAA2C,UAA3C,EAAqD;AACjD,SAAO,UAAU,IAAI,IAAI,cAAJ,EAArB;AACH;AACD;;;AACA,IAAM,yBAAyB,GAAG;AAC9B,SAAO,EAAE,cADqB;AAE9B,MAAI,EAAE,CAAC,cAAC,IAAI,mDAAJ,EAAD,EAAe,aAAE,IAAI,mDAAJ,EAAjB,EAAiC,cAAjC,CAAD,CAFwB;AAG9B,YAAU,EAAE;AAHkB,CAAlC;AAMA;;;;;;AAMG;AACH;;AACA;;AACA,IAAM,kBAAkB,gBAAG,kEAAU;AAAA;;AAAA;;AACjC,6BAAY,UAAZ,EAAsB;AAAA;;AAAA,8BACZ,UADY;AAErB;;AAHgC;AAAA,EAAiC,+DAAjC,GAIlC,SAJkC,CAArC;;;MAKM,a;;;;;AACF,2BAAY,KAAZ,EAAmB,aAAnB,EAAkC,WAAlC,EAA+C,iBAA/C,EAAgE;AAAA;;AAAA;;AAC5D,iCAAM,WAAN;AACA,YAAK,KAAL,GAAa,KAAb;AACA,YAAK,aAAL,GAAqB,aAArB;AACA,YAAK,iBAAL,GAAyB,KAAK,CAAC,OAAN,CAAc,SAAd,CAAwB;AAAA,eAAM,iBAAiB,CAAC,YAAlB,EAAN;AAAA,OAAxB,CAAzB;AAJ4D;AAK/D;;;;aACD,2BAAe;AACX,aAAK,aAAL,CAAmB,OAAnB,CAA2B,KAAK,WAAhC,EAA6C,IAA7C;AACH;;;aACD,uBAAW;AACP,aAAK,iBAAL,CAAuB,WAAvB;;AACA,aAAK,aAAL,CAAmB,cAAnB,CAAkC,KAAK,WAAvC;AACH;AACD;;;;aACA,eAAM,MAAN,EAAc,OAAd,EAAqB;AACjB,YAAI,MAAJ,EAAY;AACR,eAAK,aAAL,CAAmB,QAAnB,CAA4B,KAAK,WAAjC,EAA8C,MAA9C,EAAsD,OAAtD;AACH,SAFD,MAGK;AACD,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAA/B,CAAqC,OAArC;AACH;AACJ;AACD;;;;aACA,wBAAY;AACR,eAAO,KAAK,KAAL,YAAsB,YAAtB,GAAqC,IAArC,GAA4C,KAAK,KAAxD;AACH;AACD;;;;aACA,0BAAc;AACV,eAAO,KAAK,KAAL,YAAsB,YAAtB,GAAqC,KAAK,KAA1C,GAAkD,IAAzD;AACH;AACD;;;;aACA,2BAAe;AACX,eAAO,KAAK,WAAL,CAAiB,aAAxB;AACH;AACD;;;;aACA,2BAAe;AACX,eAAO;AACH,eAAK,EAAE,KAAK,KADT;AAEH,gBAAM,EAAE,KAAK,MAFV;AAGH,kBAAQ,EAAE,KAAK;AAHZ,SAAP;AAKH;;;aACD,iCAAwB,KAAxB,EAA6B;AACzB,YAAI,KAAK,IAAI,QAAb,EAAuB;AACnB,2BAAU,KAAK,KAAL,GAAa,CAAvB;AACH;;AACD,YAAI,KAAK,IAAI,MAAb,EAAqB;AACjB,iBAAO,QAAP;AACH;;AACD,YAAI,KAAK,IAAI,OAAb,EAAsB;AAClB,iBAAO,SAAP;AACH;;AACD,eAAO,KAAP;AACH;;;;IAtDuB,kB;;AAwD5B,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,EAAyB,gEAAyB,cAAzB,CAAzB,EAAmE,gEAAyB,4DAAzB,CAAnE,EAAkH,gEAAyB,qDAAzB,CAAlH,EAA+J,gEAAyB,4DAAzB,CAA/J,CAAP;AAA4N,GAArR;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,iBAAnB,CAApE;AAA2G,UAAM,EAAE;AAAE,WAAK,EAAE,OAAT;AAAkB,WAAK,EAAE,OAAzB;AAAkC,WAAK,EAAE,OAAzC;AAAkD,kBAAY,EAAE,cAAhE;AAAgF,mBAAa,EAAE,eAA/F;AAAgH,WAAK,EAAE,OAAvH;AAAgI,cAAQ,EAAE,UAA1I;AAAsJ,YAAM,EAAE,QAA9J;AAAwK,cAAQ,EAAE,UAAlL;AAA8L,mBAAa,EAAE;AAA7M,KAAnH;AAAmV,YAAQ,EAAE,CAAC,wEAAD,CAA7V;AAAkY,SAAK,EAAE,EAAzY;AAA6Y,QAAI,EAAE,EAAnZ;AAAuZ,UAAM,EAAE,CAAC,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,wBAArB,EAA+C,qBAA/C,EAAsE,CAAtE,EAAyE,kBAAzE,EAA6F,mBAA7F,CAAD,EAAoH,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAApH,EAAiK,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,EAAmD,CAAnD,EAAsD,cAAtD,CAAjK,EAAwO,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,iBAAnB,CAAxO,EAA+Q,CAAC,CAAD,EAAI,gBAAJ,CAA/Q,EAAsS,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,MAApC,CAAtS,EAAmV,CAAC,OAAD,EAAU,mBAAV,EAA+B,CAA/B,EAAkC,MAAlC,CAAnV,EAA8X,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9X,EAAgb,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAAhb,EAAoe,CAAC,CAAD,EAAI,UAAJ,CAApe,EAAqf,CAAC,CAAD,EAAI,cAAJ,CAArf,EAA0gB,CAAC,CAAD,EAAI,iBAAJ,CAA1gB,EAAkiB,CAAC,CAAD,EAAI,qBAAJ,CAAliB,EAA8jB,CAAC,CAAD,EAAI,kBAAJ,CAA9jB,EAAulB,CAAC,CAAD,EAAI,mBAAJ,CAAvlB,EAAinB,CAAC,CAAD,EAAI,0BAAJ,CAAjnB,CAA/Z;AAAkjC,YAAQ,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACvqC,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACA,qEAAsB,CAAtB,EAAyB,KAAzB;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,iEAAkB,CAAlB,EAAqB,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,cAAlE,EAAkF,CAAlF;AACA,iEAAkB,CAAlB,EAAqB,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,cAAlE,EAAkF,CAAlF;AACA;AACA;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;AACA,iEAAkB,CAAlB,EAAqB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;AACA,iEAAkB,CAAlB,EAAqB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;AACA,iEAAkB,CAAlB,EAAqB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;AACA,iEAAkB,CAAlB,EAAqB,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;AACA;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,iEAAkB,kBAAlB,EAAsC,GAAG,CAAC,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkF,GAAG,CAAC,aAAtF;AACA,gEAAiB,CAAjB;AACA,6EAA8B,sBAA9B,EAAsD,GAAG,CAAC,KAA1D,EAAiE,gBAAjE;AACA,kEAAmB,wBAAnB,EAA6C,GAAG,CAAC,QAAjD;AACA,gEAAiB,CAAjB;AACA,iEAAkB,UAAlB,EAA8B,CAAC,EAAE,GAAG,CAAC,aAAJ,IAAqB,GAAG,CAAC,aAAJ,CAAkB,GAAG,CAAC,KAAtB,CAAvB,CAA/B;AACA,gEAAiB,CAAjB;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;AACA,gEAAiB,CAAjB;AACA,kEAAmB,uBAAnB,EAA4C,GAAG,CAAC,MAAhD,EAAwD,yBAAxD,EAAmF,GAAG,CAAC,QAAvF,EAAiG,sBAAjG,EAAyH,GAAG,CAAC,KAAJ,IAAa,OAAtI;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,cAAJ,EAA1B;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,YAAJ,EAA1B;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,KAAJ,IAAa,OAAvD;AACA,gEAAiB,CAAjB;AACA,iEAAkB,MAAlB,EAA0B,GAAG,CAAC,KAAJ,IAAa,OAAvC;AACH;AAAE,KAjCqD;AAiCnD,cAAU,EAAE,CAAC,6DAAD,EAAmB,sDAAnB,EAAoC,0DAApC,EAAyD,6DAAzD,EAAiF,kDAAjF,EAA8F,8DAA9F,EAAuH,4DAAvH,CAjCuC;AAiCiG,UAAM,EAAE,CAAC,g1BAAD,CAjCzG;AAiC67B,iBAAa,EAAE,CAjC58B;AAiC+8B,mBAAe,EAAE;AAjCh+B,GAAzB,CAAnC;;;AAqFA;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,oBAAoB,GAAG;AACzB;AACA,0BAAwB,eAAE,6DAAO,CAAC,0BAAD,EAA6B,C,aAC1D,2DAAK,CAAC,UAAD,EAAW,aAAE,2DAAK,CAAC;AAAE,aAAS,EAAE,0BAAb;AAAyC,cAAU,EAAE;AAArD,GAAD,CAAlB,CADqD,EAE1D;AACA;AACA;;;AACA,6DAAK,CAAC,SAAD,EAAU,aAAE,2DAAK,CAAC;AAAE,aAAS,EAAE,MAAb;AAAqB,cAAU,EAAE;AAAjC,GAAD,CAAjB,CALqD,E,aAM1D,2DAAK,CAAC,MAAD,EAAO,aAAE,2DAAK,CAAC;AAAE,aAAS,EAAE,yBAAb;AAAwC,cAAU,EAAE;AAApD,GAAD,CAAd,CANqD,E,aAO1D,gEAAU,CAAC,QAAD,EAAS,aAAE,6DAAO,CAAC,sCAAD,CAAlB,CAPgD,CAA7B,CAFR;;AAWzB;AACA,wBAAsB,eAAE,6DAAO,CAAC,wBAAD,EAA2B,C,aACtD,2DAAK,CAAC,UAAD,EAAW,aAAE,2DAAK,CAAC;AAAE,UAAM,EAAE,KAAV;AAAiB,cAAU,EAAE;AAA7B,GAAD,CAAlB,CADiD,E,aAEtD,2DAAK,CAAC,MAAD,EAAO,aAAE,2DAAK,CAAC;AAAE,UAAM,EAAE,KAAV;AAAiB,cAAU,EAAE;AAA7B,GAAD,CAAd,CAFiD,EAGtD;AACA;AACA;;;AACA,6DAAK,CAAC,SAAD,EAAU,aAAE,2DAAK,CAAC;AAAE,UAAM,EAAE,GAAV;AAAe,cAAU,EAAE;AAA3B,GAAD,CAAjB,CANiD,E,aAOtD,gEAAU,CAAC,eAAD,EAAgB,aAAE,6DAAO,CAAC,sCAAD,CAAzB,CAP4C,CAA3B;AAZN,CAA7B;;;MAiCM,c,GACF,wBAAY,WAAZ,EAAuB;AAAA;;AACnB,SAAK,WAAL,GAAmB,WAAnB;AACH,G;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,sDAAzB,CAA1B,CAAP;AAAiF,GAA5I;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,EAAlC,CAAD,CAAnC;AAA4E,UAAM,EAAE;AAAE,UAAI,EAAE,CAAC,gBAAD,EAAmB,MAAnB;AAAR;AAApF,GAAzB,CAApC;;;;;MA2BM,c,GACF,wBAAY,SAAZ,EAAqB;AAAA;;AACjB,SAAK,SAAL,GAAiB,SAAjB;AACH,G;;AAEL,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,EAA0B,gEAAyB,sDAAzB,CAA1B,CAAP;AAAiF,GAA5I;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,EAAlC,CAAD;AAAnC,GAAzB,CAApC;;;;;MAkBM,O;;;;;AACF,qBAAY,OAAZ,EAAqB,kBAArB,EAAyC,iBAAzC,EAA4D,cAA5D,EAA0E;AAAA;;AAAA;;AACtE,kCAAM,OAAN,EAAe,cAAf;AACA,aAAK,kBAAL,GAA0B,kBAA1B;AACA,aAAK,iBAAL,GAAyB,iBAAzB;AACA,aAAK,WAAL,GAAmB,qDAAnB;AAJsE;AAKzE;;;;aACD,8BAAkB;AAAA;;AACd,aAAK,WAAL,GAAmB,KAAK,QAAL,CAAc,KAAd,CAAoB,OAApB,CAA4B,IAA5B,CAAiC,0DAAS,CAAC,YAAK;AAC/D,iBAAO,MAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,IAA9B,CAAmC,oDAAG,CAAC,eAAK;AAAA,mBAAI,KAAK,CAAC,YAAN,KAAuB,MAA3B;AAAA,WAAN,CAAtC,EAA8E,0DAAS,CAAC,MAAI,CAAC,QAAL,CAAc,QAAd,KAA2B,MAA5B,CAAvF,CAAP;AACH,SAF4D,CAA1C,EAEf,SAFe,CAEL,oBAAU,EAAG;AACvB,cAAI,UAAU,IAAI,MAAI,CAAC,YAAnB,IAAmC,CAAC,MAAI,CAAC,OAA7C,EAAsD;AAClD,kBAAI,CAAC,OAAL,GAAe,IAAI,gEAAJ,CAAmB,MAAI,CAAC,YAAL,CAAkB,SAArC,EAAgD,MAAI,CAAC,iBAArD,CAAf;AACH;AACJ,SANkB,CAAnB;AAOH;;;aACD,uBAAW;AACP,aAAK,WAAL,CAAiB,WAAjB;AACH;AACD;;;;aACA,sBAAa,OAAb,EAAsB,IAAtB,EAA0B;AACtB,YAAM,kBAAkB,GAAG,KAAK,kBAAL,CAAwB,YAAxB,CAAqC,OAArC,EAA8C,IAA9C,CAA3B,CADsB,CAEtB;AACA;AACA;;;AACA,YAAM,gBAAgB,GAAG,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAnB,IAA8B,KAAK,UAArC,CAA1B;AACA,eAAO,kBAAkB,IAAI,gBAA7B;AACH;;;;IA3BiB,yD;;AA6BtB,SAAO,CAAC,IAAR,GAAe,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,WAAO,KAAK,CAAC,IAAI,OAAV,EAAmB,gEAAyB,yDAAU,CAAC;AAAA,aAAM,UAAN;AAAA,KAAD,CAAnC,CAAnB,EAA2E,gEAAyB,qEAAzB,EAAmD,CAAnD,CAA3E,EAAkI,gEAAyB,2DAAzB,CAAlI,EAAqL,gEAAyB,wEAAzB,EAAiD,CAAjD,CAArL,CAAP;AAAmP,GAAhS;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C,kBAAc,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAyC,QAAzC,EAAiD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3K,qEAAsB,QAAtB,EAAgC,YAAhC,EAA8C,CAA9C;AACA,qEAAsB,QAAtB,EAAgC,cAAhC,EAAgD,CAAhD;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,SAAJ,GAAgB,EAAE,CAAC,KAAxE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,YAAJ,GAAmB,EAAE,CAAC,KAA3E;AACH;AAAE,KAP+C;AAO7C,UAAM,EAAE;AAAE,WAAK,EAAE;AAAT,KAPqC;AAOjB,YAAQ,EAAE,CAAC,SAAD,CAPO;AAOM,YAAQ,EAAE,cAAC,iEAA0B,CACrF;AAAE,aAAO,EAAE,qEAAX;AAA8B,iBAAW,EAAE;AAA3C,KADqF,EAErF;AAAE,aAAO,EAAE,yDAAX;AAAoB,iBAAW,EAAE;AAAjC,KAFqF,CAA1B,CAAD,EAG1D,wEAH0D,CAPhB;AAUN,sBAAkB,EAAE,GAVd;AAUmB,SAAK,EAAE,CAV1B;AAU6B,QAAI,EAAE,CAVnC;AAUsC,UAAM,EAAE,CAAC,CAAC,CAAD,EAAI,iBAAJ,CAAD,CAV9C;AAUwE,YAAQ,EAAE,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,GAA9B,EAAiC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACjL;AACA,iEAAkB,CAAlB,EAAqB,8BAArB,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,aAA3D;AACH;AAAE,KAb+C;AAa7C,cAAU,EAAE,CAAC,iEAAD,CAbiC;AAaP,iBAAa,EAAE,CAbR;AAaW,mBAAe,EAAE;AAb5B,GAAzB,CAA7B;;;;;MAgEM,oB;;;;;;;;;;;;IAA6B,4D;;AAEnC,sBAAoB,CAAC,IAArB;AAA4B;;AAAa;AAAC;AAAc,QAAI,iCAAJ;AAAuC,WAAO,SAAS,4BAAT,CAAsC,CAAtC,EAAuC;AAAI,aAAO,CAAC,iCAAiC,KAAK,iCAAiC,GAAG,oEAA6B,oBAA7B,CAAzC,CAAlC,EAAgI,CAAC,IAAI,oBAArI,CAAP;AAAoK,KAAtN;AAAyN,GAA9Q,EAA1C;;AACA,sBAAoB,CAAC,IAArB;AAA4B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,oBAAR;AAA8B,YAAQ,EAAE,CAAC,wEAAD;AAAxC,GAAzB,CAA1C;;;;;MAQM,oB;;;;;;;;;;;;IAA6B,oB;;AAEnC,sBAAoB,CAAC,IAArB;AAA4B;;AAAa;AAAC;AAAc,QAAI,iCAAJ;AAAuC,WAAO,SAAS,4BAAT,CAAsC,CAAtC,EAAuC;AAAI,aAAO,CAAC,iCAAiC,KAAK,iCAAiC,GAAG,oEAA6B,oBAA7B,CAAzC,CAAlC,EAAgI,CAAC,IAAI,oBAArI,CAAP;AAAoK,KAAtN;AAAyN,GAA9Q,EAA1C;;AACA,sBAAoB,CAAC,IAArB;AAA4B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,oBAAR;AAA8B,aAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,CAAzC;AAAuE,YAAQ,EAAE,CAAC,wEAAD;AAAjF,GAAzB,CAA1C;;;;;MASM,kB;;;;;;;;;;;;IAA2B,oB;;AAEjC,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC;AAAc,QAAI,+BAAJ;AAAqC,WAAO,SAAS,0BAAT,CAAoC,CAApC,EAAqC;AAAI,aAAO,CAAC,+BAA+B,KAAK,+BAA+B,GAAG,oEAA6B,kBAA7B,CAAvC,CAAhC,EAA0H,CAAC,IAAI,kBAA/H,CAAP;AAA4J,KAA5M;AAA+M,GAAlQ,EAAxC;;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,kBAAR;AAA4B,aAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;AAAmE,YAAQ,EAAE,CAAC,wEAAD;AAA7E,GAAzB,CAAxC;;;;;MAKM,U;;;;;AACF,wBAAY,GAAZ,EAAiB,iBAAjB,EAAoC,UAApC,EAAgD,SAAhD,EAAyD;AAAA;;AAAA;;AACrD,kCAAM,GAAN,EAAW,iBAAX,EAA8B,UAA9B,EAA0C,SAA1C;AACA;;AACA,aAAK,KAAL,GAAa,IAAI,oDAAJ,EAAb;AACA;;AACA,aAAK,aAAL,GAAqB,IAAI,uDAAJ,EAArB;AACA;;;AAGG;;AACH,aAAK,aAAL,GAAqB,KAArB;AACA;;AACA,aAAK,cAAL,GAAsB,EAAtB;AACA;;AACA,aAAK,cAAL,GAAsB,IAAI,yCAAJ,EAAtB;AACA,UAAM,QAAQ,GAAG,UAAU,CAAC,aAAX,CAAyB,QAAzB,CAAkC,WAAlC,EAAjB;AACA,aAAK,WAAL,GAAmB,QAAQ,KAAK,sBAAb,GAAsC,UAAtC,GAAmD,YAAtE;AAhBqD;AAiBxD;;;;aACD,8BAAkB;AAAA;;AACd;;AACA,aAAK,MAAL,CAAY,OAAZ,CAAoB;AAAA,cAAG,IAAH,QAAG,IAAH;AAAA,cAAS,WAAT,QAAS,WAAT;AAAA,iBAA2B,MAAI,CAAC,cAAL,CAAoB,IAApB,IAA4B,WAAvD;AAAA,SAApB,EAFc,CAGd;;;AACA,aAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,0DAAS,CAAC,KAAK,UAAN,CAAjC,EAAoD,SAApD,CAA8D,YAAK;AAC/D,gBAAI,CAAC,aAAL;AACH,SAFD;;AAGA,aAAK,cAAL,CAAoB,IAApB,EACA;AACA;AACA;AACA,6EAAoB,CAAC,UAAC,CAAD,EAAI,CAAJ;AAAA,iBAAU,CAAC,CAAC,SAAF,KAAgB,CAAC,CAAC,SAAlB,IAA+B,CAAC,CAAC,OAAF,KAAc,CAAC,CAAC,OAAzD;AAAA,SAAD,CAJpB,EAIwF,0DAAS,CAAC,KAAK,UAAN,CAJjG,EAIoH,SAJpH,CAI8H,eAAK,EAAG;AAClI,cAAI,KAAK,CAAC,OAAN,KAAkB,SAAtB,EAAiC;AAC7B,kBAAI,CAAC,aAAL,CAAmB,IAAnB;AACH;AACJ,SARD;AASH;;;aACD,0BAAiB,KAAjB,EAAwB,IAAxB,EAA4B;AACxB,eAAO,IAAI,CAAC,SAAL,IAAkB,KAAK,aAAL,KAAuB,KAAzC,IAAkD,CAAC,KAAK,MAA/D;AACH;;;;IAtCoB,4D;;AAwCzB,YAAU,CAAC,IAAX,GAAkB,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,WAAO,KAAK,CAAC,IAAI,UAAV,EAAsB,gEAAyB,8DAAzB,EAAgD,CAAhD,CAAtB,EAA0E,gEAAyB,4DAAzB,CAA1E,EAA8H,gEAAyB,qDAAzB,CAA9H,EAA2K,gEAAyB,sDAAzB,CAA3K,CAAP;AAAwN,GAA3Q;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,aAAS,EAAE,CAAC,CAAC,aAAD,CAAD,EAAkB,CAAC,sBAAD,CAAlB,EAA4C,CAAC,wBAAD,CAA5C,EAAwE,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAxE,CAA/B;AAAgI,kBAAc,EAAE,SAAS,yBAAT,CAAmC,EAAnC,EAAuC,GAAvC,EAA4C,QAA5C,EAAoD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACrQ,qEAAsB,QAAtB,EAAgC,OAAhC,EAAyC,CAAzC;AACA,qEAAsB,QAAtB,EAAgC,cAAhC,EAAgD,CAAhD;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,MAAJ,GAAa,EAAlE;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,MAAJ,GAAa,EAAlE;AACH;AAAE,KAPkD;AAOhD,aAAS,EAAE,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,GAA9B,EAAiC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC7D,kEAAmB,aAAnB,EAAkC,CAAlC;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,WAAJ,GAAkB,EAAvE;AACH;AAAE,KAZkD;AAYhD,aAAS,EAAE,CAAC,MAAD,EAAS,SAAT,CAZqC;AAYhB,YAAQ,EAAE,CAZM;AAYH,gBAAY,EAAE,SAAS,uBAAT,CAAiC,EAAjC,EAAqC,GAArC,EAAwC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACpH,kEAAmB,kBAAnB,EAAuC,GAAG,CAAC,WAA3C;AACA,kEAAmB,wBAAnB,EAA6C,GAAG,CAAC,WAAJ,KAAoB,YAAjE,EAA+E,sBAA/E,EAAuG,GAAG,CAAC,WAAJ,KAAoB,UAA3H,EAAuI,gCAAvI,EAAyK,GAAG,CAAC,WAAJ,KAAoB,YAApB,IAAoC,GAAG,CAAC,aAAJ,IAAqB,KAAlO,EAAyO,mCAAzO,EAA8Q,GAAG,CAAC,WAAJ,KAAoB,YAApB,IAAoC,GAAG,CAAC,aAAJ,IAAqB,QAAvU;AACH;AAAE,KAfkD;AAehD,UAAM,EAAE;AAAE,mBAAa,EAAE,eAAjB;AAAkC,mBAAa,EAAE,eAAjD;AAAkE,mBAAa,EAAE,eAAjF;AAAkG,WAAK,EAAE;AAAzG,KAfwC;AAe4E,WAAO,EAAE;AAAE,mBAAa,EAAE;AAAjB,KAfrF;AAeyH,YAAQ,EAAE,CAAC,YAAD,EAAe,oBAAf,EAAqC,sBAArC,CAfnI;AAeiM,YAAQ,EAAE,cAAC,iEAA0B,CACnR;AAAE,aAAO,EAAE,4DAAX;AAAuB,iBAAW,EAAE;AAApC,KADmR,EAEnR;AAAE,aAAO,EAAE,oBAAX;AAAiC,iBAAW,EAAE;AAA9C,KAFmR,EAGnR;AAAE,aAAO,EAAE,kBAAX;AAA+B,iBAAW,EAAE;AAA5C,KAHmR,CAA1B,CAAD,EAIxP,wEAJwP,CAf3M;AAmBT,SAAK,EAAE,CAnBE;AAmBC,QAAI,EAAE,CAnBP;AAmBU,UAAM,EAAE,CAAC,CAAC,CAAD,EAAI,UAAJ,CAAD,EAAkB,CAAC,CAAD,EAAI,cAAJ,CAAlB,EAAuC,CAAC,cAAD,EAAiB,EAAjB,CAAvC,EAA6D,CAAC,CAAD,EAAI,yCAAJ,CAA7D,EAA6G,CAAC,CAAD,EAAI,OAAJ,EAAa,SAAb,CAA7G,EAAsI,CAAC,CAAD,EAAI,kCAAJ,CAAtI,EAA+K,CAAC,OAAD,EAAU,gCAAV,EAA4C,MAA5C,EAAoD,UAApD,EAAgE,CAAhE,EAAmE,IAAnE,EAAyE,CAAzE,EAA4E,OAA5E,EAAqF,SAArF,CAA/K,EAAgR,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAAhR,EAAoU,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,MAA5C,CAApU,EAAyX,CAAC,CAAD,EAAI,6BAAJ,CAAzX,EAA6Z,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,gCAAxB,EAA0D,CAA1D,EAA6D,IAA7D,CAA7Z,EAAie,CAAC,CAAD,EAAI,kBAAJ,CAAje,EAA0f,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,OAAzB,EAAkC,SAAlC,CAA1f,EAAwiB,CAAC,CAAD,EAAI,UAAJ,CAAxiB,EAAyjB,CAAC,CAAD,EAAI,gCAAJ,CAAzjB,EAAgmB,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,8BAAxB,EAAwD,CAAxD,EAA2D,IAA3D,CAAhmB,EAAkqB,CAAC,CAAD,EAAI,sBAAJ,CAAlqB,EAA+rB,CAAC,CAAD,EAAI,UAAJ,EAAgB,IAAhB,EAAsB,OAAtB,EAA+B,OAA/B,EAAwC,OAAxC,EAAiD,UAAjD,EAA6D,QAA7D,EAAuE,UAAvE,EAAmF,cAAnF,EAAmG,eAAnG,EAAoH,eAApH,EAAqI,OAArI,EAA8I,OAA9I,EAAuJ,SAAvJ,CAA/rB,CAnBlB;AAmBq3B,YAAQ,EAAE,SAAS,mBAAT,CAA6B,EAA7B,EAAiC,GAAjC,EAAoC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACp+B,8EAA+B,CAA/B,EAAkC,CAAlC;AACA,iEAAkB,CAAlB,EAAqB,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,cAA/D,EAA+E,CAA/E;AACA,iEAAkB,CAAlB,EAAqB,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,cAA/D,EAA+E,CAA/E;AACA;AACA,iEAAkB,CAAlB,EAAqB,iCAArB,EAAwD,CAAxD,EAA2D,EAA3D,EAA+D,aAA/D,EAA8E,IAA9E,EAAoF,CAApF,EAAuF,oEAAvF;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,iEAAkB,UAAlB,EAA8B,GAAG,CAAC,WAAlC;AACA,gEAAiB,CAAjB;AACA,iEAAkB,cAAlB,EAAkC,YAAlC;AACA,gEAAiB,CAAjB;AACA,iEAAkB,cAAlB,EAAkC,UAAlC;AACH;AAAE,KA/BkD;AA+BhD,cAAU,EAAE,CAAC,sDAAD,EAAkB,0DAAlB,EAAuC,qDAAvC,EAAuD,8DAAvD,EAAgF,kDAAhF,EAA6F,aAA7F,CA/BoC;AA+ByE,UAAM,EAAE,CAAC,kkGAAD,CA/BjF;AA+BupG,iBAAa,EAAE,CA/BtqG;AA+ByqG,QAAI,EAAE;AAAE,eAAS,EAAE,CACzuG,oBAAoB,CAAC,wBADotG,EAEzuG,oBAAoB,CAAC,sBAFotG;AAAb,KA/B/qG;AAkC5C,mBAAe,EAAE;AAlC2B,GAAzB,CAAhC;;;;;MA8GM,c;;;;;;;;;;;;IAAuB,gE;;AAE7B,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC;AAAc,QAAI,2BAAJ;AAAiC,WAAO,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,aAAO,CAAC,2BAA2B,KAAK,2BAA2B,GAAG,oEAA6B,cAA7B,CAAnC,CAA5B,EAA8G,CAAC,IAAI,cAAnH,CAAP;AAA4I,KAAxL;AAA2L,GAA1O,EAApC;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,QAAD,EAAW,gBAAX,EAA6B,EAA7B,CAAD,CAAnC;AAAuE,aAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAlF;AAA2G,YAAQ,EAAE,CAArH;AAAwH,gBAAY,EAAE,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACvP,qEAAsB,MAAtB,EAA8B,GAAG,CAAC,IAAlC;AACH;AAAE,KAFsD;AAEpD,UAAM,EAAE;AAAE,UAAI,EAAE;AAAR,KAF4C;AAE1B,YAAQ,EAAE,CAAC,wEAAD;AAFgB,GAAzB,CAApC;;;;;MAeM,kB;;;;;;;;;;;;IAA2B,oE;;AAEjC,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC;AAAc,QAAI,+BAAJ;AAAqC,WAAO,SAAS,0BAAT,CAAoC,CAApC,EAAqC;AAAI,aAAO,CAAC,+BAA+B,KAAK,+BAA+B,GAAG,oEAA6B,kBAA7B,CAAvC,CAAhC,EAA0H,CAAC,IAAI,kBAA/H,CAAP;AAA4J,KAA5M;AAA+M,GAAlQ,EAAxC;;AACA,oBAAkB,CAAC,IAAnB;AAA0B;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,kBAAR;AAA4B,aAAS,EAAE,CAAC,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAD,CAAvC;AAA+E,aAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAA1F;AAAuH,YAAQ,EAAE,CAAjI;AAAoI,gBAAY,EAAE,SAAS,+BAAT,CAAyC,EAAzC,EAA6C,GAA7C,EAAgD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3Q,qEAAsB,MAAtB,EAA8B,GAAG,CAAC,IAAlC;AACH;AAAE,KAF0D;AAExD,UAAM,EAAE;AAAE,UAAI,EAAE;AAAR,KAFgD;AAE9B,YAAQ,EAAE,CAAC,wEAAD;AAFoB,GAAzB,CAAxC;;;;;MAsBM,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAtC;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,aAAS,EAAE,CAAC,yBAAD,EAA4B,qEAA5B,CAAb;AAA6D,WAAO,EAAE,CAAC,CACzH,mEADyH,EAEzH,0DAFyH,EAGzH,8DAHyH,EAIzH,sEAJyH,EAKzH,kEALyH,EAMzH,kEANyH,EAOzH,mEAPyH,CAAD,EAQzH,mEARyH;AAAtE,GAAxB,CAAtC;;;AA+CA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,gBAA1B,EAA4C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,oBAAD,EAAuB,kBAAvB,EAA2C,OAA3C,EAAoD,YAApD,EAAkE,UAAlE,EAA8E,cAA9E,EAA8F,kBAA9F,EAAkH,aAAlH,EAAiI,cAAjI,EAAiJ,cAAjJ,CAAP;AAA0K,KAAxM;AAA0M,WAAO,EAAE;AAAc,aAAO,CAAC,mEAAD,EAC9U,0DAD8U,EAE9U,8DAF8U,EAG9U,sEAH8U,EAI9U,kEAJ8U,EAK9U,kEAL8U,EAM9U,mEAN8U,CAAP;AAMpT,KANmF;AAMjF,WAAO,EAAE;AAAc,aAAO,CAAC,mEAAD,EAAkB,OAAlB,EAA2B,YAA3B,EAAyC,UAAzC,EAAqD,cAArD,EAAqE,kBAArE,EAAyF,aAAzF,EAAwG,cAAxG,EAAwH,cAAxH,CAAP;AAAiJ;AANvF,GAA5C,CAAnD;AAM4L,CAN3M;AAQA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACx4BH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMG;;AACH;;;AAGG;;AACH;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAD,CAAD,CAAD,EAAgB,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,KAAD,CAAf,CAAhB,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,SAAD,EAAY,eAAZ,CAAZ;;AACA,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACxD,iEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,MAAM,GAAG,6DAAf;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,OAAxC;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,MAAM,CAAC,UAAtC,EAAkD,GAAlD;AACH;AAAE;;AACH,SAAS,2BAAT,CAAqC,EAArC,EAAyC,GAAzC,EAA4C;AAAI,MAAI,EAAE,GAAG,CAAT,EAAY;AACxD,iEAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B;AACA,yDAAc,CAAd;AACA;AACH;;AAAC,MAAI,EAAE,GAAG,CAAT,EAAY;AACV,QAAM,OAAO,GAAG,GAAG,CAAC,SAApB;AACA,QAAM,MAAM,GAAG,6DAAf;AACA,8DAAmB,YAAnB,EAAiC,MAAM,CAAC,OAAxC;AACA,4DAAiB,CAAjB;AACA,qEAA0B,GAA1B,EAA+B,MAAM,CAAC,YAAP,CAAoB,OAApB,EAA6B,MAAM,CAAC,IAApC,CAA/B,EAA0E,GAA1E;AACH;AAAE;;;MACG,c;;;;AAEN,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,cAAR;AAAwB,aAAS,EAAE,CAAC,CAAC,WAAD,EAAc,aAAd,EAA6B,EAA7B,CAAD,EAAmC,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,EAA1C,CAAnC,CAAnC;AAAsH,YAAQ,EAAE,cAAC,iEAA0B,CAC5M;AAAE,aAAO,EAAE,6EAAX;AAAoC,cAAQ,EAAE,kFAA4B;AAA1E,KAD4M,CAA1B,CAAD;AAAhI,GAAzB,CAApC;;;;;MAeM,Q;;;;;AACF;AAAA;;AAAA;;AACI,iCAAS,SAAT;AACA;;AACA,YAAK,cAAL,GAAsB,kBAAtB;AACA;;AACA,YAAK,4BAAL,GAAoC,KAApC;AALJ;AAMC;;;IAPkB,wD;;AASvB,UAAQ,CAAC,IAAT;AAAgB;;AAAa;AAAC;AAAc,QAAI,qBAAJ;AAA2B,WAAO,SAAS,gBAAT,CAA0B,CAA1B,EAA2B;AAAI,aAAO,CAAC,qBAAqB,KAAK,qBAAqB,GAAG,oEAA6B,QAA7B,CAA7B,CAAtB,EAA4F,CAAC,IAAI,QAAjG,CAAP;AAAoH,KAA1J;AAA6J,GAAtM,EAA9B;;AACA,UAAQ,CAAC,IAAT;AAAgB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,QAAR;AAAkB,aAAS,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAAhB,CAA7B;AAA0E,aAAS,EAAE,CAAC,CAAD,EAAI,WAAJ,CAArF;AAAuG,YAAQ,EAAE,CAAjH;AAAoH,gBAAY,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACvO,kEAAmB,wBAAnB,EAA6C,GAAG,CAAC,WAAjD;AACH;AAAE,KAFgD;AAE9C,YAAQ,EAAE,CAAC,UAAD,CAFoC;AAEtB,YAAQ,EAAE,cAAC,iEAA0B,CAC1D;AACA;AACA;AAAE,aAAO,EAAE,6EAAX;AAAoC,cAAQ,EAAE,kFAA4B;AAA1E,KAH0D,EAI1D;AAAE,aAAO,EAAE,wDAAX;AAAqB,iBAAW,EAAE;AAAlC,KAJ0D,EAK1D;AAAE,aAAO,EAAE,yDAAX;AAAsB,iBAAW,EAAE;AAAnC,KAL0D,EAM1D;AAAE,aAAO,EAAE,0EAAX;AAAuC,cAAQ,EAAE,wEAAwB;AAAzE,KAN0D,EAO1D;AACA;AAAE,aAAO,EAAE,2EAAX;AAAwC,cAAQ,EAAE;AAAlD,KAR0D,CAA1B,CAAD,EAS/B,wEAT+B,CAFY;AAWP,sBAAkB,EAAE,GAXb;AAWkB,SAAK,EAAE,CAXzB;AAW4B,QAAI,EAAE,CAXlC;AAWqC,UAAM,EAAE,CAAC,CAAC,iBAAD,EAAoB,EAApB,CAAD,EAA0B,CAAC,WAAD,EAAc,EAAd,CAA1B,EAA6C,CAAC,iBAAD,EAAoB,EAApB,CAA7C,EAAsE,CAAC,iBAAD,EAAoB,EAApB,CAAtE,CAX7C;AAW6I,YAAQ,EAAE,SAAS,iBAAT,CAA2B,EAA3B,EAA+B,GAA/B,EAAkC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACxP,sEAAuB,GAAvB;AACA,mEAAoB,CAApB;AACA,mEAAoB,CAApB,EAAuB,CAAvB;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAnBgD;AAmB9C,cAAU,EAAE,CAAC,+DAAD,EAAyB,6DAAzB,EAA+C,+DAA/C,EAAuE,+DAAvE,CAnBkC;AAmB8D,UAAM,EAAE,CAAC,u6EAAD,CAnBtE;AAmBi/E,iBAAa,EAAE;AAnBhgF,GAAzB,CAA9B;;;;;MA2DM,U;;;;;;;;;;;;IAAmB,0D;;AAEzB,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC;AAAc,QAAI,uBAAJ;AAA6B,WAAO,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,aAAO,CAAC,uBAAuB,KAAK,uBAAuB,GAAG,oEAA6B,UAA7B,CAA/B,CAAxB,EAAkG,CAAC,IAAI,UAAvG,CAAP;AAA4H,KAApK;AAAuK,GAAlN,EAAhC;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyD,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,0DAAX;AAAuB,iBAAW,EAAE;AAApC,KAAD,CAA1B,CAAD,EAAgF,wEAAhF;AAAnE,GAAzB,CAAhC;;;;;MAYM,gB;;;;;;;;;;;;IAAyB,gE;;AAE/B,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC;AAAc,QAAI,6BAAJ;AAAmC,WAAO,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,aAAO,CAAC,6BAA6B,KAAK,6BAA6B,GAAG,oEAA6B,gBAA7B,CAArC,CAA9B,EAAoH,CAAC,IAAI,gBAAzH,CAAP;AAAoJ,KAAlM;AAAqM,GAAtP,EAAtC;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,CAArC;AAAqE,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,gEAAX;AAA6B,iBAAW,EAAE;AAA1C,KAAD,CAA1B,CAAD,EAA4F,wEAA5F;AAA/E,GAAzB,CAAtC;;;;;MAYM,gB;;;;;;;;;;;;IAAyB,gE;;AAE/B,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC;AAAc,QAAI,6BAAJ;AAAmC,WAAO,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,aAAO,CAAC,6BAA6B,KAAK,6BAA6B,GAAG,oEAA6B,gBAA7B,CAArC,CAA9B,EAAoH,CAAC,IAAI,gBAAzH,CAAP;AAAoJ,KAAlM;AAAqM,GAAtP,EAAtC;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,gBAAR;AAA0B,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAD,CAArC;AAAqE,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,gEAAX;AAA6B,iBAAW,EAAE;AAA1C,KAAD,CAA1B,CAAD,EAA4F,wEAA5F;AAA/E,GAAzB,CAAtC;;;;;MAYM,Y;;;;;;;;;;;;;;AACF;AACA,qBAAQ;AAAK,eAAO,KAAK,KAAZ;AAAoB,O;WACjC,aAAS,IAAT,EAAa;AAAI,aAAK,aAAL,CAAmB,IAAnB;AAA2B;AAC5C;;;;;AAKG;;;;aACH,qCAAyB;AACrB;;AACA,aAAK,mBAAL,CAAyB,IAAzB,sBAA4C,KAAK,oBAAjD;AACH;;;;IAbsB,4D;;AAe3B,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC;AAAc,QAAI,yBAAJ;AAA+B,WAAO,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,aAAO,CAAC,yBAAyB,KAAK,yBAAyB,GAAG,oEAA6B,YAA7B,CAAjC,CAA1B,EAAwG,CAAC,IAAI,YAA7G,CAAP;AAAoI,KAA9K;AAAiL,GAA9N,EAAlC;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6D,UAAM,EAAE;AAAE,YAAM,EAAE,QAAV;AAAoB,UAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB;AAA1B,KAArE;AAA2H,YAAQ,EAAE,cAAC,iEAA0B,CAC/M;AAAE,aAAO,EAAE,4DAAX;AAAyB,iBAAW,EAAE;AAAtC,KAD+M,EAE/M;AAAE,aAAO,EAAE,4BAAX;AAAyC,iBAAW,EAAE;AAAtD,KAF+M,CAA1B,CAAD,EAGpL,wEAHoL;AAArI,GAAzB,CAAlC;;;;;MAsBM,a;;;;;;;;;;;;IAAsB,6D;;AAE5B,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC;AAAc,QAAI,0BAAJ;AAAgC,WAAO,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,aAAO,CAAC,0BAA0B,KAAK,0BAA0B,GAAG,oEAA6B,aAA7B,CAAlC,CAA3B,EAA2G,CAAC,IAAI,aAAhH,CAAP;AAAwI,KAAnL;AAAsL,GAApO,EAAnC;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwF,aAAS,EAAE,CAAC,MAAD,EAAS,cAAT,EAAyB,CAAzB,EAA4B,iBAA5B,CAAnG;AAAmJ,YAAQ,EAAE,CAAC,wEAAD;AAA7J,GAAzB,CAAnC;;;;;MAYM,a;;;;;;;;;;;;IAAsB,6D;;AAE5B,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC;AAAc,QAAI,0BAAJ;AAAgC,WAAO,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,aAAO,CAAC,0BAA0B,KAAK,0BAA0B,GAAG,oEAA6B,aAA7B,CAAlC,CAA3B,EAA2G,CAAC,IAAI,aAAhH,CAAP;AAAwI,KAAnL;AAAsL,GAApO,EAAnC;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,IAAD,EAAO,iBAAP,EAA0B,EAA1B,CAAtB,CAAlC;AAAwF,aAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,iBAAxB,CAAnG;AAA+I,YAAQ,EAAE,CAAC,wEAAD;AAAzJ,GAAzB,CAAnC;;;;;MAYM,O;;;;;;;;;;;;IAAgB,uD;;AAEtB,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC;AAAc,QAAI,oBAAJ;AAA0B,WAAO,SAAS,eAAT,CAAyB,CAAzB,EAA0B;AAAI,aAAO,CAAC,oBAAoB,KAAK,oBAAoB,GAAG,oEAA6B,OAA7B,CAA5B,CAArB,EAAyF,CAAC,IAAI,OAA9F,CAAP;AAAgH,KAArJ;AAAwJ,GAAhM,EAA7B;;AACA,SAAO,CAAC,IAAR;AAAe;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,OAAR;AAAiB,aAAS,EAAE,CAAC,CAAC,UAAD,CAAD,EAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf,CAA5B;AAAoE,aAAS,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,UAAxB,CAA/E;AAAoH,YAAQ,EAAE,CAAC,wEAAD;AAA9H,GAAzB,CAA7B;;;;;MAuBM,e;;;;;;;;;;;;IAAwB,+D;;AAE9B,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC;AAAc,QAAI,4BAAJ;AAAkC,WAAO,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,aAAO,CAAC,4BAA4B,KAAK,4BAA4B,GAAG,oEAA6B,eAA7B,CAApC,CAA7B,EAAiH,CAAC,IAAI,eAAtH,CAAP;AAAgJ,KAA7L;AAAgM,GAAhP,EAArC;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmE,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C,YAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,KAA3E;AAAqK,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,+DAAX;AAA4B,iBAAW,EAAE;AAAzC,KAAD,CAA1B,CAAD,EAA0F,wEAA1F;AAA/K,GAAzB,CAArC;;;;;MAaM,e;;;;;;;;;;;;IAAwB,+D;;AAE9B,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC;AAAc,QAAI,4BAAJ;AAAkC,WAAO,SAAS,uBAAT,CAAiC,CAAjC,EAAkC;AAAI,aAAO,CAAC,4BAA4B,KAAK,4BAA4B,GAAG,oEAA6B,eAA7B,CAApC,CAA7B,EAAiH,CAAC,IAAI,eAAtH,CAAP;AAAgJ,KAA7L;AAAgM,GAAhP,EAArC;;AACA,iBAAe,CAAC,IAAhB;AAAuB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,eAAR;AAAyB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmE,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,iBAAD,EAAoB,SAApB,CAAX;AAA2C,YAAM,EAAE,CAAC,uBAAD,EAA0B,QAA1B;AAAnD,KAA3E;AAAqK,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,+DAAX;AAA4B,iBAAW,EAAE;AAAzC,KAAD,CAA1B,CAAD,EAA0F,wEAA1F;AAA/K,GAAzB,CAArC;;;;;MAcM,S;;;;;;;;;;;;IAAkB,yD;;AAExB,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC;AAAc,QAAI,sBAAJ;AAA4B,WAAO,SAAS,iBAAT,CAA2B,CAA3B,EAA4B;AAAI,aAAO,CAAC,sBAAsB,KAAK,sBAAsB,GAAG,oEAA6B,SAA7B,CAA9B,CAAvB,EAA+F,CAAC,IAAI,SAApG,CAAP;AAAwH,KAA/J;AAAkK,GAA5M,EAA/B;;AACA,WAAS,CAAC,IAAV;AAAiB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,SAAR;AAAmB,aAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuD,UAAM,EAAE;AAAE,aAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAAX;AAA4C,UAAI,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAAlD,KAA/D;AAA8I,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,yDAAX;AAAsB,iBAAW,EAAE;AAAnC,KAAD,CAA1B,CAAD,EAA8E,wEAA9E;AAAxJ,GAAzB,CAA/B;;;;;MAUM,Y;;;;;;;;;;;;IAAqB,4D;;AAE3B,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC;AAAc,QAAI,yBAAJ;AAA+B,WAAO,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,aAAO,CAAC,yBAAyB,KAAK,yBAAyB,GAAG,oEAA6B,YAA7B,CAAjC,CAA1B,EAAwG,CAAC,IAAI,YAA7G,CAAP;AAAoI,KAA9K;AAAiL,GAA9N,EAAlC;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqF,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsI,YAAQ,EAAE,CAAC,cAAD,CAAhJ;AAAkK,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,4DAAX;AAAyB,iBAAW,EAAE;AAAtC,KAAD,CAA1B,CAAD,EAAoF,wEAApF,CAA5K;AAAoS,SAAK,EAAE,CAA3S;AAA8S,QAAI,EAAE,CAApT;AAAuT,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAA/T;AAAwV,YAAQ,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3c,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAFoD;AAElD,cAAU,EAAE,CAAC,6DAAD,CAFsC;AAEd,iBAAa,EAAE;AAFD,GAAzB,CAAlC;;;;;MAqBM,Y;;;;;;;;;;;;IAAqB,4D;;AAE3B,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC;AAAc,QAAI,yBAAJ;AAA+B,WAAO,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,aAAO,CAAC,yBAAyB,KAAK,yBAAyB,GAAG,oEAA6B,YAA7B,CAAjC,CAA1B,EAAwG,CAAC,IAAI,YAA7G,CAAP;AAAoI,KAA9K;AAAiL,GAA9N,EAAlC;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,IAAD,EAAO,gBAAP,EAAyB,EAAzB,CAArB,CAAjC;AAAqF,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,gBAAnB,CAAhG;AAAsI,YAAQ,EAAE,CAAC,cAAD,CAAhJ;AAAkK,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,4DAAX;AAAyB,iBAAW,EAAE;AAAtC,KAAD,CAA1B,CAAD,EAAoF,wEAApF,CAA5K;AAAoS,SAAK,EAAE,CAA3S;AAA8S,QAAI,EAAE,CAApT;AAAuT,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAA/T;AAAwV,YAAQ,EAAE,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,GAAnC,EAAsC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAC3c,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAFoD;AAElD,cAAU,EAAE,CAAC,6DAAD,CAFsC;AAEd,iBAAa,EAAE;AAFD,GAAzB,CAAlC;;;;;MAqBM,M;;;;;;;;;;;;IAAe,sD;;AAErB,QAAM,CAAC,IAAP;AAAc;;AAAa;AAAC;AAAc,QAAI,mBAAJ;AAAyB,WAAO,SAAS,cAAT,CAAwB,CAAxB,EAAyB;AAAI,aAAO,CAAC,mBAAmB,KAAK,mBAAmB,GAAG,oEAA6B,MAA7B,CAA3B,CAApB,EAAsF,CAAC,IAAI,MAA3F,CAAP;AAA4G,KAAhJ;AAAmJ,GAA1L,EAA5B;;AACA,QAAM,CAAC,IAAP;AAAc;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,MAAR;AAAgB,aAAS,EAAE,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,IAAD,EAAO,SAAP,EAAkB,EAAlB,CAAd,CAA3B;AAAiE,aAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,SAAnB,CAA5E;AAA2G,YAAQ,EAAE,CAAC,QAAD,CAArH;AAAiI,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,sDAAX;AAAmB,iBAAW,EAAE;AAAhC,KAAD,CAA1B,CAAD,EAAwE,wEAAxE,CAA3I;AAAuP,SAAK,EAAE,CAA9P;AAAiQ,QAAI,EAAE,CAAvQ;AAA0Q,UAAM,EAAE,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,CAAlR;AAA2S,YAAQ,EAAE,SAAS,eAAT,CAAyB,EAAzB,EAA6B,GAA7B,EAAgC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAClZ,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;AAAE,KAF8C;AAE5C,cAAU,EAAE,CAAC,6DAAD,CAFgC;AAER,iBAAa,EAAE;AAFP,GAAzB,CAA5B;;;;;MAqBM,Y;;;;;;;;;;;;IAAqB,4D;;AAE3B,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC;AAAc,QAAI,yBAAJ;AAA+B,WAAO,SAAS,oBAAT,CAA8B,CAA9B,EAA+B;AAAI,aAAO,CAAC,yBAAyB,KAAK,yBAAyB,GAAG,oEAA6B,YAA7B,CAAjC,CAA1B,EAAwG,CAAC,IAAI,YAA7G,CAAP;AAAoI,KAA9K;AAAiL,GAA9N,EAAlC;;AACA,cAAY,CAAC,IAAb;AAAoB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,YAAR;AAAsB,aAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,cAAhB,EAAgC,EAAhC,CAAD,CAAjC;AAAwE,YAAQ,EAAE,cAAC,iEAA0B,CAAC;AAAE,aAAO,EAAE,4DAAX;AAAyB,iBAAW,EAAE;AAAtC,KAAD,CAA1B,CAAD,EAAoF,wEAApF;AAAlF,GAAzB,CAAlC;;;;;MAyBM,a;;;;;;;;;;;;IAAsB,6D;;AAE5B,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC;AAAc,QAAI,0BAAJ;AAAgC,WAAO,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,aAAO,CAAC,0BAA0B,KAAK,0BAA0B,GAAG,oEAA6B,aAA7B,CAAlC,CAA3B,EAA2G,CAAC,IAAI,aAAhH,CAAP;AAAwI,KAAnL;AAAsL,GAApO,EAAnC;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD,YAAQ,EAAE,CAAC,wEAAD,CAAnE;AAAwG,SAAK,EAAE,CAA/G;AAAkH,QAAI,EAAE,CAAxH;AAA2H,UAAM,EAAE,CAAC,CAAC,cAAD,EAAiB,EAAjB,CAAD,EAAuB,CAAC,iBAAD,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,YAA3B,EAAyC,CAAzC,EAA4C,kBAA5C,CAAvB,EAAwF,CAAC,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,YAApB,EAAkC,CAAlC,EAAqC,YAArC,CAAxF,EAA4I,CAAC,iBAAD,EAAoB,EAApB,CAA5I,EAAqK,CAAC,UAAD,EAAa,EAAb,CAArK,CAAnI;AAA2T,YAAQ,EAAE,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,GAApC,EAAuC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAChb,8EAA+B,CAA/B,EAAkC,CAAlC;AACA,iEAAkB,CAAlB,EAAqB,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;AACA,iEAAkB,CAAlB,EAAqB,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,IAAxD,EAA8D,CAA9D;AACA;AACH;AAAE,KALqD;AAKnD,cAAU,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,UAAjC,EAA6C,aAA7C,EAA4D,OAA5D,CALuC;AAK+B,iBAAa,EAAE;AAL9C,GAAzB,CAAnC;;;AA+BA;;;;;;AAMG;;;AACH,IAAM,qBAAqB,GAAG,CAC1B;AACA,QAF0B,EAG1B,cAH0B,EAI1B;AACA,gBAL0B,EAM1B,eAN0B,EAO1B,YAP0B,EAQ1B,UAR0B,EAS1B,SAT0B,EAU1B,gBAV0B,EAW1B,eAX0B,EAY1B;AACA,aAb0B,EAc1B,OAd0B,EAe1B,aAf0B,EAgB1B;AACA,YAjB0B,EAkB1B,MAlB0B,EAmB1B,YAnB0B,EAoB1B,YApB0B,EAqB1B,aArB0B,CAA9B;;;MAuBM,c;;;;AAEN,gBAAc,CAAC,IAAf,GAAsB,SAAS,sBAAT,CAAgC,CAAhC,EAAiC;AAAI,WAAO,KAAK,CAAC,IAAI,cAAV,GAAP;AAAqC,GAAhG;;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAApC;AACA,gBAAc,CAAC,IAAf;AAAsB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAC5D,8DAD4D,EAE5D,oEAF4D,CAAD,EAG5D,oEAH4D;AAAX,GAAxB,CAApC;;;AAeA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,cAA1B,EAA0C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,QAAD,EAAW,cAAX,EAA2B,gBAA3B,EAA6C,eAA7C,EAA8D,YAA9D,EAA4E,UAA5E,EAAwF,SAAxF,EAAmG,gBAAnG,EAAqH,eAArH,EAAsI,aAAtI,EAAqJ,OAArJ,EAA8J,aAA9J,EAA6K,YAA7K,EAA2L,MAA3L,EAAmM,YAAnM,EAAiN,YAAjN,EAA+N,aAA/N,CAAP;AAAuP,KAArR;AAAuR,WAAO,EAAE;AAAc,aAAO,CAAC,8DAAD,EACzZ,oEADyZ,CAAP;AAC/X,KADiF;AAC/E,WAAO,EAAE;AAAc,aAAO,CAAC,oEAAD,EAAkB,QAAlB,EAA4B,cAA5B,EAA4C,gBAA5C,EAA8D,eAA9D,EAA+E,YAA/E,EAA6F,UAA7F,EAAyG,SAAzG,EAAoH,gBAApH,EAAsI,eAAtI,EAAuJ,aAAvJ,EAAsK,OAAtK,EAA+K,aAA/K,EAA8L,YAA9L,EAA4M,MAA5M,EAAoN,YAApN,EAAkO,YAAlO,EAAgP,aAAhP,CAAP;AAAwQ;AADhN,GAA1C,CAAnD;AACmT,CADlU;AAGA;;;;;;AAMG;;AACH;;;AAGG;;;AACH,IAAM,gBAAgB,GAAG,gBAAzB;AACA;;IACM,mB;;;;;AACF,iCAA4B;AAAA;;AAAA,QAAhB,WAAgB,uEAAF,EAAE;;AAAA;;AACxB;AACA;;AACA,WAAK,WAAL,GAAmB,IAAI,kDAAJ,CAAoB,EAApB,CAAnB;AACA;;AACA,WAAK,OAAL,GAAe,IAAI,kDAAJ,CAAoB,EAApB,CAAf;AACA;;AACA,WAAK,oBAAL,GAA4B,IAAI,0CAAJ,EAA5B;AACA;;;AAGG;;AACH,WAAK,0BAAL,GAAkC,IAAlC;AACA;;;;;;;;AAQG;;AACH,WAAK,mBAAL,GAA2B,UAAC,IAAD,EAAO,YAAP,EAAuB;AAC9C,UAAM,KAAK,GAAG,IAAI,CAAC,YAAD,CAAlB;;AACA,UAAI,sEAAc,CAAC,KAAD,CAAlB,EAA2B;AACvB,YAAM,WAAW,GAAG,MAAM,CAAC,KAAD,CAA1B,CADuB,CAEvB;AACA;;AACA,eAAO,WAAW,GAAG,gBAAd,GAAiC,WAAjC,GAA+C,KAAtD;AACH;;AACD,aAAO,KAAP;AACH,KATD;AAUA;;;;;;;;AAQG;;;AACH,WAAK,QAAL,GAAgB,UAAC,IAAD,EAAO,IAAP,EAAe;AAC3B,UAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACA,UAAM,SAAS,GAAG,IAAI,CAAC,SAAvB;;AACA,UAAI,CAAC,MAAD,IAAW,SAAS,IAAI,EAA5B,EAAgC;AAC5B,eAAO,IAAP;AACH;;AACD,aAAO,IAAI,CAAC,IAAL,CAAU,UAAC,CAAD,EAAI,CAAJ,EAAS;AACtB,YAAI,MAAM,GAAG,OAAK,mBAAL,CAAyB,CAAzB,EAA4B,MAA5B,CAAb;;AACA,YAAI,MAAM,GAAG,OAAK,mBAAL,CAAyB,CAAzB,EAA4B,MAA5B,CAAb,CAFsB,CAGtB;AACA;AACA;;;AACA,YAAM,UAAU,GAAG,OAAO,MAA1B;AACA,YAAM,UAAU,GAAG,OAAO,MAA1B;;AACA,YAAI,UAAU,KAAK,UAAnB,EAA+B;AAC3B,cAAI,UAAU,KAAK,QAAnB,EAA6B;AACzB,kBAAM,IAAI,EAAV;AACH;;AACD,cAAI,UAAU,KAAK,QAAnB,EAA6B;AACzB,kBAAM,IAAI,EAAV;AACH;AACJ,SAfqB,CAgBtB;AACA;AACA;AACA;;;AACA,YAAI,gBAAgB,GAAG,CAAvB;;AACA,YAAI,MAAM,IAAI,IAAV,IAAkB,MAAM,IAAI,IAAhC,EAAsC;AAClC;AACA,cAAI,MAAM,GAAG,MAAb,EAAqB;AACjB,4BAAgB,GAAG,CAAnB;AACH,WAFD,MAGK,IAAI,MAAM,GAAG,MAAb,EAAqB;AACtB,4BAAgB,GAAG,CAAC,CAApB;AACH;AACJ,SARD,MASK,IAAI,MAAM,IAAI,IAAd,EAAoB;AACrB,0BAAgB,GAAG,CAAnB;AACH,SAFI,MAGA,IAAI,MAAM,IAAI,IAAd,EAAoB;AACrB,0BAAgB,GAAG,CAAC,CAApB;AACH;;AACD,eAAO,gBAAgB,IAAI,SAAS,IAAI,KAAb,GAAqB,CAArB,GAAyB,CAAC,CAA9B,CAAvB;AACH,OArCM,CAAP;AAsCH,KA5CD;AA6CA;;;;;;;;;AASG;;;AACH,WAAK,eAAL,GAAuB,UAAC,IAAD,EAAO,MAAP,EAAiB;AACpC;AACA,UAAM,OAAO,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,CAAyB,UAAC,WAAD,EAAc,GAAd,EAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,eAAO,WAAW,GAAG,IAAI,CAAC,GAAD,CAAlB,GAA0B,GAAjC;AACH,OARe,EAQb,EARa,EAQT,WARS,EAAhB,CAFoC,CAWpC;;AACA,UAAM,iBAAiB,GAAG,MAAM,CAAC,IAAP,GAAc,WAAd,EAA1B;AACA,aAAO,OAAO,CAAC,OAAR,CAAgB,iBAAhB,KAAsC,CAAC,CAA9C;AACH,KAdD;;AAeA,WAAK,KAAL,GAAa,IAAI,kDAAJ,CAAoB,WAApB,CAAb;;AACA,WAAK,yBAAL;;AAhHwB;AAiH3B;AACD;;;;;SACA,eAAQ;AAAK,aAAO,KAAK,KAAL,CAAW,KAAlB;AAA0B,K;SACvC,aAAS,IAAT,EAAa;AACT,WAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,EADS,CAET;AACA;;;AACA,UAAI,CAAC,KAAK,0BAAV,EAAsC;AAClC,aAAK,WAAL,CAAiB,IAAjB;AACH;AACJ;AACD;;;AAGG;;;;SACH,eAAU;AAAK,aAAO,KAAK,OAAL,CAAa,KAApB;AAA4B,K;SAC3C,aAAW,MAAX,EAAiB;AACb,WAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB,EADa,CAEb;AACA;;;AACA,UAAI,CAAC,KAAK,0BAAV,EAAsC;AAClC,aAAK,WAAL,CAAiB,KAAK,IAAtB;AACH;AACJ;AACD;;;AAGG;;;;SACH,eAAQ;AAAK,aAAO,KAAK,KAAZ;AAAoB,K;SACjC,aAAS,IAAT,EAAa;AACT,WAAK,KAAL,GAAa,IAAb;;AACA,WAAK,yBAAL;AACH;AACD;;;;;;;;;AASG;;;;SACH,eAAa;AAAK,aAAO,KAAK,UAAZ;AAAyB,K;SAC3C,aAAc,SAAd,EAAuB;AACnB,WAAK,UAAL,GAAkB,SAAlB;;AACA,WAAK,yBAAL;AACH;AACD;;;;AAIG;;;;WACH,qCAAyB;AAAA;;AACrB,UAAI,EAAJ,CADqB,CAErB;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM,UAAU,GAAG,KAAK,KAAL,GACf,4CAAK,CAAC,KAAK,KAAL,CAAW,UAAZ,EAAwB,KAAK,KAAL,CAAW,WAAnC,CADU,GAEf,yCAAE,CAAC,IAAD,CAFN;AAGA,UAAM,UAAU,GAAG,KAAK,UAAL,GACf,4CAAK,CAAC,KAAK,UAAL,CAAgB,IAAjB,EAAuB,KAAK,oBAA5B,EAAkD,KAAK,UAAL,CAAgB,WAAlE,CADU,GAEf,yCAAE,CAAC,IAAD,CAFN;AAGA,UAAM,UAAU,GAAG,KAAK,KAAxB,CAdqB,CAerB;;AACA,UAAM,YAAY,GAAG,oDAAa,CAAC,CAAC,UAAD,EAAa,KAAK,OAAlB,CAAD,CAAb,CAChB,IADgB,CACX,oDAAG,CAAC;AAAA;AAAA,YAAE,IAAF;;AAAA,eAAY,MAAI,CAAC,WAAL,CAAiB,IAAjB,CAAZ;AAAA,OAAD,CADQ,CAArB,CAhBqB,CAkBrB;;AACA,UAAM,WAAW,GAAG,oDAAa,CAAC,CAAC,YAAD,EAAe,UAAf,CAAD,CAAb,CACf,IADe,CACV,oDAAG,CAAC;AAAA;AAAA,YAAE,IAAF;;AAAA,eAAY,MAAI,CAAC,UAAL,CAAgB,IAAhB,CAAZ;AAAA,OAAD,CADO,CAApB,CAnBqB,CAqBrB;;AACA,UAAM,aAAa,GAAG,oDAAa,CAAC,CAAC,WAAD,EAAc,UAAd,CAAD,CAAb,CACjB,IADiB,CACZ,oDAAG,CAAC;AAAA;AAAA,YAAE,IAAF;;AAAA,eAAY,MAAI,CAAC,SAAL,CAAe,IAAf,CAAZ;AAAA,OAAD,CADS,CAAtB,CAtBqB,CAwBrB;;AACA,OAAC,EAAE,GAAG,KAAK,0BAAX,MAA2C,IAA3C,IAAmD,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4E,EAAE,CAAC,WAAH,EAA5E;AACA,WAAK,0BAAL,GAAkC,aAAa,CAAC,SAAd,CAAwB,cAAI;AAAA,eAAI,MAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAJ;AAAA,OAA5B,CAAlC;AACH;AACD;;;;AAIG;;;;WACH,qBAAY,IAAZ,EAAgB;AAAA;;AACZ;AACA;AACA;AACA,WAAK,YAAL,GAAqB,KAAK,MAAL,IAAe,IAAf,IAAuB,KAAK,MAAL,KAAgB,EAAxC,GAA8C,IAA9C,GAChB,IAAI,CAAC,MAAL,CAAY,aAAG;AAAA,eAAI,MAAI,CAAC,eAAL,CAAqB,GAArB,EAA0B,MAAI,CAAC,MAA/B,CAAJ;AAAA,OAAf,CADJ;;AAEA,UAAI,KAAK,SAAT,EAAoB;AAChB,aAAK,gBAAL,CAAsB,KAAK,YAAL,CAAkB,MAAxC;AACH;;AACD,aAAO,KAAK,YAAZ;AACH;AACD;;;;AAIG;;;;WACH,oBAAW,IAAX,EAAe;AACX;AACA,UAAI,CAAC,KAAK,IAAV,EAAgB;AACZ,eAAO,IAAP;AACH;;AACD,aAAO,KAAK,QAAL,CAAc,IAAI,CAAC,KAAL,EAAd,EAA4B,KAAK,IAAjC,CAAP;AACH;AACD;;;AAGG;;;;WACH,mBAAU,IAAV,EAAc;AACV,UAAI,CAAC,KAAK,SAAV,EAAqB;AACjB,eAAO,IAAP;AACH;;AACD,UAAM,UAAU,GAAG,KAAK,SAAL,CAAe,SAAf,GAA2B,KAAK,SAAL,CAAe,QAA7D;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,UAAX,EAAuB,UAAU,GAAG,KAAK,SAAL,CAAe,QAAnD,CAAP;AACH;AACD;;;;AAIG;;;;WACH,0BAAiB,kBAAjB,EAAmC;AAAA;;AAC/B,aAAO,CAAC,OAAR,GAAkB,IAAlB,CAAuB,YAAK;AACxB,YAAM,SAAS,GAAG,MAAI,CAAC,SAAvB;;AACA,YAAI,CAAC,SAAL,EAAgB;AACZ;AACH;;AACD,iBAAS,CAAC,MAAV,GAAmB,kBAAnB,CALwB,CAMxB;;AACA,YAAI,SAAS,CAAC,SAAV,GAAsB,CAA1B,EAA6B;AACzB,cAAM,aAAa,GAAG,IAAI,CAAC,IAAL,CAAU,SAAS,CAAC,MAAV,GAAmB,SAAS,CAAC,QAAvC,IAAmD,CAAnD,IAAwD,CAA9E;AACA,cAAM,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,SAAS,CAAC,SAAnB,EAA8B,aAA9B,CAArB;;AACA,cAAI,YAAY,KAAK,SAAS,CAAC,SAA/B,EAA0C;AACtC,qBAAS,CAAC,SAAV,GAAsB,YAAtB,CADsC,CAEtC;AACA;;AACA,kBAAI,CAAC,oBAAL,CAA0B,IAA1B;AACH;AACJ;AACJ,OAjBD;AAkBH;AACD;;;AAGG;;;;WACH,mBAAO;AACH,UAAI,CAAC,KAAK,0BAAV,EAAsC;AAClC,aAAK,yBAAL;AACH;;AACD,aAAO,KAAK,WAAZ;AACH;AACD;;;AAGG;;;;WACH,sBAAU;AACN,UAAI,EAAJ;;AACA,OAAC,EAAE,GAAG,KAAK,0BAAX,MAA2C,IAA3C,IAAmD,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4E,EAAE,CAAC,WAAH,EAA5E;AACA,WAAK,0BAAL,GAAkC,IAAlC;AACH;;;;EArR6B,gE;AAuRlC;;;;;;;;;;;;AAYG;;;IACG,kB;;;;;;;;;;;;EAA2B,mB;AAGjC;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrzBH;AACA;AACA;AACA;AAEA;;;;;;AAMG;AACH;;AACA;;AACA;AACA;AAEA,IAAM,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,iBAAD,CAAD,CAAN,CAAZ;AACA,IAAM,GAAG,GAAG,CAAC,GAAD,EAAM,iBAAN,CAAZ;;AACA,IAAM,eAAe,gBAAG,kEAAU;AAC9B,kBAAY,WAAZ,EAAuB;AAAA;;AACnB,SAAK,WAAL,GAAmB,WAAnB;AACH;;AAH6B;AAAA,IAAlC;;;MAKM,a;;;;AAEN,eAAa,CAAC,IAAd,GAAqB,SAAS,qBAAT,CAA+B,CAA/B,EAAgC;AAAI,WAAO,KAAK,CAAC,IAAI,aAAV,GAAP;AAAoC,GAA7F;;AACA,eAAa,CAAC,IAAd;AAAqB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,aAAR;AAAuB,aAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD,aAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAApE;AAA4F,YAAQ,EAAE,CAAC,eAAD;AAAtG,GAAzB,CAAnC;;;;;MASM,U;;;;;AACF,wBAAY,UAAZ,EAAwB,SAAxB,EAAmC,QAAnC,EAA2C;AAAA;;AAAA;;AACvC,gCAAM,UAAN;AACA,YAAK,SAAL,GAAiB,SAAjB,CAFuC,CAGvC;;AACA,YAAK,SAAL,GAAiB,QAAjB;AAJuC;AAK1C;;;;aACD,2BAAe;AAAA;;AACX,YAAI,KAAK,SAAL,CAAe,SAAnB,EAA8B;AAC1B,eAAK,uBAAL;;AACA,eAAK,YAAL,CAAkB,OAAlB,CAA0B,SAA1B,CAAoC;AAAA,mBAAM,MAAI,CAAC,uBAAL,EAAN;AAAA,WAApC;AACH;AACJ;AACD;;AAEG;;;;aACH,mCAAuB;AAAA;;AACnB,YAAI,KAAK,YAAL,CAAkB,MAAlB,KAA6B,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAAjE,CAAJ,EAAiF;AAC7E;AACA;AACA,cAAM,eAAe,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,WAAL,CAAiB,aAAjB,CAA+B,UAA1C,EACnB,MADmB,CACZ,cAAI;AAAA,mBAAI,EAAE,IAAI,CAAC,SAAL,IAAkB,IAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,iBAAxB,CAApB,CAAJ;AAAA,WADQ,EAEnB,MAFmB,CAEZ,cAAI;AAAA,mBAAI,IAAI,CAAC,QAAL,MAAmB,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,SAAL,CAAe,YAAhC,GAA+C,CAAlE,CAAJ;AAAA,WAFQ,EAGnB,IAHmB,CAGd,cAAI;AAAA,mBAAI,CAAC,EAAE,IAAI,CAAC,WAAL,IAAoB,IAAI,CAAC,WAAL,CAAiB,IAAjB,EAAtB,CAAL;AAAA,WAHU,CAAxB;;AAIA,cAAI,eAAJ,EAAqB;AACjB,uCAA2B;AAC9B;AACJ;AACJ;;;;IA5BoB,e;;AA8BzB,YAAU,CAAC,IAAX,GAAkB,SAAS,kBAAT,CAA4B,CAA5B,EAA6B;AAAI,WAAO,KAAK,CAAC,IAAI,UAAV,EAAsB,gEAAyB,qDAAzB,CAAtB,EAAmE,gEAAyB,2DAAzB,CAAnE,EAA8G,gEAAyB,qDAAzB,CAA9G,CAAP;AAA2J,GAA9M;;AACA,YAAU,CAAC,IAAX;AAAkB;;AAAa;AAAC,kEAAyB;AAAE,QAAI,EAAE,UAAR;AAAoB,aAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAA/B;AAAkD,kBAAc,EAAE,SAAS,yBAAT,CAAmC,EAAnC,EAAuC,GAAvC,EAA4C,QAA5C,EAAoD;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACvL,qEAAsB,QAAtB,EAAgC,aAAhC,EAA+C,CAA/C;AACH;;AAAC,UAAI,EAAE,GAAG,CAAT,EAAY;AACV,YAAI,EAAJ;;AACA,qEAAsB,EAAE,GAAG,2DAA3B,MAAqD,GAAG,CAAC,YAAJ,GAAmB,EAAxE;AACH;AAAE,KALkD;AAKhD,aAAS,EAAE,CAAC,CAAD,EAAI,aAAJ,CALqC;AAKjB,YAAQ,EAAE,CALO;AAKJ,gBAAY,EAAE,SAAS,uBAAT,CAAiC,EAAjC,EAAqC,GAArC,EAAwC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AACnH,kEAAmB,2BAAnB,EAAgD,GAAG,CAAC,YAAJ,CAAiB,MAAjB,GAA0B,CAA1E,EAA6E,wBAA7E,EAAuG,GAAG,CAAC,YAAJ,CAAiB,MAAjB,KAA4B,CAAnI;AACH;AAAE,KAPkD;AAOhD,UAAM,EAAE;AAAE,WAAK,EAAE;AAAT,KAPwC;AAOpB,YAAQ,EAAE,CAAC,YAAD,CAPU;AAOM,YAAQ,EAAE,CAAC,wEAAD,CAPhB;AAOqD,sBAAkB,EAAE,GAPzE;AAO8E,SAAK,EAAE,CAPrF;AAOwF,QAAI,EAAE,CAP9F;AAOiG,YAAQ,EAAE,SAAS,mBAAT,CAA6B,EAA7B,EAAiC,GAAjC,EAAoC;AAAI,UAAI,EAAE,GAAG,CAAT,EAAY;AAChN,sEAAuB,GAAvB;AACA,mEAAoB,CAApB;AACA,mEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,KAXkD;AAWhD,UAAM,EAAE,CAAC,2TAAD,CAXwC;AAWuR,iBAAa,EAAE,CAXtS;AAWyS,mBAAe,EAAE;AAX1T,GAAzB,CAAhC;;;AA2CA;;;AAGG;;;AACH,SAAS,2BAAT,GAAoC;AAChC,QAAM,KAAK,CAAC,gEACR,wFADQ,GAER,+CAFO,CAAX;AAGH;;;MASK,gB;;;;AAEN,kBAAgB,CAAC,IAAjB,GAAwB,SAAS,wBAAT,CAAkC,CAAlC,EAAmC;AAAI,WAAO,KAAK,CAAC,IAAI,gBAAV,GAAP;AAAuC,GAAtG;;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,QAAI,EAAE;AAAR,GAAxB,CAAtC;AACA,kBAAgB,CAAC,IAAjB;AAAwB;;AAAa;AAAC,iEAAwB;AAAE,WAAO,EAAE,CAAC,CAAC,mEAAD,CAAD,EAAoB,mEAApB;AAAX,GAAxB,CAAtC;;;AASA;;;AAAA,CAAC;AAAc,GAAC,OAAO,SAAP,KAAqB,WAArB,IAAoC,SAArC,KAAmD,iEAA0B,gBAA1B,EAA4C;AAAE,gBAAY,EAAE;AAAc,aAAO,CAAC,UAAD,EAAa,aAAb,CAAP;AAAqC,KAAnE;AAAqE,WAAO,EAAE;AAAc,aAAO,CAAC,mEAAD,CAAP;AAA2B,KAAvH;AAAyH,WAAO,EAAE;AAAc,aAAO,CAAC,UAAD,EAAa,aAAb,EAA4B,mEAA5B,CAAP;AAAsD;AAAtM,GAA5C,CAAnD;AAA2S,CAA1T;AAEA;;;;;;AAMG;;AAEH;;AAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJoE;AAC1B;AAC2C;;;;;;;;;;;QCEhD,6EAAkB;;;;;QAe9B,uEAAyD;QAAA,iFAAsB;QAAA,4DAAO;;;;;QACtF,uEAAoD;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFhF,4EAA4F;QAC1F,6IAAsF;QACtF,6IAA8E;QAChF,4DAAY;;;;QAFH,0DAAgD;QAAhD,mHAAgD;QAChD,0DAA2C;QAA3C,8GAA2C;;;;;QAYtD,uEAAqD;QAAA,iFAAsB;QAAA,4DAAO;;;;;QAClF,uEAAsD;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFlF,4EAAoF;QAClF,6IAAkF;QAClF,6IAAgF;QAClF,4DAAY;;;;QAFH,0DAA4C;QAA5C,+GAA4C;QAC5C,0DAA6C;QAA7C,gHAA6C;;;;;QAUpD,uEAA0D;QAAA,iFAAsB;QAAA,4DAAO;;;;;QACvF,uEAAqD;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFjF,4EAA8F;QAC5F,6IAAuF;QACvF,6IAA+E;QACjF,4DAAY;;;;QAFH,0DAAiD;QAAjD,oHAAiD;QACjD,0DAA4C;QAA5C,+GAA4C;;;;;;QAtCtE,yEAAsB;QACvB,yEAAkB;QACd,yEAA4C;QACxC,wEAAuB;QAAA,0EAAe;QAAA,4DAAK;QAC3C,uEAAyB;QAAA,uFAA4B;QAAA,4DAAI;QAC7D,4DAAM;QACN,0EAAuB;QACnB,2EAA4B;QACxB,0EAAiB;QACb,2EAAsB;QAClB,sFAA2C;QACzC,6EAAyH;QAAnC,uWAAiC;QAAvH,4DAAyH;QACzH,4IAGY;QACd,4DAAiB;QACrB,4DAAM;QAEV,4DAAM;QACN,2EAAiB;QACb,2EAAsB;QACpB,sFAA2C;QACzC,6EAA0G;QAA9B,mWAA6B;QAAzG,4DAA0G;QAC5G,4DAAiB;QACjB,4IAGY;QACd,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,2EAAsB;QACpB,sFAA2C;QACzC,6EAA6H;QAApC,yWAAmC;QAA5H,4DAA6H;QAC/H,4DAAiB;QACjB,4IAGY;QACd,4DAAM;QACV,4DAAM;QACP,8EAA2F;QAAjB,4TAAgB;QAAC,gEAAI;QAAA,4DAAS;QAC3G,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACA,8EAAkC;QAAA,gEAAI;QAAA,4DAAS;;;;QAxCnC,0DAAqB;QAArB,qFAAqB;QAIyE,0DAAiC;QAAjC,+FAAiC;QAC3G,0DAA8E;QAA9E,wJAA8E;QAWhB,0DAA6B;QAA7B,2FAA6B;QAE/F,0DAAsE;QAAtE,gJAAsE;QASS,0DAAmC;QAAnC,iGAAmC;QAElH,0DAAgF;QAAhF,0JAAgF;;;;;QAepF,6EAAkB;;;;;QAE1C,gFAAyC;QACzC,4EAAsC;QAAA,+DAAI;QAAA,4DAAS;QACnD,6EAAkC;QAAA,+DAAI;QAAA,4DAAS;;;;;QAIvB,gEAAK;;;AD7DnC;IASE;QAHF,YAAO,GAAY,IAAI,uDAAO,EAAE,CAAC;QACvB,YAAO,GAAE,IAAI,uDAAY,EAAW,CAAC;IAE7B,CAAC;IAEjB,sCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAC,IAAI,qDAAS,CAAC;YACzB,WAAW,EAAG,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,0DAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjG,OAAO,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9F,YAAY,EAAG,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAC,0DAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9F,CAAC,CAAC;IACL,CAAC;IAEL,kCAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IACD,oCAAM,GAAN;IAEA,CAAC;0FAnBY,mBAAmB;qHAAnB,mBAAmB;YAAA;gBCPhC,iFAAoC;gBAClC,2EAAU;gBACR,+HAAoE;gBACpE,gIAiDc;gBAChB,4DAAW;gBACX,2EAAU;gBACR,+HAA0D;gBAC1D,+HAIc;gBAChB,4DAAW;gBACX,2EAAU;gBACR,+HAA6C;gBAC7C,oEAAG;gBAAA,6FAAiC;gBAAA,4DAAI;gBACxC,6EAAsC;gBAAA,gEAAI;gBAAA,4DAAS;gBACrD,4DAAW;gBACb,4DAAc;;;8BDrEd;CA8BC;AArB+B;;;;;;;;;;;;;;;;;;;;;AEJhC;IAGE,+BAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAGpC,CAAC;IACD,gDAAgB,GAAhB,UAAiB,EAAE;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAgB,oEAAoE,GAAC,EAAE,CAAC,CAAC;IAChH,CAAC,CAAC;IAAD,CAAC;8FARS,qBAAqB;0HAArB,qBAAqB,WAArB,qBAAqB;gCANlC;CAeC;AATiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC8BN,iFAA0D;QACrD,uDACG;QAAA,4DAAa;;;;QAFmB,6EAAiB;QACpD,0DACG;QADH,0FACG;;;ACpCpC;IAWE;QALC,cAAS,GAAC;YACT,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,gBAAgB,EAAC;YACzC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,aAAa,EAAC;YACtC,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,eAAe,EAAC;SACxC;IACc,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;kGATU,uBAAuB;yHAAvB,uBAAuB;YAAA;gBDPpC,yEAA0B;gBACtB,yEAA6B;gBACzB,yEAAiB;gBACb,yEAAsB;gBAClB,yEAAkB;gBACd,yEAA4C;gBACxC,wEAAuB;gBAAA,kFAAuB;gBAAA,4DAAK;gBACnD,uEAAyB;gBAAA,yFAA8B;gBAAA,4DAAI;gBAC/D,4DAAM;gBACN,0EAAuB;gBACnB,wEAAM;gBACF,0EAAiB;gBACb,0EAAsB;gBACpB,sFAA2C;gBACvC,wEAA2D;gBAC7D,4DAAiB;gBACrB,4DAAM;gBACV,4DAAM;gBACN,0EAAiB;gBACb,0EAAsB;gBAClB,sFAA2C;gBACzC,wEAAyE;gBAC3E,4DAAiB;gBACrB,4DAAM;gBACV,4DAAM;gBACN,0EAAiB;gBACb,0EAAsB;gBAClB,yEAAiB;gBAAA,sFAA0B;gBAA3C,4DAAiB;gBAA0B,gEAAG;gBAClD,4DAAM;gBACV,4DAAM;gBACN,0EAAiB;gBAEb,0EAAsB;gBACjB,sFAAkC;gBACzC,6EAAW;gBAAA,0EAAc;gBAAA,4DAAY;gBAC7B,8EAAY;gBACtB,oIAEqB;gBACb,4DAAa;gBACd,4DAAiB;gBACpB,4DAAM;gBACV,4DAAM;gBAIV,4DAAO;gBACV,4DAAM;gBACP,4DAAM;gBACV,4DAAM;gBACV,4DAAM;gBACV,4DAAM;gBACV,4DAAM;;;gBAhB4C,2DAAY;gBAAZ,kFAAY;;;kCCpClE;CAkBC;AAXmC;;;;;;;;;;;;;;;;;;;;;;;;ACNgC;AACvB;;;;;;;;;QCWjB,uEAAgE;QAAA,iFAAsB;QAAA,4DAAO;;;;;QAC7F,uEAA2D;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFvF,4EAAkG;QAChG,yHAA6F;QAC7F,yHAAqF;QACvF,4DAAY;;;;QAFH,0DAAuD;QAAvD,0HAAuD;QACvD,0DAAkD;QAAlD,qHAAkD;;;;;QAY7D,uEAAwD;QAAA,iFAAsB;QAAA,4DAAO;;;;;QACrF,uEAAyD;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFrF,4EAA0F;QACxF,yHAAqF;QACrF,yHAAmF;QACrF,4DAAY;;;;QAFH,0DAA+C;QAA/C,kHAA+C;QAC/C,0DAAgD;QAAhD,mHAAgD;;;;;QAUvD,uEAA6D;QAAA,iFAAsB;QAAA,4DAAO;;;;;QAC1F,uEAAwD;QAAA,8EAAmB;QAAA,4DAAO;;;;;QAFpF,4EAAoG;QAClG,yHAA0F;QAC1F,yHAAkF;QACpF,4DAAY;;;;QAFH,0DAAoD;QAApD,uHAAoD;QACpD,0DAA+C;QAA/C,kHAA+C;;;ADlC9E;IASE;QAFF,YAAO,GAAY,IAAI,uDAAO,EAAE,CAAC;IAEf,CAAC;IAEjB,gCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAC,IAAI,qDAAS,CAAC;YAC5B,WAAW,EAAG,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,0DAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjG,OAAO,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAC,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9F,YAAY,EAAG,IAAI,uDAAW,CAAC,EAAE,EAAC,8DAAkB,CAAC,CAAC,+DAAmB,EAAC,0DAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9F,CAAC,CAAC;IACL,CAAC;IAED,8BAAM,GAAN;IAEA,CAAC;8EAhBQ,aAAa;+GAAb,aAAa;YAAA;gBCT1B,yEAAsB;gBAClB,yEAAkB;gBACd,yEAA4C;gBACxC,wEAAuB;gBAAA,8EAAmB;gBAAA,4DAAK;gBAC/C,uEAAyB;gBAAA,iFAAsB;gBAAA,4DAAI;gBACvD,4DAAM;gBACN,yEAAuB;gBACnB,0EAA+B;gBAC3B,yEAAiB;gBACb,0EAAsB;gBAClB,qFAA2C;gBACzC,6EAAyH;gBAAnC,+LAAiC;gBAAvH,4DAAyH;gBACzH,wHAGY;gBACd,4DAAiB;gBACrB,4DAAM;gBAEV,4DAAM;gBACN,0EAAiB;gBACb,0EAAsB;gBACpB,qFAA2C;gBACzC,6EAA0G;gBAA9B,2LAA6B;gBAAzG,4DAA0G;gBAC5G,4DAAiB;gBACjB,wHAGY;gBACd,4DAAM;gBACV,4DAAM;gBACN,0EAAiB;gBACb,0EAAsB;gBACpB,qFAA2C;gBACzC,6EAA6H;gBAApC,iMAAmC;gBAA5H,4DAA6H;gBAC/H,4DAAiB;gBACjB,wHAGY;gBACd,4DAAM;gBACV,4DAAM;gBACN,8EAA6F;gBAAnB,sIAAS,YAAQ,IAAC;gBAAC,kEAAM;gBAAA,4DAAS;gBAC5G,sEAA4B;gBAChC,4DAAO;gBACX,4DAAM;gBACV,4DAAM;gBACV,4DAAM;;;gBAxCY,0DAAwB;gBAAxB,qFAAwB;gBAIsE,0DAAiC;gBAAjC,4FAAiC;gBAC3G,0DAAoF;gBAApF,wJAAoF;gBAWtB,0DAA6B;gBAA7B,wFAA6B;gBAE/F,0DAA4E;gBAA5E,gJAA4E;gBASG,0DAAmC;gBAAnC,8FAAmC;gBAElH,0DAAsF;gBAAtF,0JAAsF;;;wBDpCxH;CA0BG;AAjBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AERqB;AACA;AACmB;AACP;AACsB;AAC1B;AACI;AACF;AACF;AAGQ;AACN;AAEiB;AACG;AAClB;AACN;AACG;AAE8B;AAIY;AAC7C;AACc;;;AACnE;IAAA;KA4BiC;sFAApB,iBAAiB;kHAAjB,iBAAiB;uHAHjB,CAAC,+DAAc,EAAC,6EAAqB,CAAC,YAxBxC;gBACP,0DAAY;gBACZ,mEAAqB,CAAC,oEAAiB,CAAC;gBACxC,wDAAW;gBACX,gEAAmB;gBACnB,sEAAe;gBACf,oEAAc;gBACd,4EAAkB;gBAClB,oEAAc;gBACd,wEAAgB;gBAChB,kEAAa;gBACb,wEAAgB;gBAChB,sEAAe;aAGhB;4BA5CH;CAwDiC;AAAH;;wHAAjB,iBAAiB,mBAV1B,gGAAuB;YACvB,sFAAoB;YACrB,uFAAoB;YACpB,kEAAa;YACZ,oFAAmB;YACnB,4GAA2B,aArB3B,0DAAY,8DAEZ,wDAAW;YACX,gEAAmB;YACnB,sEAAe;YACf,oEAAc;YACd,4EAAkB;YAClB,oEAAc;YACd,wEAAgB;YAChB,kEAAa;YACb,wEAAgB;YAChB,sEAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxC8D;AAMJ;AACf;AACe;AAClB;AACA;AACM;AACA;AACT;AAEjD,IAAM,iBAAiB,GAAW;IACrC,IAAI;IACJ,cAAc;IACd,kBAAkB;IAClB,yBAAyB;IACzB,oCAAoC;IACpC,SAAS;IACT,YAAY;IACZ,gBAAgB;IAChB,yBAAyB;IACzB,oCAAoC;IACpC,KAAK;IACL,OAAO;IACP,cAAc;IACd,kBAAkB;IAClB,qBAAqB;IACrB,gCAAgC;IAChC,SAAS;IACT,OAAO;IACP,gBAAgB;IAChB,oBAAoB;IACpB,iCAAiC;IACjC,4CAA4C;IAC5C,SAAS;IACT,OAAO;IACP,gBAAgB;IAChB,oBAAoB;IACpB,wBAAwB;IACxB,mCAAmC;IACnC,SAAS;IACT,OAAO;IACP,gBAAgB;IAChB,oBAAoB;IACpB,8BAA8B;IAC9B,yCAAyC;IACzC,SAAS;IACT,OAAO;IACP,gBAAgB;IAChB,oBAAoB;IACpB,2BAA2B;IAC3B,sCAAsC;IACtC,SAAS;IACT,IAAI;IACJ,EAAE,IAAI,EAAE,WAAW,EAAO,SAAS,EAAE,2EAAgB,EAAE;IACvD,EAAE,IAAI,EAAE,cAAc,EAAI,SAAS,EAAE,sFAAoB,EAAE;IAC3D,EAAE,IAAI,EAAE,SAAS,EAAM,SAAS,EAAE,uFAAoB,EAAC,QAAQ,EAAC;YAC5D,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAE,kEAAa,EAAC;SAC7C,EAAC;IACF,EAAE,IAAI,EAAE,YAAY,EAAM,SAAS,EAAE,qEAAc,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAW,SAAS,EAAE,uFAAoB,EAAE;IAC3D,EAAE,IAAI,EAAE,MAAM,EAAY,SAAS,EAAE,wEAAe,EAAE;IACtD,EAAE,IAAI,EAAE,eAAe,EAAG,SAAS,EAAE,qEAAc,EAAC;IAEnD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;CAElD,CAAC;;;;;;;;;;;;;;;;;;;;;ACtEuE;AAEhB;;;;AAEzD;IAOE,qCACS,SAAoD,EAC3B,IAAW,EACnC,EAAwB;QAFzB,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAO;QACnC,OAAE,GAAF,EAAE,CAAsB;QAJpC,mBAAc,GAAiB,IAAI,mEAAa,EAAE,CAAC;IAK3C,CAAC;IAEP,8CAAQ,GAAR;QAAA,iBAOC;QAND,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,aAAG;YACD,KAAI,CAAC,cAAc,GAAC,GAAG,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,CAAC,CACF;IACD,CAAC;0GAfU,2BAA2B,uMAI5B,qEAAe,CAAC,EAAD;6HAJd,2BAA2B;YAAA;gBCVxC,yEAA0B;gBACtB,yEAA6B;gBACzB,yEAAiB;gBACb,yEAAuB;gBACnB,yEAAkB;gBACd,yEAA4C;gBACxC,wEAAuB;gBAAA,iFAAsB;gBAAA,4DAAK;gBAClD,kEAA6B;gBACjC,4DAAM;gBACN,yEAAuD;gBACjD,4EAA+C;gBACzC,6EAA4C;gBACxC,sEAAI;gBACA,sEAAI;gBAAA,yEAAa;gBAAA,4DAAK;gBACtB,sEAAI;gBAAA,uFAA2B;gBAAA,4DAAK;gBACpC,sEAAI;gBAAA,gFAAoB;gBAAA,4DAAK;gBACjC,4DAAK;gBACT,4DAAQ;gBACR,yEAAO;gBACH,sEAAK;gBACD,sEAAI;gBAAA,wDAAgC;gBAAA,4DAAK;gBACzC,sEAAI;gBAAA,wDAAuC;gBAAA,4DAAK;gBAChD,sEAAI;gBAAA,wDAAmC;gBAAA,4DAAK;gBAChD,4DAAK;gBACT,4DAAQ;gBACd,4DAAQ;gBAEd,4DAAM;gBACV,4DAAM;gBACV,4DAAM;gBACV,4DAAM;gBACV,4DAAM;gBACV,4DAAM;;;gBAZsC,2DAAgC;gBAAhC,iGAAgC;gBAChC,0DAAuC;gBAAvC,wGAAuC;gBACvC,0DAAmC;gBAAnC,oGAAmC;;;sCDtB/E;CA2BC;AAjBuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AERoB;AACc;AAC3B;AAGmD;;;;;;;;;;;;;QCO5F,yEAAsC;QAAC,wEAAY;QAAA,4DAAK;;;;;QACxD,yEAAuC;QAAC,uDAAwB;QAAA,4DAAK;;;;QAA7B,0DAAwB;QAAxB,mGAAwB;;;;;QAKhE,yEAAsC;QAAC,mEAAO;QAAA,4DAAK;;;;;QACnD,yEAAuC;QAAC,uDAA2B;QAAA,4DAAK;;;;QAAhC,0DAA2B;QAA3B,sGAA2B;;;;;QAKnE,yEAAsC;QAAC,0EAAc;QAAA,4DAAK;;;;;QAC1D,yEAAuC;QAAC,uDAAyB;QAAA,4DAAK;;;;QAA9B,0DAAyB;QAAzB,oGAAyB;;;;;QAIjE,yEAAsC;QAAC,mEAAO;QAAA,4DAAK;;;;;;;QACnD,yEAAmD;QACjD,0EAAwC;QACtC,sEAAK;QAEZ,6EAAmI;QAA3H,sYAAmC;QACpC,2EAAU;QAAA,iEAAM;QAAA,4DAAW;QAC7B,4DAAS;QAEb,4DAAM;QACD,0EAA+B;QACjC,wEAAwC;QACpC,6EAAkG;QACnG,2EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAS;QACP,4DAAI;QACP,4DAAM;QACN,uEAAK;QACH,8EAA2D;QAAxC,2YAAuC;QAAC,wEAAY;QAAA,4DAAS;QAEnF,4DAAM;QAEJ,4DAAM;QAER,4DAAK;;;QAbD,0DAAoC;QAApC,6IAAoC;;;;;QAgB1C,oEAA4D;;;;;QAC5D,oEAAkE;;;;;;QAQlE,qFAAgE;QAAhD,gWAAgC;QAAgB,4DAAiB;;;;AD1DrF;IAaE,8BAAoB,EAAiB,EAAQ,MAAiB;QAA1C,OAAE,GAAF,EAAE,CAAe;QAAQ,WAAM,GAAN,MAAM,CAAW;QAPhE,WAAM,GAAS,KAAK,CAAC;QACrB,iBAAY,GAAW,EAAE,CAAC;QAE1B,qBAAgB,GAAC,CAAE,aAAa,EAAC,SAAS,EAAE,eAAe,EAAC,QAAQ,CAAC,CAAC;IAQtE,CAAC;IACD,yCAAU,GAAV,UAAW,EAAE;QACX,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;YACd,MAAM,EAAC,OAAO;YACd,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAEvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,uCAAQ,GAAR;QAAA,iBASD;QAPA,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAC5B,aAAG;YACH,KAAI,CAAC,YAAY,GAAC,GAAG,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAC,IAAI,uEAAkB,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1D,KAAI,CAAC,UAAU,CAAC,SAAS,GAAC,KAAI,CAAC,SAAS,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAO,GAAP;QACE,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;IACnB,CAAC;IACD,2CAAY,GAAZ,UAAa,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAC,IAAI,uEAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC;IACzC,CAAC;IACD,qCAAM,GAAN,UAAQ,EAAE;QACR,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACxC,CAAC;4FA/CY,oBAAoB;sHAApB,oBAAoB;YAAA;0EAKtB,2DAAO;0EACP,qEAAY;;;;;;;;;gBCpBvB,yEAAsB;gBAClB,yEAAkC;gBAC9B,yEAA4C;gBACxC,wEAAuB;gBAAA,gFAAqB;gBAAA,4DAAK;gBACjD,kEAA6B;gBACjC,4DAAM;gBACN,yEAAuB;gBAC3B,+EAAsE;gBAMtE,2EAAyC;gBACvC,8GAAwD;gBACxD,gHAAqE;gBACvE,qEAAe;gBAGf,6EAAqC;gBACnC,gHAAmD;gBACnD,gHAAwE;gBAC1E,qEAAe;gBAGf,6EAA2C;gBACzC,gHAA0D;gBAC1D,gHAAsE;gBACxE,qEAAe;gBAEf,6EAAoC;gBAClC,gHAAmD;gBACnD,kHAuBK;gBACP,qEAAe;gBAEf,iHAA4D;gBAC5D,iHAAkE;gBAClE,4DAAY;gBAEZ,gFAAkE;gBAClE,2EAAsB;gBACpB,8EAA+G;gBAApB,6IAAS,aAAS,IAAC;gBAAC,2EAAe;gBAAA,4DAAS;gBACzI,4DAAM;gBAEN,yIAAiF;gBACrF,4DAAM;gBAEN,4DAAM;gBACN,4DAAM;gBACN,4EAA+B;;;gBAjEhB,0DAAyB;gBAAzB,sFAAyB;gBAmDhB,2DAAiC;gBAAjC,iGAAiC;gBACpB,0DAA0B;gBAA1B,kGAA0B;gBAG3C,0DAA+B;gBAA/B,kJAA+B;gBAKG,0DAAY;gBAAZ,4EAAY;;;+BDnElE;CA8DC;AAhDgC;;;;;;;;;;;;;;;;;AEdjC;IAAA;IAIA,CAAC;IAAD,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACJD;IAAA;IAKA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACAD;IAGE,wBAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;IAAI,CAAC;IAIzC,sCAAa,GAAb,UAAc,EAAU;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAU,yDAAyD,GAAC,EAAE,CAAC,CAAC;IAClG,CAAC;IACD,oCAAW,GAAX;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAY,gEAAgE,CAAC,CAAC;IACrG,CAAC,CAAC;IAAD,CAAC;gFAXS,cAAc;mHAAd,cAAc,WAAd,cAAc;yBAN3B;CAkBC;AAZ0B;;;;;;;;;;;;;;;;;;;ACH3B;IAOE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;4FALU,oBAAoB;sHAApB,oBAAoB;+BARjC;CAeC;AAPgC","file":"498.js","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, Output, QueryList, ChangeDetectorRef, ContentChildren, HostListener, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        var _a;\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, outputs: { interactedStream: \"interacted\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    interactedStream: [{ type: Output, args: ['interacted',] }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { interactedStream: [{\n            type: Output,\n            args: ['interacted']\n        }], editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        var _a;\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n            if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = (step && this.steps) ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() { return this._orientation; }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps.toArray().slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    orientation: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], orientation: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); };\nCdkStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement\n                .getAttribute('role');\n            const role = (tableRole === 'grid' || tableRole === 'treegrid') ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement\n                .getAttribute('role');\n            const role = (tableRole === 'grid' || tableRole === 'treegrid') ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = function CdkRecycleRows_Factory(t) { return new (t || CdkRecycleRows)(); };\nCdkRecycleRows.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRecycleRows, selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRecycleRows, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ],\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: ɵngcc3.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgZone, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = i0.ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() { return this._textareaElement.placeholder; }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        this._textareaElement.classList.add(this._measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = this._textareaElement.scrollHeight - 4;\n        this._textareaElement.classList.remove(this._measuringClass);\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    placeholder: [{ type: Input }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], placeholder: [{\n            type: Input\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); };\nMatButtonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Type, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether the dialog should focus the first focusable element on open. */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n        // Move focus onto the dialog immediately in order to prevent the user\n        // from accidentally opening multiple dialogs at the same time.\n        this._focusDialogContainer();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n            if (focusContainer) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = function _MatDialogContainerBase_Factory(t) { return new (t || _MatDialogContainerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\n_MatDialogContainerBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatDialogContainerBase, viewQuery: function _MatDialogContainerBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatDialogContainerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig },\n    { type: FocusMonitor }\n];\n_MatDialogContainerBase.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogContainerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }, { type: ɵngcc1.FocusMonitor }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatDialogContainer_BaseFactory; return function MatDialogContainer_Factory(t) { return (ɵMatDialogContainer_BaseFactory || (ɵMatDialogContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatDialogContainer)))(t || MatDialogContainer); }; }();\nMatDialogContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._id);\n        ɵngcc0.ɵɵattribute(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef.keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length ?\n            this._getAfterAllClosed() :\n            this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, { $implicit: config.data, dialogRef }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef }\n        ];\n        if (config.direction && (!userInjector ||\n            !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = function _MatDialogBase_Factory(t) { return new (t || _MatDialogBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OverlayContainer), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.InjectionToken)); };\n_MatDialogBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatDialogBase });\n_MatDialogBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: undefined },\n    { type: undefined },\n    { type: OverlayContainer },\n    { type: undefined },\n    { type: Type },\n    { type: Type },\n    { type: InjectionToken }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: undefined }, { type: undefined }, { type: ɵngcc3.OverlayContainer }, { type: undefined }, { type: ɵngcc0.Type }, { type: ɵngcc0.Type }, { type: ɵngcc0.InjectionToken }]; }, null); })();\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) { return ctx._onButtonClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': '_onButtonClick($event)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); };\nMatDialogModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, ErrorHandler, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result) ?\n                    new SvgIconConfig(result.url, null, result.options) :\n                    new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i3.DOCUMENT, 8), i0.ɵɵinject(i0.ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() { return this._svgIcon; }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = function MatIconModule_Factory(t) { return new (t || MatIconModule)(); };\nMatIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = /*@__PURE__*/ function () { let ɵMatTextareaAutosize_BaseFactory; return function MatTextareaAutosize_Factory(t) { return (ɵMatTextareaAutosize_BaseFactory || (ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize)))(t || MatTextareaAutosize); }; }();\nMatTextareaAutosize.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator',\n                    'role': 'group'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); };\nMatPaginatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n//# sourceMappingURL=paginator.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    _overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], _overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = /*@__PURE__*/ function () { let ɵMatSelect_BaseFactory; return function MatSelect_Factory(t) { return (ɵMatSelect_BaseFactory || (ɵMatSelect_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSelect)))(t || MatSelect); }; }();\nMatSelect.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() { return this._direction; }\n    set direction(direction) {\n        if (direction && direction !== 'asc' && direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return new (t || MatSort)(ɵngcc0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8)); };\nMatSort.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SORT_DEFAULT_OPTIONS,] }] }\n];\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SORT_DEFAULT_OPTIONS]\n            }] }]; }, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 13.0.0\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\nMatSortHeaderIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() { return this._disableClear; }\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription =\n            merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n                if (this._isSorted()) {\n                    this._updateArrowDirection();\n                    // Do not show the animation if the header was already shown in the right position.\n                    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                        this._disableViewStateAnimation = true;\n                    }\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                    this._showIndicatorHint = false;\n                }\n                // If this header was recently active and now no longer sorted, animate away the arrow.\n                if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = false;\n                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     role=\\\"button\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = function MatSortModule_Factory(t) { return new (t || MatSortModule)(); };\nMatSortModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ViewContainerRef, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 8);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 9);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_div_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementContainer(1, 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_ng_template_1_Template(rf, ctx) { }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n    ɵngcc0.ɵɵtemplate(1, MatStep_ng_template_0_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx_r0._portal);\n} }\nconst _c0 = [\"*\"];\nfunction MatStepper_ng_container_1_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n} }\nconst _c1 = function (a0, a1) { return { step: a0, i: a1 }; };\nfunction MatStepper_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_1_ng_container_2_div_2_Template, 1, 0, \"div\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const isLast_r8 = ctx.last;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c1, step_r6, i_r7));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r8);\n} }\nfunction MatStepper_ng_container_1_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵlistener(\"@horizontalStepTransition.done\", function MatStepper_ng_container_1_div_4_Template_div_animation_horizontalStepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@horizontalStepTransition\", ctx_r5._getAnimationDirection(i_r11))(\"id\", ctx_r5._getStepContentId(i_r11));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r5._getStepLabelId(i_r11))(\"aria-expanded\", ctx_r5.selectedIndex === i_r11);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r10.content);\n} }\nfunction MatStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_1_ng_container_2_Template, 3, 6, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(4, MatStepper_ng_container_1_div_4_Template, 2, 5, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n} }\nfunction MatStepper_ng_container_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"@verticalStepTransition.done\", function MatStepper_ng_container_2_div_1_Template_div_animation_verticalStepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 16);\n    ɵngcc0.ɵɵelementContainer(5, 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const isLast_r17 = ctx.last;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(9, _c1, step_r15, i_r16));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@verticalStepTransition\", ctx_r14._getAnimationDirection(i_r16))(\"id\", ctx_r14._getStepContentId(i_r16));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r14._getStepLabelId(i_r16))(\"aria-expanded\", ctx_r14.selectedIndex === i_r16);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r15.content);\n} }\nfunction MatStepper_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, MatStepper_ng_container_2_div_1_Template, 6, 12, \"div\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.steps);\n} }\nfunction MatStepper_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-step-header\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function MatStepper_ng_template_3_Template_mat_step_header_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23); const step_r20 = restoredCtx.step; return step_r20.select(); })(\"keydown\", function MatStepper_ng_template_3_Template_mat_step_header_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r20 = ctx.step;\n    const i_r21 = ctx.i;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-horizontal-stepper-header\", ctx_r3.orientation === \"horizontal\")(\"mat-vertical-stepper-header\", ctx_r3.orientation === \"vertical\");\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r3._getFocusIndex() === i_r21 ? 0 : -1)(\"id\", ctx_r3._getStepLabelId(i_r21))(\"index\", i_r21)(\"state\", ctx_r3._getIndicatorType(i_r21, step_r20.state))(\"label\", step_r20.stepLabel || step_r20.label)(\"selected\", ctx_r3.selectedIndex === i_r21)(\"active\", ctx_r3._stepIsNavigable(i_r21, step_r20))(\"optional\", step_r20.optional)(\"errorMessage\", step_r20.errorMessage)(\"iconOverrides\", ctx_r3._iconOverrides)(\"disableRipple\", ctx_r3.disableRipple)(\"color\", step_r20.color || ctx_r3.color);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r21 + 1)(\"aria-setsize\", ctx_r3.steps.length)(\"aria-controls\", ctx_r3._getStepContentId(i_r21))(\"aria-selected\", ctx_r3.selectedIndex == i_r21)(\"aria-label\", step_r20.ariaLabel || null)(\"aria-labelledby\", !step_r20.ariaLabel && step_r20.ariaLabelledby ? step_r20.ariaLabelledby : null)(\"aria-disabled\", ctx_r3._stepIsNavigable(i_r21, step_r20) ? null : true);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatStepLabel_BaseFactory; return function MatStepLabel_Factory(t) { return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel)))(t || MatStepLabel); }; }();\nMatStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\nMatStepperIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\"], inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"mat-step-text-label\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_div_6_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-step-header',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatStepContent.ɵfac = function MatStepContent_Factory(t) { return new (t || MatStepContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepContent, selectors: [[\"ng-template\", \"matStepContent\", \"\"]] });\nMatStepContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes.pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        })).subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, consts: [[3, \"cdkPortalOutlet\"]], template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 2, 1, \"ng-template\");\n    } }, directives: [ɵngcc5.CdkPortalOutlet], encapsulation: 2, changeDetection: 0 });\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }],\n    color: [{ type: Input }],\n    _lazyContent: [{ type: ContentChild, args: [MatStepContent, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }], color: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatStepContent, { static: false }]\n        }] }); })();\n/**\n * Proxies the public APIs from `MatStepper` to the deprecated `MatHorizontalStepper` and\n * `MatVerticalStepper`.\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n * @docs-private\n */\nclass _MatProxyStepperBase extends CdkStepper {\n}\n_MatProxyStepperBase.ɵfac = /*@__PURE__*/ function () { let ɵ_MatProxyStepperBase_BaseFactory; return function _MatProxyStepperBase_Factory(t) { return (ɵ_MatProxyStepperBase_BaseFactory || (ɵ_MatProxyStepperBase_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(_MatProxyStepperBase)))(t || _MatProxyStepperBase); }; }();\n_MatProxyStepperBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatProxyStepperBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatProxyStepperBase, [{\n        type: Directive\n    }], null, null); })();\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatHorizontalStepper extends _MatProxyStepperBase {\n}\nMatHorizontalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatHorizontalStepper_BaseFactory; return function MatHorizontalStepper_Factory(t) { return (ɵMatHorizontalStepper_BaseFactory || (ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper)))(t || MatHorizontalStepper); }; }();\nMatHorizontalStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Directive,\n        args: [{ selector: 'mat-horizontal-stepper' }]\n    }], null, null); })();\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatVerticalStepper extends _MatProxyStepperBase {\n}\nMatVerticalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatVerticalStepper_BaseFactory; return function MatVerticalStepper_Factory(t) { return (ɵMatVerticalStepper_BaseFactory || (ɵMatVerticalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatVerticalStepper)))(t || MatVerticalStepper); }; }();\nMatVerticalStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Directive,\n        args: [{ selector: 'mat-vertical-stepper' }]\n    }], null, null); })();\nclass MatStepper extends CdkStepper {\n    constructor(dir, changeDetectorRef, elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return new (t || MatStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepper, selectors: [[\"mat-stepper\"], [\"mat-vertical-stepper\"], [\"mat-horizontal-stepper\"], [\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, hostAttrs: [\"role\", \"tablist\"], hostVars: 9, hostBindings: function MatStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation);\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-horizontal\", ctx.orientation === \"horizontal\")(\"mat-stepper-vertical\", ctx.orientation === \"vertical\")(\"mat-stepper-label-position-end\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\", disableRipple: \"disableRipple\", color: \"color\" }, outputs: { animationDone: \"animationDone\" }, exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkStepper, useExisting: MatStepper },\n            { provide: MatHorizontalStepper, useExisting: MatStepper },\n            { provide: MatVerticalStepper, useExisting: MatStepper },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 3, consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"stepTemplate\", \"\"], [1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"], [\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\", \"click\", \"keydown\"]], template: function MatStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatStepper_ng_container_1_Template, 5, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵtemplate(3, MatStepper_ng_template_3_Template, 1, 23, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.orientation);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"horizontal\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"vertical\");\n    } }, directives: [ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgForOf, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, MatStepHeader], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ] }, changeDetection: 0 });\nMatStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }],\n    labelPosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]',\n                exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper',\n                template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                    '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                    '[attr.aria-orientation]': 'orientation',\n                    'role': 'tablist'\n                },\n                animations: [\n                    matStepperAnimations.horizontalStepTransition,\n                    matStepperAnimations.verticalStepTransition,\n                ],\n                providers: [\n                    { provide: CdkStepper, useExisting: MatStepper },\n                    { provide: MatHorizontalStepper, useExisting: MatStepper },\n                    { provide: MatVerticalStepper, useExisting: MatStepper },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc6.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { animationDone: [{\n            type: Output\n        }], labelPosition: [{\n            type: Input\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperNext_BaseFactory; return function MatStepperNext_Factory(t) { return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext)))(t || MatStepperNext); }; }();\nMatStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostAttrs: [1, \"mat-stepper-next\"], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    'class': 'mat-stepper-next',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperPrevious_BaseFactory; return function MatStepperPrevious_Factory(t) { return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious)))(t || MatStepperPrevious); }; }();\nMatStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostAttrs: [1, \"mat-stepper-previous\"], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    'class': 'mat-stepper-previous',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); };\nMatStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                    MatStepContent,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                    MatStepContent,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = function MatRecycleRows_Factory(t) { return new (t || MatRecycleRows)(); };\nMatRecycleRows.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRecycleRows, selectors: [[\"mat-table\", \"recycleRows\", \"\"], [\"table\", \"mat-table\", \"\", \"recycleRows\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRecycleRows, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = /*@__PURE__*/ function () { let ɵMatTable_BaseFactory; return function MatTable_Factory(t) { return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable); }; }();\nMatTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-table-fixed-layout\", ctx.fixedLayout);\n    } }, exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0);\n        ɵngcc0.ɵɵelementContainer(3, 1);\n        ɵngcc0.ɵɵelementContainer(4, 2);\n        ɵngcc0.ɵɵelementContainer(5, 3);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.NoDataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\".mat-table:not(table){display:block}.mat-table:not(table) .mat-cell,.mat-table:not(table) .mat-header-cell,.mat-table:not(table) .mat-footer-cell{display:flex}.mat-table:not(table) .mat-row,.mat-table:not(table) .mat-header-row,.mat-table:not(table) .mat-footer-row{display:flex}.mat-table:not(table) .mat-row::after,.mat-table:not(table) .mat-header-row::after,.mat-table:not(table) .mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}.mat-header-row{min-height:56px}.mat-row,.mat-footer-row{min-height:48px}.mat-row,.mat-header-row,.mat-footer-row{border-bottom-width:1px;border-bottom-style:solid;align-items:center;box-sizing:border-box}.mat-cell,.mat-header-cell,.mat-footer-cell{flex:1;overflow:hidden;word-wrap:break-word;min-height:inherit;align-items:center}.mat-cell:first-of-type,.mat-header-cell:first-of-type,.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] .mat-cell:first-of-type:not(:only-of-type),[dir=rtl] .mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] .mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}.mat-cell:last-of-type,.mat-header-cell:last-of-type,.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] .mat-cell:last-of-type:not(:only-of-type),[dir=rtl] .mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] .mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table',\n                    '[class.mat-table-fixed-layout]': 'fixedLayout'\n                },\n                providers: [\n                    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                    //  is only included in the build if used.\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-table:not(table){display:block}.mat-table:not(table) .mat-cell,.mat-table:not(table) .mat-header-cell,.mat-table:not(table) .mat-footer-cell{display:flex}.mat-table:not(table) .mat-row,.mat-table:not(table) .mat-header-row,.mat-table:not(table) .mat-footer-row{display:flex}.mat-table:not(table) .mat-row::after,.mat-table:not(table) .mat-header-row::after,.mat-table:not(table) .mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}.mat-header-row{min-height:56px}.mat-row,.mat-footer-row{min-height:48px}.mat-row,.mat-header-row,.mat-footer-row{border-bottom-width:1px;border-bottom-style:solid;align-items:center;box-sizing:border-box}.mat-cell,.mat-header-cell,.mat-footer-cell{flex:1;overflow:hidden;word-wrap:break-word;min-height:inherit;align-items:center}.mat-cell:first-of-type,.mat-header-cell:first-of-type,.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] .mat-cell:first-of-type:not(:only-of-type),[dir=rtl] .mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] .mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}.mat-cell:last-of-type,.mat-header-cell:last-of-type,.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] .mat-cell:last-of-type:not(:only-of-type),[dir=rtl] .mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] .mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatCellDef_BaseFactory; return function MatCellDef_Factory(t) { return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef); }; }();\nMatCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCellDef_BaseFactory; return function MatHeaderCellDef_Factory(t) { return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef); }; }();\nMatHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCellDef_BaseFactory; return function MatFooterCellDef_Factory(t) { return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef); }; }();\nMatFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = /*@__PURE__*/ function () { let ɵMatColumnDef_BaseFactory; return function MatColumnDef_Factory(t) { return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef); }; }();\nMatColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderCell_BaseFactory; return function MatHeaderCell_Factory(t) { return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCell)))(t || MatHeaderCell); }; }();\nMatHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], null, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterCell_BaseFactory; return function MatFooterCell_Factory(t) { return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCell)))(t || MatFooterCell); }; }();\nMatFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = /*@__PURE__*/ function () { let ɵMatCell_BaseFactory; return function MatCell_Factory(t) { return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCell)))(t || MatCell); }; }();\nMatCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRowDef_BaseFactory; return function MatHeaderRowDef_Factory(t) { return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef); }; }();\nMatHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRowDef_BaseFactory; return function MatFooterRowDef_Factory(t) { return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef); }; }();\nMatFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = /*@__PURE__*/ function () { let ɵMatRowDef_BaseFactory; return function MatRowDef_Factory(t) { return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef); }; }();\nMatRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = /*@__PURE__*/ function () { let ɵMatHeaderRow_BaseFactory; return function MatHeaderRow_Factory(t) { return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow); }; }();\nMatHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = /*@__PURE__*/ function () { let ɵMatFooterRow_BaseFactory; return function MatFooterRow_Factory(t) { return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow); }; }();\nMatFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = /*@__PURE__*/ function () { let ɵMatRow_BaseFactory; return function MatRow_Factory(t) { return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow); }; }();\nMatRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n}\nMatNoDataRow.ɵfac = /*@__PURE__*/ function () { let ɵMatNoDataRow_BaseFactory; return function MatNoDataRow_Factory(t) { return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNoDataRow)))(t || MatNoDataRow); }; }();\nMatNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matNoDataRow]',\n                providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = /*@__PURE__*/ function () { let ɵMatTextColumn_BaseFactory; return function MatTextColumn_Factory(t) { return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn)))(t || MatTextColumn); }; }();\nMatTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\nMatTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable, MatRecycleRows, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule, MatTable, MatRecycleRows, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            merge(this._sort.sortChange, this._sort.initialized) :\n            of(null);\n        const pageChange = this._paginator ?\n            merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n\n//# sourceMappingURL=table.js.map","import { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); };\nMatToolbarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar, MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar, MatToolbarRow, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { produit } from 'app/modals/product';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.css']\n})\nexport class AddproductComponent implements OnInit {\nproduct : produit =new produit();\n@Output() request= new EventEmitter<produit>();\naddform : FormGroup; \n  constructor() { }\n\n  ngOnInit(): void {  \n    this.addform=new FormGroup({\n      codeproduit : new FormControl('',Validators.compose([Validators.required, Validators.min(100)])),\n     libelle: new FormControl('',Validators.compose([Validators.required,Validators.minLength(5)])), \n     prixunitaire : new FormControl('',Validators.compose([Validators.required,Validators.min(100)])),\n      });\n    }\n  \nsave(){\n  this.request.emit(this.product);\n}\nupload(){\n\n}\n\n}\n","\n\n<mat-stepper orientation=\"vertical\">\n  <mat-step>\n    <ng-template matStepLabel class=\"x\">Ajouter un produit</ng-template>\n    <ng-template matStepContent>\n     <div class=\"col-md-8\">\n    <div class=\"card\">\n        <div class=\"card-header card-header-danger\">\n            <h4 class=\"card-title\">Ajouter Produit</h4>\n            <p class=\"card-category\">saisir votre nouveau produit</p>\n        </div>\n        <div class=\"card-body\">\n            <form [formGroup]=\"addform\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <mat-form-field class=\"example-full-width\">\n                          <input formControlName=\"codeproduit\" matInput placeholder=\"Code_Produit\" type=\"number\"[(ngModel)]=\"product.codeproduit\" >\n                          <mat-error *ngIf=\"addform.get('codeproduit').invalid && addform.get('codeproduit').touched\">\n                            <span *ngIf=\"addform.get('codeproduit').errors.required\">This field is required</span>\n                            <span *ngIf=\"addform.get('codeproduit').errors.min\">This field is max 5</span>\n                          </mat-error>\n                        </mat-form-field>\n                    </div>\n                  \n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <mat-form-field class=\"example-full-width\">\n                        <input formControlName=\"libelle\" matInput placeholder=\"Libelle\" type=\"text\" [(ngModel)]=\"product.libelle\">\n                      </mat-form-field>\n                      <mat-error *ngIf=\"addform.get('libelle').invalid && addform.get('libelle').touched\">\n                        <span *ngIf=\"addform.get('libelle').errors.required\">This field is required</span>\n                        <span *ngIf=\"addform.get('libelle').errors.minlength\">This field is max 5</span>\n                      </mat-error>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <mat-form-field class=\"example-full-width\">\n                        <input formControlName=\"prixunitaire\" matInput placeholder=\"Prix_unitaire\" type=\"number\" [(ngModel)]=\"product.prix_unitaire\">\n                      </mat-form-field>\n                      <mat-error *ngIf=\"addform.get('prixunitaire').invalid && addform.get('prixunitaire').touched\">\n                        <span *ngIf=\"addform.get('prixunitaire').errors.required\">This field is required</span>\n                        <span *ngIf=\"addform.get('prixunitaire').errors.min\">This field is max 5</span>\n                      </mat-error>\n                    </div>\n                </div>\n               <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" (click)=\"save()\">Save</button>\n            </form>\n        </div>\n    </div>\n</div>\n      <button mat-button matStepperNext>Next</button>\n    </ng-template>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>details du produit</ng-template>\n    <ng-template matStepContent>\n      <app-detailsproduit></app-detailsproduit>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button matStepperNext>Next</button>\n    </ng-template>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Stock</ng-template>\n    <p>This content was rendered eagerly</p>\n    <button mat-button matStepperPrevious>Back</button>\n  </mat-step>\n</mat-stepper>\n ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { detailproduit } from './modals/detailproduit';\n\n@Injectable()\nexport class DetailsproductService {\n\n  constructor(private _http:HttpClient) { \n\n    \n  }\n  getproduitdetail(id):Observable<detailproduit>{\n    return this._http.get<detailproduit>('http://localhost:8244/SpringMVC/detailproduit/getdetailsduproduit/'+id);\n  };\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Les details du produits</h4>\n                        <p class=\"card-category\">Ajouter les details du produit</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"row\">\n                                <div class=\"col-md-5\">\n                                  <mat-form-field class=\"example-full-width\">\n                                      <input type=\"date\" matInput placeholder=\"Date de creation\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-5\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input type=\"date\" matInput placeholder=\"Date du derniere modification \">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-5\">\n                                    <p class=\"titre\">Les categories du produit <p>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n\n                                <div class=\"col-md-5\">\n                                     <mat-form-field appearance=\"fill\">\n                              <mat-label>Electromenager</mat-label>\n                                      <mat-select>\n                            <mat-option *ngFor=\"let i of categorie\" [value]=\"i.value\">\n                                 {{i.viewValue}}\n                                    </mat-option>\n                                    </mat-select>\n                                   </mat-form-field> \n                                </div> \n                            </div>\n                                     \n                           \n                        \n                        </form>\n                     </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detailsproduit',\n  templateUrl: './detailsproduit.component.html',\n  styleUrls: ['./detailsproduit.component.css']\n})\nexport class DetailsproduitComponent implements OnInit {\n   categorie=[\n    {value: '0', viewValue: 'Electromenager'},\n    {value: '1', viewValue: 'Alimentaire'},\n    {value: '2', viewValue: 'Quincaillerie'},\n   ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { produit } from 'app/modals/product';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\nmodifyForm: FormGroup;\nproduct : produit =new produit();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.modifyForm=new FormGroup({\n      codeproduit : new FormControl('',Validators.compose([Validators.required, Validators.min(100)])),\n     libelle: new FormControl('',Validators.compose([Validators.required,Validators.minLength(5)])), \n     prixunitaire : new FormControl('',Validators.compose([Validators.required,Validators.min(100)])),\n      });\n    }\n\n    modify(){\n      \n    }\n  }\n\n","<div class=\"col-md-8\">\n    <div class=\"card\">\n        <div class=\"card-header card-header-danger\">\n            <h4 class=\"card-title\">Modifier le produit</h4>\n            <p class=\"card-category\">Modifier votre produit</p>\n        </div>\n        <div class=\"card-body\">\n            <form [formGroup]=\"modifyForm\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <mat-form-field class=\"example-full-width\">\n                          <input formControlName=\"codeproduit\" matInput placeholder=\"Code_Produit\" type=\"number\"[(ngModel)]=\"product.codeproduit\" >\n                          <mat-error *ngIf=\"modifyForm.get('codeproduit').invalid && modifyForm.get('codeproduit').touched\">\n                            <span *ngIf=\"modifyForm.get('codeproduit').modifyForm.required\">This field is required</span>\n                            <span *ngIf=\"modifyForm.get('codeproduit').modifyForm.min\">This field is max 5</span>\n                          </mat-error>\n                        </mat-form-field>\n                    </div>\n                  \n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <mat-form-field class=\"example-full-width\">\n                        <input formControlName=\"libelle\" matInput placeholder=\"Libelle\" type=\"text\" [(ngModel)]=\"product.libelle\">\n                      </mat-form-field>\n                      <mat-error *ngIf=\"modifyForm.get('libelle').invalid && modifyForm.get('libelle').touched\">\n                        <span *ngIf=\"modifyForm.get('libelle').errors.required\">This field is required</span>\n                        <span *ngIf=\"modifyForm.get('libelle').errors.minlength\">This field is max 5</span>\n                      </mat-error>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <mat-form-field class=\"example-full-width\">\n                        <input formControlName=\"prixunitaire\" matInput placeholder=\"Prix_unitaire\" type=\"number\" [(ngModel)]=\"product.prix_unitaire\">\n                      </mat-form-field>\n                      <mat-error *ngIf=\"modifyForm.get('prixunitaire').invalid && modifyForm.get('prixunitaire').touched\">\n                        <span *ngIf=\"modifyForm.get('prixunitaire').errors.required\">This field is required</span>\n                        <span *ngIf=\"modifyForm.get('prixunitaire').errors.min\">This field is max 5</span>\n                      </mat-error>\n                    </div>\n                </div>\n                <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\" (click)=\"modify()\">Modify</button>\n                <div class=\"clearfix\"></div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRippleModule} from '@angular/material/core';\n\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSelectModule} from '@angular/material/select';\n\nimport { AddproductComponent } from 'app/addproduct/addproduct.component';\nimport { ListproductComponent } from 'app/listproduct/listproduct.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport { EditComponent } from 'app/edit/edit.component';\n\nimport { DetailsproduitComponent } from 'app/detailsproduit/detailsproduit.component';\n\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ListdetailsproductComponent } from 'app/listdetailsproduct/listdetailsproduct.component';\nimport { ProductService } from 'app/product.service';\nimport { DetailsproductService } from 'app/detailsproduct.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatStepperModule,\n    MatSelectModule,\n   \n    \n  ],\n  declarations: [\n    DetailsproduitComponent,\n    UserProfileComponent,\n   ListproductComponent,\n   EditComponent,\n    AddproductComponent,\n    ListdetailsproductComponent,\n  ],\n  providers: [ProductService,DetailsproductService],\n})\n\nexport class AdminLayoutModule {}\n","import { Routes } from '@angular/router';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\n\n\n\n\n\nimport { ListproductComponent } from 'app/listproduct/listproduct.component';\nimport { ClientComponent } from 'app/client/client.component';\nimport { FournisseurComponent } from 'app/fournisseur/fournisseur.component';\nimport { StockComponent } from 'app/stock/stock.component';\nimport { RayonComponent } from 'app/rayon/rayon.component';\nimport { AcceuilComponent } from 'app/acceuil/acceuil.component';\nimport { FactureComponent } from 'app/facture/facture.component';\nimport { EditComponent } from 'app/edit/edit.component';\n\nexport const AdminLayoutRoutes: Routes = [\n    // {\n    //   path: '',\n    //   children: [ {\n    //     path: 'dashboard',\n    //     component: DashboardComponent\n    // }]}, {\n    // path: '',\n    // children: [ {\n    //   path: 'userprofile',\n    //   component: UserProfileComponent\n    // }]\n    // }, {\n    //   path: '',\n    //   children: [ {\n    //     path: 'icons',\n    //     component: IconsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'notifications',\n    //         component: NotificationsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'maps',\n    //         component: MapsComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'typography',\n    //         component: TypographyComponent\n    //     }]\n    // }, {\n    //     path: '',\n    //     children: [ {\n    //         path: 'upgrade',\n    //         component: UpgradeComponent\n    //     }]\n    // }\n    { path: 'dashboard',      component: AcceuilComponent },\n    { path: 'user-profile',   component: UserProfileComponent },\n    { path: 'produit',     component: ListproductComponent,children:[\n        {path:'modifier',component: EditComponent},\n    ]},\n    { path: 'typography',     component: StockComponent },\n    { path: 'icons',          component: FournisseurComponent },\n    { path: 'maps',           component: ClientComponent },\n    { path: 'notifications',  component: RayonComponent},\n    \n     {path: 'facture', component: FactureComponent},\n    \n];\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DetailsproductService } from 'app/detailsproduct.service';\nimport { detailproduit } from 'app/modals/detailproduit';\n\n@Component({\n  selector: 'app-listdetailsproduct',\n  templateUrl: './listdetailsproduct.component.html',\n  styleUrls: ['./listdetailsproduct.component.css']\n})\nexport class ListdetailsproductComponent implements OnInit {\ndetail_produit : detailproduit=new detailproduit();\n  constructor( \n    public dialogRef: MatDialogRef<ListdetailsproductComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:number,\n    private ec:DetailsproductService,\n    ) { }\n\n  ngOnInit(): void {\n  this.ec.getproduitdetail(this.data).subscribe(\n    res => {\n      this.detail_produit=res;\n      console.log(this.detail_produit);\n    }\n  )\n  }\n\n}\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header card-header-danger\">\r\n                        <h4 class=\"card-title\">Les details du produit</h4>\r\n                        <p class=\"card-category\"></p>\r\n                    </div>\r\n                    <div class=\"content table-responsive table-full-width\">\r\n                          <table class=\"table table-hover table-striped\">\r\n                                <thead ngFor=\"let details in detailproduit\">\r\n                                    <tr>\r\n                                        <th>Date creation</th>\r\n                                        <th>Date dernieire modification</th>\r\n                                        <th>categorie du produit</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr >\r\n                                        <td>{{detail_produit.date_creation}}</td>\r\n                                        <td>{{detail_produit.date_dermodification}}</td>\r\n                                        <td>{{detail_produit.categorieproduit}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                          </table>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Inject, OnInit,ViewChild,} from '@angular/core';\nimport { produit } from 'app/modals/product';\nimport { MatPaginator, } from '@angular/material/paginator';\nimport {MatTableModule,MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport { ProductService } from 'app/product.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ListdetailsproductComponent } from 'app/listdetailsproduct/listdetailsproduct.component';\n\n@Component({\n  selector: 'app-listproduct',\n  templateUrl: './listproduct.component.html',\n  styleUrls: ['./listproduct.component.css']\n})\nexport class ListproductComponent implements OnInit {\nchange:boolean=false;\nlistproduits:produit[]=[];\ndataSource:MatTableDataSource<produit>;\ndisplayedColumns=[ \"codeproduit\",\"libelle\", \"prix_unitaire\",\"status\"];\n@ViewChild(MatSort) sort:MatSort;\n@ViewChild(MatPaginator,{static:true}) paginator: MatPaginator; \n\n  constructor(private ec:ProductService,public dialog: MatDialog) { \n \n  \n\n}\nopenDialog(id): void {\n  const dialogRef = this.dialog.open(ListdetailsproductComponent, {\n    width: '700px',\n    height:'500px',\n    data: id,\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n   \n  });\n}\n\n  ngOnInit(): void { \n\n this.ec.allproducts().subscribe(\n    res =>{\n    this.listproduits=res;\n    console.log(this.listproduits);\n    this.dataSource=new MatTableDataSource(this.listproduits);\n    this.dataSource.paginator=this.paginator;\n  });\n}\nchanger(){ \n  this.change=true;\n}\najouter_list($event){\n  console.log($event);\nthis.listproduits.push($event);\nthis.dataSource=new MatTableDataSource(this.listproduits);\nthis.dataSource.paginator=this.paginator;\n}\ndelete( id){\n  this.ec.deleteProduct(id).subscribe();\n}\n}\n\n\n\n","<div class=\"col-md-8\">\n    <div class=\"card margin-position\">\n        <div class=\"card-header card-header-danger\">\n            <h4 class=\"card-title\">La liste des produits</h4>\n            <p class=\"card-category\"></p>\n        </div>\n        <div class=\"card-body\">\n    <mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"codeproduit\">\n      <th mat-header-cell *matHeaderCellDef> codeproduit </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.codeproduit}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"libelle\">\n      <th mat-header-cell *matHeaderCellDef> libelle</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.libelleproduit}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"prix_unitaire\">\n      <th mat-header-cell *matHeaderCellDef> prix_unitaire </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.prixunitaire}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef> Status </th>\n      <td class=\"pad\" mat-cell *matCellDef=\"let element\"> \n        <div style=\"padding:5px;display: flex;\">\n          <div> \n           \n   <button (click)=\"delete(element.idproduit)\" mat-fab color=\"warn\" type=\"button\" aria-label=\"Example icon button with a delete icon\">\n          <mat-icon>delete</mat-icon>\n        </button>\n    \n    </div>\n         <div style=\"padding-left:5px;\"> \n       <a [routerLink]=\"['/produit/modifier']\">\n           <button mat-fab color=\"primary\" type=\"button\" aria-label=\"Example icon button with a delete icon\">\n          <mat-icon>edit</mat-icon>\n        </button>\n          </a>\n       </div>\n       <div>\n         <button mat-button (click)=\"openDialog(element.idproduit)\">Show details</button>\n     \n      </div>\n       \n        </div>\n       \n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </mat-table>\n  \n    <mat-paginator  [pageSizeOptions]=\"[2, 10, 20]\"  ></mat-paginator>\n    <div class=\"position\">\n      <button mat-raised-button type=\"submit\" class=\"btn btn-danger \" style=\"margin-left: 600px;\"(click)=\"changer()\">Ajouter produit</button>\n    </div>\n  \n    <app-addproduct (request)=\"ajouter_list($event)\" *ngIf=\"change\"></app-addproduct>\n</div>\n\n</div>\n</div>\n<router-outlet></router-outlet>\n\n","export class detailproduit{\r\n    date_creation : Date;\r\n    date_dermodification : Date;\r\n    categorieproduit : String;\r\n}","export class produit{\r\n  codeproduit: number;\r\n  libelle:string;\r\n  prix_unitaire:number;\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { produit } from './modals/product';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ProductService {\n \n  constructor(private _http:HttpClient) { }\n\n\n\n  deleteProduct(id: number){\n    return this._http.delete<produit>('http://localhost:8244/SpringMVC/produit/remove-produit/'+id);\n  }\n  allproducts():Observable<produit[]>{\n    return this._http.get<produit[]>('http://localhost:8244/SpringMVC/produit/retrieve-all-produits/');\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { produit } from 'app/modals/product';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}