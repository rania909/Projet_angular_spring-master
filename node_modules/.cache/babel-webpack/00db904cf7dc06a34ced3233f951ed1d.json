{"ast":null,"code":"import _classCallCheck from \"A:/machine learning/test/Projet_angular_spring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"A:/machine learning/test/Projet_angular_spring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, NgModule, Pipe } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar Ng2SearchPipe = /*#__PURE__*/function () {\n  function Ng2SearchPipe() {\n    _classCallCheck(this, Ng2SearchPipe);\n  }\n\n  _createClass(Ng2SearchPipe, [{\n    key: \"transform\",\n    value:\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    function transform(items, term) {\n      if (!term || !items) return items;\n      return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n\n  }], [{\n    key: \"filter\",\n    value: function filter(items, term) {\n      var\n      /** @type {?} */\n      toCompare = term.toLowerCase();\n      /**\n       * @param {?} item\n       * @param {?} term\n       * @return {?}\n       */\n\n      function checkInside(item, term) {\n        for (var\n        /** @type {?} */\n        property in item) {\n          if (item[property] === null || item[property] == undefined) {\n            continue;\n          }\n\n          if (typeof item[property] === 'object') {\n            if (checkInside(item[property], term)) {\n              return true;\n            }\n          }\n\n          if (item[property].toString().toLowerCase().includes(toCompare)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return items.filter(function (item) {\n        return checkInside(item, term);\n      });\n    }\n  }]);\n\n  return Ng2SearchPipe;\n}();\n\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) {\n  return new (t || Ng2SearchPipe)();\n};\n\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: Ng2SearchPipe,\n  pure: false\n});\nNg2SearchPipe.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: Ng2SearchPipe,\n  factory: Ng2SearchPipe.ɵfac\n});\n/**\n * @nocollapse\n */\n\nNg2SearchPipe.ctorParameters = function () {\n  return [];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'filter',\n      pure: false\n    }]\n  }, {\n    type: Injectable\n  }], null, null);\n})();\n\nvar Ng2SearchPipeModule = function Ng2SearchPipeModule() {\n  _classCallCheck(this, Ng2SearchPipeModule);\n};\n\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) {\n  return new (t || Ng2SearchPipeModule)();\n};\n\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2SearchPipeModule\n});\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\n\nNg2SearchPipeModule.ctorParameters = function () {\n  return [];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Ng2SearchPipe],\n      exports: [Ng2SearchPipe]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, {\n    declarations: [Ng2SearchPipe],\n    exports: [Ng2SearchPipe]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe }; //# sourceMappingURL=ng2-search-filter.js.map","map":null,"metadata":{},"sourceType":"module"}