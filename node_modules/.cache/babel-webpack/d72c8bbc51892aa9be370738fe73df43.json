{"ast":null,"code":"import _classCallCheck from \"A:/machine learning/test/Projet_angular_spring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"A:/machine learning/test/Projet_angular_spring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, Directive, ElementRef, NgZone, Optional, Inject, Input, HostBinding, NgModule } from '@angular/core';\nimport { updateSvg, updateCanvas } from 'jdenticon';\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/config.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nvar JDENTICON_CONFIG = new InjectionToken('JdenticonConfig');\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/svg-jdenticon.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n// Use same attributes as for VanillaJS Jdenticon.\n// tslint:disable:directive-selector no-input-rename\n\nvar SvgJdenticonDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} el\r\n   * @param {?} zone\r\n   * @param {?} config\r\n   */\n  function SvgJdenticonDirective(el, zone, config) {\n    _classCallCheck(this, SvgJdenticonDirective);\n\n    this.el = el;\n    this.zone = zone;\n    this.config = config;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(SvgJdenticonDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      var _this = this;\n\n      // setTimeout is used to ensure that Angular has updated the host attributes.\n      // runOutsideAngular is used to prevent an additional Angular change detection.\n      this.zone.runOutsideAngular(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        setTimeout(\n        /**\r\n        * @return {?}\r\n        */\n        function () {\n          updateSvg(_this.el.nativeElement, undefined, _this.config);\n        });\n      });\n    }\n  }]);\n\n  return SvgJdenticonDirective;\n}();\n\nSvgJdenticonDirective.ɵfac = function SvgJdenticonDirective_Factory(t) {\n  return new (t || SvgJdenticonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(JDENTICON_CONFIG, 8));\n};\n\nSvgJdenticonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SvgJdenticonDirective,\n  selectors: [[\"svg\", \"data-jdenticon-hash\", \"\"], [\"svg\", \"data-jdenticon-value\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SvgJdenticonDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"data-jdenticon-hash\", ctx.hash)(\"data-jdenticon-value\", ctx.value)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    hash: [\"data-jdenticon-hash\", \"hash\"],\n    value: [\"data-jdenticon-value\", \"value\"],\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nSvgJdenticonDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [JDENTICON_CONFIG]\n    }]\n  }];\n};\n\nSvgJdenticonDirective.propDecorators = {\n  hash: [{\n    type: Input,\n    args: ['data-jdenticon-hash']\n  }, {\n    type: HostBinding,\n    args: ['attr.data-jdenticon-hash']\n  }],\n  value: [{\n    type: Input,\n    args: ['data-jdenticon-value']\n  }, {\n    type: HostBinding,\n    args: ['attr.data-jdenticon-value']\n  }],\n  width: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['attr.width']\n  }],\n  height: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['attr.height']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SvgJdenticonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'svg[data-jdenticon-hash],svg[data-jdenticon-value]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [JDENTICON_CONFIG]\n      }]\n    }];\n  }, {\n    hash: [{\n      type: Input,\n      args: ['data-jdenticon-hash']\n    }, {\n      type: HostBinding,\n      args: ['attr.data-jdenticon-hash']\n    }],\n    value: [{\n      type: Input,\n      args: ['data-jdenticon-value']\n    }, {\n      type: HostBinding,\n      args: ['attr.data-jdenticon-value']\n    }],\n    width: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.width']\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.height']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  SvgJdenticonDirective.prototype.hash;\n  /** @type {?} */\n\n  SvgJdenticonDirective.prototype.value;\n  /** @type {?} */\n\n  SvgJdenticonDirective.prototype.width;\n  /** @type {?} */\n\n  SvgJdenticonDirective.prototype.height;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  SvgJdenticonDirective.prototype.el;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  SvgJdenticonDirective.prototype.zone;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  SvgJdenticonDirective.prototype.config;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/canvas-jdenticon.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n// Use same attributes as for VanillaJS Jdenticon.\n// tslint:disable:directive-selector no-input-rename\n\n\nvar CanvasJdenticonDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} el\r\n   * @param {?} zone\r\n   * @param {?} config\r\n   */\n  function CanvasJdenticonDirective(el, zone, config) {\n    _classCallCheck(this, CanvasJdenticonDirective);\n\n    this.el = el;\n    this.zone = zone;\n    this.config = config;\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(CanvasJdenticonDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      var _this2 = this;\n\n      // setTimeout is used to ensure that Angular has updated the host attributes.\n      // runOutsideAngular is used to prevent an additional Angular change detection.\n      this.zone.runOutsideAngular(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        setTimeout(\n        /**\r\n        * @return {?}\r\n        */\n        function () {\n          updateCanvas(_this2.el.nativeElement, undefined, _this2.config);\n        });\n      });\n    }\n  }]);\n\n  return CanvasJdenticonDirective;\n}();\n\nCanvasJdenticonDirective.ɵfac = function CanvasJdenticonDirective_Factory(t) {\n  return new (t || CanvasJdenticonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(JDENTICON_CONFIG, 8));\n};\n\nCanvasJdenticonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CanvasJdenticonDirective,\n  selectors: [[\"canvas\", \"data-jdenticon-hash\", \"\"], [\"canvas\", \"data-jdenticon-value\", \"\"]],\n  hostVars: 4,\n  hostBindings: function CanvasJdenticonDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"data-jdenticon-hash\", ctx.hash)(\"data-jdenticon-value\", ctx.value)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    hash: [\"data-jdenticon-hash\", \"hash\"],\n    value: [\"data-jdenticon-value\", \"value\"],\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nCanvasJdenticonDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [JDENTICON_CONFIG]\n    }]\n  }];\n};\n\nCanvasJdenticonDirective.propDecorators = {\n  hash: [{\n    type: Input,\n    args: ['data-jdenticon-hash']\n  }, {\n    type: HostBinding,\n    args: ['attr.data-jdenticon-hash']\n  }],\n  value: [{\n    type: Input,\n    args: ['data-jdenticon-value']\n  }, {\n    type: HostBinding,\n    args: ['attr.data-jdenticon-value']\n  }],\n  width: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['attr.width']\n  }],\n  height: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['attr.height']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CanvasJdenticonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [JDENTICON_CONFIG]\n      }]\n    }];\n  }, {\n    hash: [{\n      type: Input,\n      args: ['data-jdenticon-hash']\n    }, {\n      type: HostBinding,\n      args: ['attr.data-jdenticon-hash']\n    }],\n    value: [{\n      type: Input,\n      args: ['data-jdenticon-value']\n    }, {\n      type: HostBinding,\n      args: ['attr.data-jdenticon-value']\n    }],\n    width: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.width']\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.height']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  CanvasJdenticonDirective.prototype.hash;\n  /** @type {?} */\n\n  CanvasJdenticonDirective.prototype.value;\n  /** @type {?} */\n\n  CanvasJdenticonDirective.prototype.width;\n  /** @type {?} */\n\n  CanvasJdenticonDirective.prototype.height;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  CanvasJdenticonDirective.prototype.el;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  CanvasJdenticonDirective.prototype.zone;\n  /**\r\n   * @type {?}\r\n   * @private\r\n   */\n\n  CanvasJdenticonDirective.prototype.config;\n}\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-jdenticon.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar NgxJdenticonModule = function NgxJdenticonModule() {\n  _classCallCheck(this, NgxJdenticonModule);\n};\n\nNgxJdenticonModule.ɵfac = function NgxJdenticonModule_Factory(t) {\n  return new (t || NgxJdenticonModule)();\n};\n\nNgxJdenticonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxJdenticonModule\n});\nNgxJdenticonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxJdenticonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\n      exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxJdenticonModule, {\n    declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\n    exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-jdenticon.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { CanvasJdenticonDirective, JDENTICON_CONFIG, NgxJdenticonModule, SvgJdenticonDirective }; //# sourceMappingURL=ngx-jdenticon.js.map","map":null,"metadata":{},"sourceType":"module"}