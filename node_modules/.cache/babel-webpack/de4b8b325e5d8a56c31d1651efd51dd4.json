{"ast":null,"code":"'use strict';\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.controller = new Chart.Controller(item, config, this);\n    return this.controller;\n  }; // Globally expose the defaults to allow for user updating/changing\n\n\n  Chart.defaults = {\n    global: {\n      responsive: true,\n      responsiveAnimationDuration: 0,\n      maintainAspectRatio: true,\n      events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n      hover: {\n        onHover: null,\n        mode: 'nearest',\n        intersect: true,\n        animationDuration: 400\n      },\n      onClick: null,\n      defaultColor: 'rgba(0,0,0,0.1)',\n      defaultFontColor: '#666',\n      defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      defaultFontSize: 12,\n      defaultFontStyle: 'normal',\n      showLines: true,\n      // Element defaults defined in element extensions\n      elements: {},\n      // Legend callback string\n      legendCallback: function legendCallback(chart) {\n        var text = [];\n        text.push('<ul class=\"' + chart.id + '-legend\">');\n\n        for (var i = 0; i < chart.data.datasets.length; i++) {\n          text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n          if (chart.data.datasets[i].label) {\n            text.push(chart.data.datasets[i].label);\n          }\n\n          text.push('</li>');\n        }\n\n        text.push('</ul>');\n        return text.join('');\n      }\n    }\n  };\n  Chart.Chart = Chart;\n  return Chart;\n};","map":null,"metadata":{},"sourceType":"script"}