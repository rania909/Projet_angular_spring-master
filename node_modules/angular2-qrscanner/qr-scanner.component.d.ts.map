{"version":3,"file":"qr-scanner.component.d.ts","sources":["qr-scanner.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { QRCode } from './lib/qr-decoder/qrcode';\nexport declare class QrScannerComponent implements OnInit, OnDestroy, AfterViewInit {\n    private renderer;\n    canvasWidth: number;\n    canvasHeight: number;\n    debug: boolean;\n    stopAfterScan: boolean;\n    updateTime: number;\n    capturedQr: EventEmitter<string>;\n    foundCameras: EventEmitter<MediaDeviceInfo[]>;\n    videoWrapper: ElementRef;\n    qrCanvas: ElementRef;\n    chooseCamera: Subject<MediaDeviceInfo>;\n    private chooseCamera$;\n    gCtx: CanvasRenderingContext2D;\n    videoElement: HTMLVideoElement;\n    qrCode: QRCode;\n    stream: MediaStream;\n    captureTimeout: any;\n    private canvasHidden;\n    readonly isCanvasSupported: boolean;\n    constructor(renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    startScanning(device: MediaDeviceInfo): void;\n    stopScanning(): void;\n    getMediaDevices(): Promise<MediaDeviceInfo[]>;\n    QrDecodeCallback(decoded: string): void;\n    private captureToCanvas;\n    private setStream;\n    private useDevice;\n}\n"]}