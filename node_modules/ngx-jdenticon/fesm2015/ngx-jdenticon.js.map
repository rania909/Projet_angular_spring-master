{"version":3,"file":"ngx-jdenticon.js","sources":["ng://ngx-jdenticon/lib/config.ts","ng://ngx-jdenticon/lib/svg-jdenticon.directive.ts","ng://ngx-jdenticon/lib/canvas-jdenticon.directive.ts","ng://ngx-jdenticon/lib/ngx-jdenticon.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const JDENTICON_CONFIG = new InjectionToken<string>('JdenticonConfig');\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateSvg, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'svg[data-jdenticon-hash],svg[data-jdenticon-value]',\r\n})\r\nexport class SvgJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<SVGSVGElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateSvg(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateCanvas, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]',\r\n})\r\nexport class CanvasJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<HTMLCanvasElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateCanvas(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SvgJdenticonDirective } from './svg-jdenticon.directive';\r\nimport { CanvasJdenticonDirective } from './canvas-jdenticon.directive';\r\n\r\n@NgModule({\r\n  declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\r\n  exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\r\n})\r\nexport class NgxJdenticonModule { }\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA,MAAa,gBAAgB,GAAG,IAAI,cAAc,CAAS,iBAAiB,CAAC;;;;;;;ACF7E;;AAUA,MAAa,qBAAqB;;;;;;IAkBhC,YACU,EAA6B,EAC7B,IAAY,EAC0B,MAAuB;QAF7D,OAAE,GAAF,EAAE,CAA2B;QAC7B,SAAI,GAAJ,IAAI,CAAQ;QAC0B,WAAM,GAAN,MAAM,CAAiB;KAClE;;;;IAEL,WAAW;;;QAGT,IAAI,CAAC,IAAI,CAAC,iBAAiB;;;QAAC;YAC1B,UAAU;;;YAAC;gBACT,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAC1D,EAAC,CAAC;SACJ,EAAC,CAAC;KACJ;;;YAnCF,SAAS,SAAC;gBACT,QAAQ,EAAE,oDAAoD;aAC/D;;;;YATkD,UAAU;YAAoB,MAAM;4CA+BlF,QAAQ,YAAI,MAAM,SAAC,gBAAgB;;;mBAnBrC,KAAK,SAAC,qBAAqB,cAC3B,WAAW,SAAC,0BAA0B;oBAGtC,KAAK,SAAC,sBAAsB,cAC5B,WAAW,SAAC,2BAA2B;oBAGvC,KAAK,YACL,WAAW,SAAC,YAAY;qBAGxB,KAAK,YACL,WAAW,SAAC,aAAa;;;;IAb1B,qCAEa;;IAEb,sCAEW;;IAEX,sCAEuB;;IAEvB,uCAEwB;;;;;IAGtB,mCAAqC;;;;;IACrC,qCAAoB;;;;;IACpB,uCAAqE;;;;;;;;AC/BzE;;AAUA,MAAa,wBAAwB;;;;;;IAkBnC,YACU,EAAiC,EACjC,IAAY,EAC0B,MAAuB;QAF7D,OAAE,GAAF,EAAE,CAA+B;QACjC,SAAI,GAAJ,IAAI,CAAQ;QAC0B,WAAM,GAAN,MAAM,CAAiB;KAClE;;;;IAEL,WAAW;;;QAGT,IAAI,CAAC,IAAI,CAAC,iBAAiB;;;QAAC;YAC1B,UAAU;;;YAAC;gBACT,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7D,EAAC,CAAC;SACJ,EAAC,CAAC;KACJ;;;YAnCF,SAAS,SAAC;gBACT,QAAQ,EAAE,0DAA0D;aACrE;;;;YATkD,UAAU;YAAoB,MAAM;4CA+BlF,QAAQ,YAAI,MAAM,SAAC,gBAAgB;;;mBAnBrC,KAAK,SAAC,qBAAqB,cAC3B,WAAW,SAAC,0BAA0B;oBAGtC,KAAK,SAAC,sBAAsB,cAC5B,WAAW,SAAC,2BAA2B;oBAGvC,KAAK,YACL,WAAW,SAAC,YAAY;qBAGxB,KAAK,YACL,WAAW,SAAC,aAAa;;;;IAb1B,wCAEa;;IAEb,yCAEW;;IAEX,yCAEuB;;IAEvB,0CAEwB;;;;;IAGtB,sCAAyC;;;;;IACzC,wCAAoB;;;;;IACpB,0CAAqE;;;;;;;;AC/BzE,MAQa,kBAAkB;;;YAJ9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,EAAE,wBAAwB,CAAC;gBAC/D,OAAO,EAAE,CAAC,qBAAqB,EAAE,wBAAwB,CAAC;aAC3D;;;;;;;;;;;;;;;;;"}