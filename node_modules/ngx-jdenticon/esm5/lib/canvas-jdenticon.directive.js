/**
 * @fileoverview added by tsickle
 * Generated from: lib/canvas-jdenticon.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';
import { updateCanvas } from 'jdenticon';
import { JDENTICON_CONFIG } from './config';
// Use same attributes as for VanillaJS Jdenticon.
// tslint:disable:directive-selector no-input-rename
var CanvasJdenticonDirective = /** @class */ (function () {
    function CanvasJdenticonDirective(el, zone, config) {
        this.el = el;
        this.zone = zone;
        this.config = config;
    }
    /**
     * @return {?}
     */
    CanvasJdenticonDirective.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // setTimeout is used to ensure that Angular has updated the host attributes.
        // runOutsideAngular is used to prevent an additional Angular change detection.
        this.zone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                updateCanvas(_this.el.nativeElement, undefined, _this.config);
            }));
        }));
    };
    CanvasJdenticonDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]',
                },] }
    ];
    /** @nocollapse */
    CanvasJdenticonDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NgZone },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [JDENTICON_CONFIG,] }] }
    ]; };
    CanvasJdenticonDirective.propDecorators = {
        hash: [{ type: Input, args: ['data-jdenticon-hash',] }, { type: HostBinding, args: ['attr.data-jdenticon-hash',] }],
        value: [{ type: Input, args: ['data-jdenticon-value',] }, { type: HostBinding, args: ['attr.data-jdenticon-value',] }],
        width: [{ type: Input }, { type: HostBinding, args: ['attr.width',] }],
        height: [{ type: Input }, { type: HostBinding, args: ['attr.height',] }]
    };
    return CanvasJdenticonDirective;
}());
export { CanvasJdenticonDirective };
if (false) {
    /** @type {?} */
    CanvasJdenticonDirective.prototype.hash;
    /** @type {?} */
    CanvasJdenticonDirective.prototype.value;
    /** @type {?} */
    CanvasJdenticonDirective.prototype.width;
    /** @type {?} */
    CanvasJdenticonDirective.prototype.height;
    /**
     * @type {?}
     * @private
     */
    CanvasJdenticonDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    CanvasJdenticonDirective.prototype.zone;
    /**
     * @type {?}
     * @private
     */
    CanvasJdenticonDirective.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FudmFzLWpkZW50aWNvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtamRlbnRpY29uLyIsInNvdXJjZXMiOlsibGliL2NhbnZhcy1qZGVudGljb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWEsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRyxPQUFPLEVBQUUsWUFBWSxFQUFtQixNQUFNLFdBQVcsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxVQUFVLENBQUM7OztBQUs1QztJQXFCRSxrQ0FDVSxFQUFpQyxFQUNqQyxJQUFZLEVBQzBCLE1BQXVCO1FBRjdELE9BQUUsR0FBRixFQUFFLENBQStCO1FBQ2pDLFNBQUksR0FBSixJQUFJLENBQVE7UUFDMEIsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7SUFDbkUsQ0FBQzs7OztJQUVMLDhDQUFXOzs7SUFBWDtRQUFBLGlCQVFDO1FBUEMsNkVBQTZFO1FBQzdFLCtFQUErRTtRQUMvRSxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQjs7O1FBQUM7WUFDMUIsVUFBVTs7O1lBQUM7Z0JBQ1QsWUFBWSxDQUFDLEtBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLFNBQVMsRUFBRSxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDOUQsQ0FBQyxFQUFDLENBQUM7UUFDTCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7O2dCQW5DRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDBEQUEwRDtpQkFDckU7Ozs7Z0JBVGtELFVBQVU7Z0JBQW9CLE1BQU07Z0RBK0JsRixRQUFRLFlBQUksTUFBTSxTQUFDLGdCQUFnQjs7O3VCQW5CckMsS0FBSyxTQUFDLHFCQUFxQixjQUMzQixXQUFXLFNBQUMsMEJBQTBCO3dCQUd0QyxLQUFLLFNBQUMsc0JBQXNCLGNBQzVCLFdBQVcsU0FBQywyQkFBMkI7d0JBR3ZDLEtBQUssWUFDTCxXQUFXLFNBQUMsWUFBWTt5QkFHeEIsS0FBSyxZQUNMLFdBQVcsU0FBQyxhQUFhOztJQW1CNUIsK0JBQUM7Q0FBQSxBQXJDRCxJQXFDQztTQWxDWSx3QkFBd0I7OztJQUVuQyx3Q0FFYTs7SUFFYix5Q0FFVzs7SUFFWCx5Q0FFdUI7O0lBRXZCLDBDQUV3Qjs7Ozs7SUFHdEIsc0NBQXlDOzs7OztJQUN6Qyx3Q0FBb0I7Ozs7O0lBQ3BCLDBDQUFxRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE9uQ2hhbmdlcywgSG9zdEJpbmRpbmcsIEVsZW1lbnRSZWYsIEluamVjdCwgT3B0aW9uYWwsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyB1cGRhdGVDYW52YXMsIEpkZW50aWNvbkNvbmZpZyB9IGZyb20gJ2pkZW50aWNvbic7XHJcbmltcG9ydCB7IEpERU5USUNPTl9DT05GSUcgfSBmcm9tICcuL2NvbmZpZyc7XHJcblxyXG4vLyBVc2Ugc2FtZSBhdHRyaWJ1dGVzIGFzIGZvciBWYW5pbGxhSlMgSmRlbnRpY29uLlxyXG4vLyB0c2xpbnQ6ZGlzYWJsZTpkaXJlY3RpdmUtc2VsZWN0b3Igbm8taW5wdXQtcmVuYW1lXHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ2NhbnZhc1tkYXRhLWpkZW50aWNvbi1oYXNoXSxjYW52YXNbZGF0YS1qZGVudGljb24tdmFsdWVdJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIENhbnZhc0pkZW50aWNvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcblxyXG4gIEBJbnB1dCgnZGF0YS1qZGVudGljb24taGFzaCcpXHJcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtamRlbnRpY29uLWhhc2gnKVxyXG4gIGhhc2g6IHN0cmluZztcclxuXHJcbiAgQElucHV0KCdkYXRhLWpkZW50aWNvbi12YWx1ZScpXHJcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtamRlbnRpY29uLXZhbHVlJylcclxuICB2YWx1ZTogYW55O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIEBIb3N0QmluZGluZygnYXR0ci53aWR0aCcpXHJcbiAgd2lkdGg6IHN0cmluZyB8IG51bWJlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBASG9zdEJpbmRpbmcoJ2F0dHIuaGVpZ2h0JylcclxuICBoZWlnaHQ6IHN0cmluZyB8IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmPEhUTUxDYW52YXNFbGVtZW50PixcclxuICAgIHByaXZhdGUgem9uZTogTmdab25lLFxyXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChKREVOVElDT05fQ09ORklHKSBwcml2YXRlIGNvbmZpZzogSmRlbnRpY29uQ29uZmlnLFxyXG4gICkgeyB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKCk6IHZvaWQge1xyXG4gICAgLy8gc2V0VGltZW91dCBpcyB1c2VkIHRvIGVuc3VyZSB0aGF0IEFuZ3VsYXIgaGFzIHVwZGF0ZWQgdGhlIGhvc3QgYXR0cmlidXRlcy5cclxuICAgIC8vIHJ1bk91dHNpZGVBbmd1bGFyIGlzIHVzZWQgdG8gcHJldmVudCBhbiBhZGRpdGlvbmFsIEFuZ3VsYXIgY2hhbmdlIGRldGVjdGlvbi5cclxuICAgIHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHVwZGF0ZUNhbnZhcyh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHVuZGVmaW5lZCwgdGhpcy5jb25maWcpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbn1cclxuIl19