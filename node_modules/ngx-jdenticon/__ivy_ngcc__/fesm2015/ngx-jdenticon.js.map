{"version":3,"file":"ngx-jdenticon.js","sources":["ngx-jdenticon/lib/config.ts","ngx-jdenticon/lib/svg-jdenticon.directive.ts","ngx-jdenticon/lib/canvas-jdenticon.directive.ts","ngx-jdenticon/lib/ngx-jdenticon.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const JDENTICON_CONFIG = new InjectionToken<string>('JdenticonConfig');\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateSvg, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'svg[data-jdenticon-hash],svg[data-jdenticon-value]',\r\n})\r\nexport class SvgJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<SVGSVGElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateSvg(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateCanvas, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]',\r\n})\r\nexport class CanvasJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<HTMLCanvasElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateCanvas(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SvgJdenticonDirective } from './svg-jdenticon.directive';\r\nimport { CanvasJdenticonDirective } from './canvas-jdenticon.directive';\r\n\r\n@NgModule({\r\n  declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\r\n  exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\r\n})\r\nexport class NgxJdenticonModule { }\r\n"]}