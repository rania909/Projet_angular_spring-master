{"version":3,"file":"ngx-jdenticon.umd.js","sources":["ng://ngx-jdenticon/lib/config.ts","ng://ngx-jdenticon/lib/svg-jdenticon.directive.ts","ng://ngx-jdenticon/lib/canvas-jdenticon.directive.ts","ng://ngx-jdenticon/lib/ngx-jdenticon.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const JDENTICON_CONFIG = new InjectionToken<string>('JdenticonConfig');\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateSvg, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'svg[data-jdenticon-hash],svg[data-jdenticon-value]',\r\n})\r\nexport class SvgJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<SVGSVGElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateSvg(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateCanvas, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]',\r\n})\r\nexport class CanvasJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<HTMLCanvasElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateCanvas(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SvgJdenticonDirective } from './svg-jdenticon.directive';\r\nimport { CanvasJdenticonDirective } from './canvas-jdenticon.directive';\r\n\r\n@NgModule({\r\n  declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\r\n  exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\r\n})\r\nexport class NgxJdenticonModule { }\r\n"],"names":["InjectionToken","updateSvg","Directive","ElementRef","NgZone","Optional","Inject","Input","HostBinding","updateCanvas","NgModule"],"mappings":";;;;;;;;;;;IAAA;AAEA,QAAa,gBAAgB,GAAG,IAAIA,mBAAc,CAAS,iBAAiB,CAAC;;;;;;;ICF7E;;AAOA;QAqBE,+BACU,EAA6B,EAC7B,IAAY,EAC0B,MAAuB;YAF7D,OAAE,GAAF,EAAE,CAA2B;YAC7B,SAAI,GAAJ,IAAI,CAAQ;YAC0B,WAAM,GAAN,MAAM,CAAiB;SAClE;;;;QAEL,2CAAW;;;QAAX;YAAA,iBAQC;;;YALC,IAAI,CAAC,IAAI,CAAC,iBAAiB;;;YAAC;gBAC1B,UAAU;;;gBAAC;oBACTC,mBAAS,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;iBAC1D,EAAC,CAAC;aACJ,EAAC,CAAC;SACJ;;oBAnCFC,cAAS,SAAC;wBACT,QAAQ,EAAE,oDAAoD;qBAC/D;;;;oBATkDC,eAAU;oBAAoBC,WAAM;oDA+BlFC,aAAQ,YAAIC,WAAM,SAAC,gBAAgB;;;2BAnBrCC,UAAK,SAAC,qBAAqB,cAC3BC,gBAAW,SAAC,0BAA0B;4BAGtCD,UAAK,SAAC,sBAAsB,cAC5BC,gBAAW,SAAC,2BAA2B;4BAGvCD,UAAK,YACLC,gBAAW,SAAC,YAAY;6BAGxBD,UAAK,YACLC,gBAAW,SAAC,aAAa;;QAmB5B,4BAAC;KArCD,IAqCC;;;QAhCC,qCAEa;;QAEb,sCAEW;;QAEX,sCAEuB;;QAEvB,uCAEwB;;;;;QAGtB,mCAAqC;;;;;QACrC,qCAAoB;;;;;QACpB,uCAAqE;;;;;;;;IC/BzE;;AAOA;QAqBE,kCACU,EAAiC,EACjC,IAAY,EAC0B,MAAuB;YAF7D,OAAE,GAAF,EAAE,CAA+B;YACjC,SAAI,GAAJ,IAAI,CAAQ;YAC0B,WAAM,GAAN,MAAM,CAAiB;SAClE;;;;QAEL,8CAAW;;;QAAX;YAAA,iBAQC;;;YALC,IAAI,CAAC,IAAI,CAAC,iBAAiB;;;YAAC;gBAC1B,UAAU;;;gBAAC;oBACTC,sBAAY,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;iBAC7D,EAAC,CAAC;aACJ,EAAC,CAAC;SACJ;;oBAnCFP,cAAS,SAAC;wBACT,QAAQ,EAAE,0DAA0D;qBACrE;;;;oBATkDC,eAAU;oBAAoBC,WAAM;oDA+BlFC,aAAQ,YAAIC,WAAM,SAAC,gBAAgB;;;2BAnBrCC,UAAK,SAAC,qBAAqB,cAC3BC,gBAAW,SAAC,0BAA0B;4BAGtCD,UAAK,SAAC,sBAAsB,cAC5BC,gBAAW,SAAC,2BAA2B;4BAGvCD,UAAK,YACLC,gBAAW,SAAC,YAAY;6BAGxBD,UAAK,YACLC,gBAAW,SAAC,aAAa;;QAmB5B,+BAAC;KArCD,IAqCC;;;QAhCC,wCAEa;;QAEb,yCAEW;;QAEX,yCAEuB;;QAEvB,0CAEwB;;;;;QAGtB,sCAAyC;;;;;QACzC,wCAAoB;;;;;QACpB,0CAAqE;;;;;;;;AC/BzE;QAIA;SAImC;;oBAJlCE,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,qBAAqB,EAAE,wBAAwB,CAAC;wBAC/D,OAAO,EAAE,CAAC,qBAAqB,EAAE,wBAAwB,CAAC;qBAC3D;;QACiC,yBAAC;KAJnC;;;;;;;;;;;;;;;"}