{"version":3,"sources":["ng://ngx-jdenticon/lib/config.ts","ng://ngx-jdenticon/lib/svg-jdenticon.directive.ts","ng://ngx-jdenticon/lib/canvas-jdenticon.directive.ts","ng://ngx-jdenticon/lib/ngx-jdenticon.module.ts"],"names":["JDENTICON_CONFIG","InjectionToken","SvgJdenticonDirective","el","zone","config","this","prototype","ngOnChanges","_this","runOutsideAngular","setTimeout","updateSvg","nativeElement","undefined","Directive","args","selector","ElementRef","NgZone","Optional","type","Inject","Input","HostBinding","CanvasJdenticonDirective","updateCanvas","NgxJdenticonModule","NgModule","declarations","exports"],"mappings":"kUAEA,IAAaA,EAAmB,IAAIC,EAAAA,eAAuB,mBCK3DC,EAAA,WAqBE,SAAAA,EACUC,EACAC,EACsCC,GAFtCC,KAAAH,GAAAA,EACAG,KAAAF,KAAAA,EACsCE,KAAAD,OAAAA,EAalD,OAVEH,EAAAK,UAAAC,YAAA,WAAA,IAAAC,EAAAH,KAGEA,KAAKF,KAAKM,mBAAiB,WACzBC,YAAU,WACRC,EAAAA,UAAUH,EAAKN,GAAGU,mBAAeC,EAAWL,EAAKJ,mCAhCxDU,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kGARuCC,EAAAA,kBAA8BC,EAAAA,uCA+B5EC,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMN,KAAA,CAAChB,sCAnBrBuB,EAAAA,MAAKP,KAAA,CAAC,wBAAqB,CAAAK,KAC3BG,EAAAA,YAAWR,KAAA,CAAC,2CAGZO,EAAAA,MAAKP,KAAA,CAAC,yBAAsB,CAAAK,KAC5BG,EAAAA,YAAWR,KAAA,CAAC,4CAGZO,EAAAA,OAAK,CAAAF,KACLG,EAAAA,YAAWR,KAAA,CAAC,8BAGZO,EAAAA,OAAK,CAAAF,KACLG,EAAAA,YAAWR,KAAA,CAAC,kBAmBfd,EArCA,GCAA,IAAAuB,EAAA,WAqBE,SAAAA,EACUtB,EACAC,EACsCC,GAFtCC,KAAAH,GAAAA,EACAG,KAAAF,KAAAA,EACsCE,KAAAD,OAAAA,EAalD,OAVEoB,EAAAlB,UAAAC,YAAA,WAAA,IAAAC,EAAAH,KAGEA,KAAKF,KAAKM,mBAAiB,WACzBC,YAAU,WACRe,EAAAA,aAAajB,EAAKN,GAAGU,mBAAeC,EAAWL,EAAKJ,mCAhC3DU,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wGARuCC,EAAAA,kBAA8BC,EAAAA,uCA+B5EC,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMN,KAAA,CAAChB,sCAnBrBuB,EAAAA,MAAKP,KAAA,CAAC,wBAAqB,CAAAK,KAC3BG,EAAAA,YAAWR,KAAA,CAAC,2CAGZO,EAAAA,MAAKP,KAAA,CAAC,yBAAsB,CAAAK,KAC5BG,EAAAA,YAAWR,KAAA,CAAC,4CAGZO,EAAAA,OAAK,CAAAF,KACLG,EAAAA,YAAWR,KAAA,CAAC,8BAGZO,EAAAA,OAAK,CAAAF,KACLG,EAAAA,YAAWR,KAAA,CAAC,kBAmBfS,EArCA,GCPA,IAAAE,EAAA,WAIA,SAAAA,KAIkC,2BAJjCC,EAAAA,SAAQZ,KAAA,CAAC,CACRa,aAAc,CAAC3B,EAAuBuB,GACtCK,QAAS,CAAC5B,EAAuBuB,OAEDE,EARlC","sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const JDENTICON_CONFIG = new InjectionToken<string>('JdenticonConfig');\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateSvg, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'svg[data-jdenticon-hash],svg[data-jdenticon-value]',\r\n})\r\nexport class SvgJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<SVGSVGElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateSvg(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnChanges, HostBinding, ElementRef, Inject, Optional, NgZone } from '@angular/core';\r\nimport { updateCanvas, JdenticonConfig } from 'jdenticon';\r\nimport { JDENTICON_CONFIG } from './config';\r\n\r\n// Use same attributes as for VanillaJS Jdenticon.\r\n// tslint:disable:directive-selector no-input-rename\r\n\r\n@Directive({\r\n  selector: 'canvas[data-jdenticon-hash],canvas[data-jdenticon-value]',\r\n})\r\nexport class CanvasJdenticonDirective implements OnChanges {\r\n\r\n  @Input('data-jdenticon-hash')\r\n  @HostBinding('attr.data-jdenticon-hash')\r\n  hash: string;\r\n\r\n  @Input('data-jdenticon-value')\r\n  @HostBinding('attr.data-jdenticon-value')\r\n  value: any;\r\n\r\n  @Input()\r\n  @HostBinding('attr.width')\r\n  width: string | number;\r\n\r\n  @Input()\r\n  @HostBinding('attr.height')\r\n  height: string | number;\r\n\r\n  constructor(\r\n    private el: ElementRef<HTMLCanvasElement>,\r\n    private zone: NgZone,\r\n    @Optional() @Inject(JDENTICON_CONFIG) private config: JdenticonConfig,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    // setTimeout is used to ensure that Angular has updated the host attributes.\r\n    // runOutsideAngular is used to prevent an additional Angular change detection.\r\n    this.zone.runOutsideAngular(() => {\r\n      setTimeout(() => {\r\n        updateCanvas(this.el.nativeElement, undefined, this.config);\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SvgJdenticonDirective } from './svg-jdenticon.directive';\r\nimport { CanvasJdenticonDirective } from './canvas-jdenticon.directive';\r\n\r\n@NgModule({\r\n  declarations: [SvgJdenticonDirective, CanvasJdenticonDirective],\r\n  exports: [SvgJdenticonDirective, CanvasJdenticonDirective]\r\n})\r\nexport class NgxJdenticonModule { }\r\n"]}